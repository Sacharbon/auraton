"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/proxy-memoize";
exports.ids = ["vendor-chunks/proxy-memoize"];
exports.modules = {

/***/ "(ssr)/./node_modules/proxy-memoize/dist/memoize.js":
/*!****************************************************!*\
  !*** ./node_modules/proxy-memoize/dist/memoize.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize: () => (/* binding */ memoize)\n/* harmony export */ });\n/* harmony import */ var proxy_compare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-compare */ \"(ssr)/./node_modules/proxy-compare/dist/index.js\");\n\n// This is required only for performance.\n// https://github.com/dai-shi/proxy-memoize/issues/68\nconst targetCache = new WeakMap();\n// constants from proxy-compare\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\nconst trackMemoUntrackedObjSet = new WeakSet();\nconst isObject = (x) => typeof x === 'object' && x !== null;\nconst untrack = (x, seen) => {\n    if (!isObject(x))\n        return x;\n    const untrackedObj = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(x);\n    if (untrackedObj) {\n        (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.trackMemo)(x);\n        trackMemoUntrackedObjSet.add(untrackedObj);\n        return untrackedObj;\n    }\n    if (!seen.has(x)) {\n        seen.add(x);\n        Object.entries(x).forEach(([k, v]) => {\n            const vv = untrack(v, seen);\n            if (!Object.is(vv, v))\n                x[k] = vv;\n        });\n    }\n    return x;\n};\nconst touchAffected = (dst, src, affected) => {\n    var _a, _b, _c;\n    if (!isObject(dst) || !isObject(src))\n        return;\n    const untrackedObj = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(src);\n    const used = affected.get(untrackedObj || src);\n    if (!used) {\n        if (trackMemoUntrackedObjSet.has(untrackedObj)) {\n            (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.trackMemo)(dst);\n        }\n        return;\n    }\n    (_a = used[HAS_KEY_PROPERTY]) === null || _a === void 0 ? void 0 : _a.forEach((key) => {\n        Reflect.has(dst, key);\n    });\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        Reflect.ownKeys(dst);\n    }\n    (_b = used[HAS_OWN_KEY_PROPERTY]) === null || _b === void 0 ? void 0 : _b.forEach((key) => {\n        Reflect.getOwnPropertyDescriptor(dst, key);\n    });\n    (_c = used[KEYS_PROPERTY]) === null || _c === void 0 ? void 0 : _c.forEach((key) => {\n        touchAffected(dst[key], src[key], affected);\n    });\n};\nconst isOriginalEqual = (x, y) => {\n    for (let xx = x; xx; x = xx, xx = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(xx))\n        ;\n    for (let yy = y; yy; y = yy, yy = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(yy))\n        ;\n    return Object.is(x, y);\n};\n// properties\nconst OBJ_PROPERTY = 'o';\nconst RESULT_PROPERTY = 'r';\nconst AFFECTED_PROPERTY = 'a';\n/**\n * Create a memoized function\n *\n * @example\n * import { memoize } from 'proxy-memoize';\n *\n * const fn = memoize(obj => ({ sum: obj.a + obj.b, diff: obj.a - obj.b }));\n *\n * @param options\n * @param options.size - (default: 1)\n * @param options.noWeakMap - disable tier-1 cache (default: false)\n */\nfunction memoize(fn, options) {\n    var _a;\n    let memoListHead = 0;\n    const size = (_a = options === null || options === void 0 ? void 0 : options.size) !== null && _a !== void 0 ? _a : 1;\n    const memoList = [];\n    const resultCache = (options === null || options === void 0 ? void 0 : options.noWeakMap) ? null : new WeakMap();\n    const memoizedFn = (obj) => {\n        const cache = resultCache === null || resultCache === void 0 ? void 0 : resultCache.get(obj);\n        if (cache) {\n            return cache;\n        }\n        for (let i = 0; i < size; i += 1) {\n            const memo = memoList[(memoListHead + i) % size];\n            if (!memo)\n                break;\n            const { [OBJ_PROPERTY]: memoObj, [AFFECTED_PROPERTY]: memoAffected, [RESULT_PROPERTY]: memoResult, } = memo;\n            if (!(0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.isChanged)(memoObj, obj, memoAffected, new WeakMap(), isOriginalEqual)) {\n                touchAffected(obj, memoObj, memoAffected);\n                resultCache === null || resultCache === void 0 ? void 0 : resultCache.set(obj, memoResult);\n                return memoResult;\n            }\n        }\n        const affected = new WeakMap();\n        const proxy = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.createProxy)(obj, affected, undefined, targetCache);\n        const result = untrack(fn(proxy), new WeakSet());\n        touchAffected(obj, obj, affected);\n        const entry = {\n            [OBJ_PROPERTY]: obj,\n            [RESULT_PROPERTY]: result,\n            [AFFECTED_PROPERTY]: affected,\n        };\n        memoListHead = (memoListHead - 1 + size) % size;\n        memoList[memoListHead] = entry;\n        resultCache === null || resultCache === void 0 ? void 0 : resultCache.set(obj, result);\n        return result;\n    };\n    return memoizedFn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHJveHktbWVtb2l6ZS9kaXN0L21lbW9pemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Y7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVk7QUFDckM7QUFDQSxRQUFRLHdEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBWTtBQUNyQztBQUNBO0FBQ0E7QUFDQSxZQUFZLHdEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQkFBcUIsSUFBSSxhQUFhLDJEQUFZO0FBQ2xEO0FBQ0EscUJBQXFCLElBQUksYUFBYSwyREFBWTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0EsZ0NBQWdDLHlDQUF5QztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixVQUFVO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2RkFBNkY7QUFDakgsaUJBQWlCLHdEQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwREFBVztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9zYWNoYS9FcGl0ZWNoL0ctRVBJLTMwMC1SRU4tMy0xLXByb2plY3R3ZWVrLW5hdGhhbi5qZWFubm90L2Zyb250L25vZGVfbW9kdWxlcy9wcm94eS1tZW1vaXplL2Rpc3QvbWVtb2l6ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVQcm94eSwgaXNDaGFuZ2VkLCBnZXRVbnRyYWNrZWQsIHRyYWNrTWVtbyB9IGZyb20gJ3Byb3h5LWNvbXBhcmUnO1xuLy8gVGhpcyBpcyByZXF1aXJlZCBvbmx5IGZvciBwZXJmb3JtYW5jZS5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9kYWktc2hpL3Byb3h5LW1lbW9pemUvaXNzdWVzLzY4XG5jb25zdCB0YXJnZXRDYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG4vLyBjb25zdGFudHMgZnJvbSBwcm94eS1jb21wYXJlXG5jb25zdCBIQVNfS0VZX1BST1BFUlRZID0gJ2gnO1xuY29uc3QgQUxMX09XTl9LRVlTX1BST1BFUlRZID0gJ3cnO1xuY29uc3QgSEFTX09XTl9LRVlfUFJPUEVSVFkgPSAnbyc7XG5jb25zdCBLRVlTX1BST1BFUlRZID0gJ2snO1xuY29uc3QgdHJhY2tNZW1vVW50cmFja2VkT2JqU2V0ID0gbmV3IFdlYWtTZXQoKTtcbmNvbnN0IGlzT2JqZWN0ID0gKHgpID0+IHR5cGVvZiB4ID09PSAnb2JqZWN0JyAmJiB4ICE9PSBudWxsO1xuY29uc3QgdW50cmFjayA9ICh4LCBzZWVuKSA9PiB7XG4gICAgaWYgKCFpc09iamVjdCh4KSlcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgY29uc3QgdW50cmFja2VkT2JqID0gZ2V0VW50cmFja2VkKHgpO1xuICAgIGlmICh1bnRyYWNrZWRPYmopIHtcbiAgICAgICAgdHJhY2tNZW1vKHgpO1xuICAgICAgICB0cmFja01lbW9VbnRyYWNrZWRPYmpTZXQuYWRkKHVudHJhY2tlZE9iaik7XG4gICAgICAgIHJldHVybiB1bnRyYWNrZWRPYmo7XG4gICAgfVxuICAgIGlmICghc2Vlbi5oYXMoeCkpIHtcbiAgICAgICAgc2Vlbi5hZGQoeCk7XG4gICAgICAgIE9iamVjdC5lbnRyaWVzKHgpLmZvckVhY2goKFtrLCB2XSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdnYgPSB1bnRyYWNrKHYsIHNlZW4pO1xuICAgICAgICAgICAgaWYgKCFPYmplY3QuaXModnYsIHYpKVxuICAgICAgICAgICAgICAgIHhba10gPSB2djtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB4O1xufTtcbmNvbnN0IHRvdWNoQWZmZWN0ZWQgPSAoZHN0LCBzcmMsIGFmZmVjdGVkKSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgaWYgKCFpc09iamVjdChkc3QpIHx8ICFpc09iamVjdChzcmMpKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgdW50cmFja2VkT2JqID0gZ2V0VW50cmFja2VkKHNyYyk7XG4gICAgY29uc3QgdXNlZCA9IGFmZmVjdGVkLmdldCh1bnRyYWNrZWRPYmogfHwgc3JjKTtcbiAgICBpZiAoIXVzZWQpIHtcbiAgICAgICAgaWYgKHRyYWNrTWVtb1VudHJhY2tlZE9ialNldC5oYXModW50cmFja2VkT2JqKSkge1xuICAgICAgICAgICAgdHJhY2tNZW1vKGRzdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAoX2EgPSB1c2VkW0hBU19LRVlfUFJPUEVSVFldKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIFJlZmxlY3QuaGFzKGRzdCwga2V5KTtcbiAgICB9KTtcbiAgICBpZiAodXNlZFtBTExfT1dOX0tFWVNfUFJPUEVSVFldID09PSB0cnVlKSB7XG4gICAgICAgIFJlZmxlY3Qub3duS2V5cyhkc3QpO1xuICAgIH1cbiAgICAoX2IgPSB1c2VkW0hBU19PV05fS0VZX1BST1BFUlRZXSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihkc3QsIGtleSk7XG4gICAgfSk7XG4gICAgKF9jID0gdXNlZFtLRVlTX1BST1BFUlRZXSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICB0b3VjaEFmZmVjdGVkKGRzdFtrZXldLCBzcmNba2V5XSwgYWZmZWN0ZWQpO1xuICAgIH0pO1xufTtcbmNvbnN0IGlzT3JpZ2luYWxFcXVhbCA9ICh4LCB5KSA9PiB7XG4gICAgZm9yIChsZXQgeHggPSB4OyB4eDsgeCA9IHh4LCB4eCA9IGdldFVudHJhY2tlZCh4eCkpXG4gICAgICAgIDtcbiAgICBmb3IgKGxldCB5eSA9IHk7IHl5OyB5ID0geXksIHl5ID0gZ2V0VW50cmFja2VkKHl5KSlcbiAgICAgICAgO1xuICAgIHJldHVybiBPYmplY3QuaXMoeCwgeSk7XG59O1xuLy8gcHJvcGVydGllc1xuY29uc3QgT0JKX1BST1BFUlRZID0gJ28nO1xuY29uc3QgUkVTVUxUX1BST1BFUlRZID0gJ3InO1xuY29uc3QgQUZGRUNURURfUFJPUEVSVFkgPSAnYSc7XG4vKipcbiAqIENyZWF0ZSBhIG1lbW9pemVkIGZ1bmN0aW9uXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IG1lbW9pemUgfSBmcm9tICdwcm94eS1tZW1vaXplJztcbiAqXG4gKiBjb25zdCBmbiA9IG1lbW9pemUob2JqID0+ICh7IHN1bTogb2JqLmEgKyBvYmouYiwgZGlmZjogb2JqLmEgLSBvYmouYiB9KSk7XG4gKlxuICogQHBhcmFtIG9wdGlvbnNcbiAqIEBwYXJhbSBvcHRpb25zLnNpemUgLSAoZGVmYXVsdDogMSlcbiAqIEBwYXJhbSBvcHRpb25zLm5vV2Vha01hcCAtIGRpc2FibGUgdGllci0xIGNhY2hlIChkZWZhdWx0OiBmYWxzZSlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lbW9pemUoZm4sIG9wdGlvbnMpIHtcbiAgICB2YXIgX2E7XG4gICAgbGV0IG1lbW9MaXN0SGVhZCA9IDA7XG4gICAgY29uc3Qgc2l6ZSA9IChfYSA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zaXplKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAxO1xuICAgIGNvbnN0IG1lbW9MaXN0ID0gW107XG4gICAgY29uc3QgcmVzdWx0Q2FjaGUgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm5vV2Vha01hcCkgPyBudWxsIDogbmV3IFdlYWtNYXAoKTtcbiAgICBjb25zdCBtZW1vaXplZEZuID0gKG9iaikgPT4ge1xuICAgICAgICBjb25zdCBjYWNoZSA9IHJlc3VsdENhY2hlID09PSBudWxsIHx8IHJlc3VsdENhY2hlID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZXN1bHRDYWNoZS5nZXQob2JqKTtcbiAgICAgICAgaWYgKGNhY2hlKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGU7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpICs9IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lbW8gPSBtZW1vTGlzdFsobWVtb0xpc3RIZWFkICsgaSkgJSBzaXplXTtcbiAgICAgICAgICAgIGlmICghbWVtbylcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNvbnN0IHsgW09CSl9QUk9QRVJUWV06IG1lbW9PYmosIFtBRkZFQ1RFRF9QUk9QRVJUWV06IG1lbW9BZmZlY3RlZCwgW1JFU1VMVF9QUk9QRVJUWV06IG1lbW9SZXN1bHQsIH0gPSBtZW1vO1xuICAgICAgICAgICAgaWYgKCFpc0NoYW5nZWQobWVtb09iaiwgb2JqLCBtZW1vQWZmZWN0ZWQsIG5ldyBXZWFrTWFwKCksIGlzT3JpZ2luYWxFcXVhbCkpIHtcbiAgICAgICAgICAgICAgICB0b3VjaEFmZmVjdGVkKG9iaiwgbWVtb09iaiwgbWVtb0FmZmVjdGVkKTtcbiAgICAgICAgICAgICAgICByZXN1bHRDYWNoZSA9PT0gbnVsbCB8fCByZXN1bHRDYWNoZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVzdWx0Q2FjaGUuc2V0KG9iaiwgbWVtb1Jlc3VsdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lbW9SZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWZmZWN0ZWQgPSBuZXcgV2Vha01hcCgpO1xuICAgICAgICBjb25zdCBwcm94eSA9IGNyZWF0ZVByb3h5KG9iaiwgYWZmZWN0ZWQsIHVuZGVmaW5lZCwgdGFyZ2V0Q2FjaGUpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSB1bnRyYWNrKGZuKHByb3h5KSwgbmV3IFdlYWtTZXQoKSk7XG4gICAgICAgIHRvdWNoQWZmZWN0ZWQob2JqLCBvYmosIGFmZmVjdGVkKTtcbiAgICAgICAgY29uc3QgZW50cnkgPSB7XG4gICAgICAgICAgICBbT0JKX1BST1BFUlRZXTogb2JqLFxuICAgICAgICAgICAgW1JFU1VMVF9QUk9QRVJUWV06IHJlc3VsdCxcbiAgICAgICAgICAgIFtBRkZFQ1RFRF9QUk9QRVJUWV06IGFmZmVjdGVkLFxuICAgICAgICB9O1xuICAgICAgICBtZW1vTGlzdEhlYWQgPSAobWVtb0xpc3RIZWFkIC0gMSArIHNpemUpICUgc2l6ZTtcbiAgICAgICAgbWVtb0xpc3RbbWVtb0xpc3RIZWFkXSA9IGVudHJ5O1xuICAgICAgICByZXN1bHRDYWNoZSA9PT0gbnVsbCB8fCByZXN1bHRDYWNoZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVzdWx0Q2FjaGUuc2V0KG9iaiwgcmVzdWx0KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIHJldHVybiBtZW1vaXplZEZuO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/proxy-memoize/dist/memoize.js\n");

/***/ })

};
;