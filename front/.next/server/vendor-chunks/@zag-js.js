"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js";
exports.ids = ["vendor-chunks/@zag-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@zag-js/accordion/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/accordion/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/accordion.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"accordion\").parts(\"root\", \"item\", \"itemTrigger\", \"itemContent\", \"itemIndicator\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `accordion:${ctx.id}`,\n  getItemId: (ctx, value) => ctx.ids?.item?.(value) ?? `accordion:${ctx.id}:item:${value}`,\n  getItemContentId: (ctx, value) => ctx.ids?.itemContent?.(value) ?? `accordion:${ctx.id}:content:${value}`,\n  getItemTriggerId: (ctx, value) => ctx.ids?.itemTrigger?.(value) ?? `accordion:${ctx.id}:trigger:${value}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getTriggerEls: (ctx) => {\n    const ownerId = CSS.escape(dom.getRootId(ctx));\n    const selector = `[aria-controls][data-ownedby='${ownerId}']:not([disabled])`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getRootEl(ctx), selector);\n  },\n  getFirstTriggerEl: (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(dom.getTriggerEls(ctx)),\n  getLastTriggerEl: (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(dom.getTriggerEls(ctx)),\n  getNextTriggerEl: (ctx, id) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextById)(dom.getTriggerEls(ctx), dom.getItemTriggerId(ctx, id)),\n  getPrevTriggerEl: (ctx, id) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.prevById)(dom.getTriggerEls(ctx), dom.getItemTriggerId(ctx, id))\n});\n\n// src/accordion.connect.ts\nfunction connect(state, send, normalize) {\n  const focusedValue = state.context.focusedValue;\n  const value = state.context.value;\n  const multiple = state.context.multiple;\n  function setValue(value2) {\n    let nextValue = value2;\n    if (multiple && nextValue.length > 1) {\n      nextValue = [nextValue[0]];\n    }\n    send({ type: \"VALUE.SET\", value: nextValue });\n  }\n  function getItemState(props2) {\n    return {\n      expanded: value.includes(props2.value),\n      focused: focusedValue === props2.value,\n      disabled: Boolean(props2.disabled ?? state.context.disabled)\n    };\n  }\n  return {\n    focusedValue,\n    value,\n    setValue,\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, props2.value),\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getItemContentProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemContent.attrs,\n        dir: state.context.dir,\n        role: \"region\",\n        id: dom.getItemContentId(state.context, props2.value),\n        \"aria-labelledby\": dom.getItemTriggerId(state.context, props2.value),\n        hidden: !itemState.expanded,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getItemTriggerProps(props2) {\n      const { value: value2 } = props2;\n      const itemState = getItemState(props2);\n      return normalize.button({\n        ...parts.itemTrigger.attrs,\n        type: \"button\",\n        dir: state.context.dir,\n        id: dom.getItemTriggerId(state.context, value2),\n        \"aria-controls\": dom.getItemContentId(state.context, value2),\n        \"aria-expanded\": itemState.expanded,\n        disabled: itemState.disabled,\n        \"data-orientation\": state.context.orientation,\n        \"aria-disabled\": itemState.disabled,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-ownedby\": dom.getRootId(state.context),\n        onFocus() {\n          if (itemState.disabled) return;\n          send({ type: \"TRIGGER.FOCUS\", value: value2 });\n        },\n        onBlur() {\n          if (itemState.disabled) return;\n          send(\"TRIGGER.BLUR\");\n        },\n        onClick(event) {\n          if (itemState.disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n          send({ type: \"TRIGGER.CLICK\", value: value2 });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          const keyMap = {\n            ArrowDown() {\n              if (state.context.isHorizontal) return;\n              send({ type: \"GOTO.NEXT\", value: value2 });\n            },\n            ArrowUp() {\n              if (state.context.isHorizontal) return;\n              send({ type: \"GOTO.PREV\", value: value2 });\n            },\n            ArrowRight() {\n              if (!state.context.isHorizontal) return;\n              send({ type: \"GOTO.NEXT\", value: value2 });\n            },\n            ArrowLeft() {\n              if (!state.context.isHorizontal) return;\n              send({ type: \"GOTO.PREV\", value: value2 });\n            },\n            Home() {\n              send({ type: \"GOTO.FIRST\", value: value2 });\n            },\n            End() {\n              send({ type: \"GOTO.LAST\", value: value2 });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: state.context.dir,\n            orientation: state.context.orientation\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    }\n  };\n}\nvar { and, not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"accordion\",\n      initial: \"idle\",\n      context: {\n        focusedValue: null,\n        value: [],\n        collapsible: false,\n        multiple: false,\n        orientation: \"vertical\",\n        ...ctx\n      },\n      watch: {\n        value: \"coarseValue\",\n        multiple: \"coarseValue\"\n      },\n      created: \"coarseValue\",\n      computed: {\n        isHorizontal: (ctx2) => ctx2.orientation === \"horizontal\"\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            \"TRIGGER.FOCUS\": {\n              target: \"focused\",\n              actions: \"setFocusedValue\"\n            }\n          }\n        },\n        focused: {\n          on: {\n            \"GOTO.NEXT\": {\n              actions: \"focusNextTrigger\"\n            },\n            \"GOTO.PREV\": {\n              actions: \"focusPrevTrigger\"\n            },\n            \"TRIGGER.CLICK\": [\n              {\n                guard: and(\"isExpanded\", \"canToggle\"),\n                actions: [\"collapse\"]\n              },\n              {\n                guard: not(\"isExpanded\"),\n                actions: [\"expand\"]\n              }\n            ],\n            \"GOTO.FIRST\": {\n              actions: \"focusFirstTrigger\"\n            },\n            \"GOTO.LAST\": {\n              actions: \"focusLastTrigger\"\n            },\n            \"TRIGGER.BLUR\": {\n              target: \"idle\",\n              actions: \"clearFocusedValue\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        canToggle: (ctx2) => !!ctx2.collapsible || !!ctx2.multiple,\n        isExpanded: (ctx2, evt) => ctx2.value.includes(evt.value)\n      },\n      actions: {\n        collapse(ctx2, evt) {\n          const next = ctx2.multiple ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(ctx2.value, evt.value) : [];\n          set.value(ctx2, ctx2.multiple ? next : []);\n        },\n        expand(ctx2, evt) {\n          const next = ctx2.multiple ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(ctx2.value, evt.value) : [evt.value];\n          set.value(ctx2, next);\n        },\n        focusFirstTrigger(ctx2) {\n          dom.getFirstTriggerEl(ctx2)?.focus();\n        },\n        focusLastTrigger(ctx2) {\n          dom.getLastTriggerEl(ctx2)?.focus();\n        },\n        focusNextTrigger(ctx2) {\n          if (!ctx2.focusedValue) return;\n          const triggerEl = dom.getNextTriggerEl(ctx2, ctx2.focusedValue);\n          triggerEl?.focus();\n        },\n        focusPrevTrigger(ctx2) {\n          if (!ctx2.focusedValue) return;\n          const triggerEl = dom.getPrevTriggerEl(ctx2, ctx2.focusedValue);\n          triggerEl?.focus();\n        },\n        setFocusedValue(ctx2, evt) {\n          set.focusedValue(ctx2, evt.value);\n        },\n        clearFocusedValue(ctx2) {\n          set.focusedValue(ctx2, null);\n        },\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        coarseValue(ctx2) {\n          if (!ctx2.multiple && ctx2.value.length > 1) {\n            (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The value of accordion should be a single value when multiple is false.`);\n            ctx2.value = [ctx2.value[0]];\n          }\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change(ctx) {\n    ctx.onValueChange?.({ value: Array.from(ctx.value) });\n  },\n  focusChange(ctx) {\n    ctx.onFocusChange?.({ value: ctx.focusedValue });\n  }\n};\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  focusedValue(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.focusedValue, value)) return;\n    ctx.focusedValue = value;\n    invoke.focusChange(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"collapsible\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"multiple\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"orientation\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"value\", \"disabled\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/accordion/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/anatomy/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAnatomy: () => (/* binding */ createAnatomy)\n/* harmony export */ });\n// src/create-anatomy.ts\nvar createAnatomy = (name, parts = []) => ({\n  parts: (...values) => {\n    if (isEmpty(parts)) {\n      return createAnatomy(name, values);\n    }\n    throw new Error(\"createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?\");\n  },\n  extendWith: (...values) => createAnatomy(name, [...parts, ...values]),\n  rename: (newName) => createAnatomy(newName, parts),\n  keys: () => parts,\n  build: () => [...new Set(parts)].reduce(\n    (prev, part) => Object.assign(prev, {\n      [part]: {\n        selector: [\n          `&[data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`,\n          `& [data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`\n        ].join(\", \"),\n        attrs: { \"data-scope\": toKebabCase(name), \"data-part\": toKebabCase(part) }\n      }\n    }),\n    {}\n  )\n});\nvar toKebabCase = (value) => value.replace(/([A-Z])([A-Z])/g, \"$1-$2\").replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[\\s_]+/g, \"-\").toLowerCase();\nvar isEmpty = (v) => v.length === 0;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hbmF0b215L2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixrQkFBa0IsZ0JBQWdCLGtCQUFrQjtBQUMvRSw0QkFBNEIsa0JBQWtCLGdCQUFnQixrQkFBa0I7QUFDaEY7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBOztBQUV5QiIsInNvdXJjZXMiOlsiL2hvbWUvc2FjaGEvRXBpdGVjaC9HLUVQSS0zMDAtUkVOLTMtMS1wcm9qZWN0d2Vlay1uYXRoYW4uamVhbm5vdC9mcm9udC9ub2RlX21vZHVsZXMvQHphZy1qcy9hbmF0b215L2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jcmVhdGUtYW5hdG9teS50c1xudmFyIGNyZWF0ZUFuYXRvbXkgPSAobmFtZSwgcGFydHMgPSBbXSkgPT4gKHtcbiAgcGFydHM6ICguLi52YWx1ZXMpID0+IHtcbiAgICBpZiAoaXNFbXB0eShwYXJ0cykpIHtcbiAgICAgIHJldHVybiBjcmVhdGVBbmF0b215KG5hbWUsIHZhbHVlcyk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcImNyZWF0ZUFuYXRvbXkoKS5wYXJ0cyguLi4pIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBvbmNlLiBEaWQgeW91IG1lYW4gdG8gdXNlIC5leHRlbmRXaXRoKC4uLikgP1wiKTtcbiAgfSxcbiAgZXh0ZW5kV2l0aDogKC4uLnZhbHVlcykgPT4gY3JlYXRlQW5hdG9teShuYW1lLCBbLi4ucGFydHMsIC4uLnZhbHVlc10pLFxuICByZW5hbWU6IChuZXdOYW1lKSA9PiBjcmVhdGVBbmF0b215KG5ld05hbWUsIHBhcnRzKSxcbiAga2V5czogKCkgPT4gcGFydHMsXG4gIGJ1aWxkOiAoKSA9PiBbLi4ubmV3IFNldChwYXJ0cyldLnJlZHVjZShcbiAgICAocHJldiwgcGFydCkgPT4gT2JqZWN0LmFzc2lnbihwcmV2LCB7XG4gICAgICBbcGFydF06IHtcbiAgICAgICAgc2VsZWN0b3I6IFtcbiAgICAgICAgICBgJltkYXRhLXNjb3BlPVwiJHt0b0tlYmFiQ2FzZShuYW1lKX1cIl1bZGF0YS1wYXJ0PVwiJHt0b0tlYmFiQ2FzZShwYXJ0KX1cIl1gLFxuICAgICAgICAgIGAmIFtkYXRhLXNjb3BlPVwiJHt0b0tlYmFiQ2FzZShuYW1lKX1cIl1bZGF0YS1wYXJ0PVwiJHt0b0tlYmFiQ2FzZShwYXJ0KX1cIl1gXG4gICAgICAgIF0uam9pbihcIiwgXCIpLFxuICAgICAgICBhdHRyczogeyBcImRhdGEtc2NvcGVcIjogdG9LZWJhYkNhc2UobmFtZSksIFwiZGF0YS1wYXJ0XCI6IHRvS2ViYWJDYXNlKHBhcnQpIH1cbiAgICAgIH1cbiAgICB9KSxcbiAgICB7fVxuICApXG59KTtcbnZhciB0b0tlYmFiQ2FzZSA9ICh2YWx1ZSkgPT4gdmFsdWUucmVwbGFjZSgvKFtBLVpdKShbQS1aXSkvZywgXCIkMS0kMlwiKS5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpLnJlcGxhY2UoL1tcXHNfXSsvZywgXCItXCIpLnRvTG93ZXJDYXNlKCk7XG52YXIgaXNFbXB0eSA9ICh2KSA9PiB2Lmxlbmd0aCA9PT0gMDtcblxuZXhwb3J0IHsgY3JlYXRlQW5hdG9teSB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/aria-hidden/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ariaHidden: () => (/* binding */ ariaHidden)\n/* harmony export */ });\n// src/walk-tree-outside.ts\nvar counterMap = /* @__PURE__ */ new WeakMap();\nvar uncontrolledNodes = /* @__PURE__ */ new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = (node) => node && (node.host || unwrapHost(node.parentNode));\nvar correctTargets = (parent, targets) => targets.map((target) => {\n  if (parent.contains(target)) return target;\n  const correctedTarget = unwrapHost(target);\n  if (correctedTarget && parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  console.error(\"[zag-js > ariaHidden] target\", target, \"in not contained inside\", parent, \". Doing nothing\");\n  return null;\n}).filter((x) => Boolean(x));\nvar isIgnoredNode = (node) => {\n  if (node.localName === \"next-route-announcer\") return true;\n  if (node.localName === \"script\") return true;\n  if (node.hasAttribute(\"aria-live\")) return true;\n  return node.matches(\"[data-live-announcer]\");\n};\nvar walkTreeOutside = (originalTarget, props) => {\n  const { parentNode, markerName, controlAttribute } = props;\n  const targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n  markerMap[markerName] || (markerMap[markerName] = /* @__PURE__ */ new WeakMap());\n  const markerCounter = markerMap[markerName];\n  const hiddenNodes = [];\n  const elementsToKeep = /* @__PURE__ */ new Set();\n  const elementsToStop = new Set(targets);\n  const keep = (el) => {\n    if (!el || elementsToKeep.has(el)) return;\n    elementsToKeep.add(el);\n    keep(el.parentNode);\n  };\n  targets.forEach(keep);\n  const deep = (parent) => {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    Array.prototype.forEach.call(parent.children, (node) => {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        try {\n          if (isIgnoredNode(node)) return;\n          const attr = node.getAttribute(controlAttribute);\n          const alreadyHidden = attr !== null && attr !== \"false\";\n          const counterValue = (counterMap.get(node) || 0) + 1;\n          const markerValue = (markerCounter.get(node) || 0) + 1;\n          counterMap.set(node, counterValue);\n          markerCounter.set(node, markerValue);\n          hiddenNodes.push(node);\n          if (counterValue === 1 && alreadyHidden) {\n            uncontrolledNodes.set(node, true);\n          }\n          if (markerValue === 1) {\n            node.setAttribute(markerName, \"\");\n          }\n          if (!alreadyHidden) {\n            node.setAttribute(controlAttribute, \"\");\n          }\n        } catch (e) {\n          console.error(\"[zag-js > ariaHidden] cannot operate on \", node, e);\n        }\n      }\n    });\n  };\n  deep(parentNode);\n  elementsToKeep.clear();\n  lockCount++;\n  return () => {\n    hiddenNodes.forEach((node) => {\n      const counterValue = counterMap.get(node) - 1;\n      const markerValue = markerCounter.get(node) - 1;\n      counterMap.set(node, counterValue);\n      markerCounter.set(node, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledNodes.has(node)) {\n          node.removeAttribute(controlAttribute);\n        }\n        uncontrolledNodes.delete(node);\n      }\n      if (!markerValue) {\n        node.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = /* @__PURE__ */ new WeakMap();\n      counterMap = /* @__PURE__ */ new WeakMap();\n      uncontrolledNodes = /* @__PURE__ */ new WeakMap();\n      markerMap = {};\n    }\n  };\n};\n\n// src/aria-hidden.ts\nvar getParentNode = (originalTarget) => {\n  const target = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n  return target.ownerDocument.body;\n};\nvar hideOthers = (originalTarget, parentNode = getParentNode(originalTarget), markerName = \"data-aria-hidden\") => {\n  if (!parentNode) return;\n  return walkTreeOutside(originalTarget, {\n    parentNode,\n    markerName,\n    controlAttribute: \"aria-hidden\"\n  });\n};\n\n// src/index.ts\nvar raf = (fn) => {\n  const frameId = requestAnimationFrame(() => fn());\n  return () => cancelAnimationFrame(frameId);\n};\nfunction ariaHidden(targetsOrFn, options = {}) {\n  const { defer = true } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const targets = typeof targetsOrFn === \"function\" ? targetsOrFn() : targetsOrFn;\n      const elements = targets.filter(Boolean);\n      if (elements.length === 0) return;\n      cleanups.push(hideOthers(elements));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hcmlhLWhpZGRlbi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMkNBQTJDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QyxVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzQiIsInNvdXJjZXMiOlsiL2hvbWUvc2FjaGEvRXBpdGVjaC9HLUVQSS0zMDAtUkVOLTMtMS1wcm9qZWN0d2Vlay1uYXRoYW4uamVhbm5vdC9mcm9udC9ub2RlX21vZHVsZXMvQHphZy1qcy9hcmlhLWhpZGRlbi9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvd2Fsay10cmVlLW91dHNpZGUudHNcbnZhciBjb3VudGVyTWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG52YXIgdW5jb250cm9sbGVkTm9kZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbnZhciBtYXJrZXJNYXAgPSB7fTtcbnZhciBsb2NrQ291bnQgPSAwO1xudmFyIHVud3JhcEhvc3QgPSAobm9kZSkgPT4gbm9kZSAmJiAobm9kZS5ob3N0IHx8IHVud3JhcEhvc3Qobm9kZS5wYXJlbnROb2RlKSk7XG52YXIgY29ycmVjdFRhcmdldHMgPSAocGFyZW50LCB0YXJnZXRzKSA9PiB0YXJnZXRzLm1hcCgodGFyZ2V0KSA9PiB7XG4gIGlmIChwYXJlbnQuY29udGFpbnModGFyZ2V0KSkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3QgY29ycmVjdGVkVGFyZ2V0ID0gdW53cmFwSG9zdCh0YXJnZXQpO1xuICBpZiAoY29ycmVjdGVkVGFyZ2V0ICYmIHBhcmVudC5jb250YWlucyhjb3JyZWN0ZWRUYXJnZXQpKSB7XG4gICAgcmV0dXJuIGNvcnJlY3RlZFRhcmdldDtcbiAgfVxuICBjb25zb2xlLmVycm9yKFwiW3phZy1qcyA+IGFyaWFIaWRkZW5dIHRhcmdldFwiLCB0YXJnZXQsIFwiaW4gbm90IGNvbnRhaW5lZCBpbnNpZGVcIiwgcGFyZW50LCBcIi4gRG9pbmcgbm90aGluZ1wiKTtcbiAgcmV0dXJuIG51bGw7XG59KS5maWx0ZXIoKHgpID0+IEJvb2xlYW4oeCkpO1xudmFyIGlzSWdub3JlZE5vZGUgPSAobm9kZSkgPT4ge1xuICBpZiAobm9kZS5sb2NhbE5hbWUgPT09IFwibmV4dC1yb3V0ZS1hbm5vdW5jZXJcIikgcmV0dXJuIHRydWU7XG4gIGlmIChub2RlLmxvY2FsTmFtZSA9PT0gXCJzY3JpcHRcIikgcmV0dXJuIHRydWU7XG4gIGlmIChub2RlLmhhc0F0dHJpYnV0ZShcImFyaWEtbGl2ZVwiKSkgcmV0dXJuIHRydWU7XG4gIHJldHVybiBub2RlLm1hdGNoZXMoXCJbZGF0YS1saXZlLWFubm91bmNlcl1cIik7XG59O1xudmFyIHdhbGtUcmVlT3V0c2lkZSA9IChvcmlnaW5hbFRhcmdldCwgcHJvcHMpID0+IHtcbiAgY29uc3QgeyBwYXJlbnROb2RlLCBtYXJrZXJOYW1lLCBjb250cm9sQXR0cmlidXRlIH0gPSBwcm9wcztcbiAgY29uc3QgdGFyZ2V0cyA9IGNvcnJlY3RUYXJnZXRzKHBhcmVudE5vZGUsIEFycmF5LmlzQXJyYXkob3JpZ2luYWxUYXJnZXQpID8gb3JpZ2luYWxUYXJnZXQgOiBbb3JpZ2luYWxUYXJnZXRdKTtcbiAgbWFya2VyTWFwW21hcmtlck5hbWVdIHx8IChtYXJrZXJNYXBbbWFya2VyTmFtZV0gPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKSk7XG4gIGNvbnN0IG1hcmtlckNvdW50ZXIgPSBtYXJrZXJNYXBbbWFya2VyTmFtZV07XG4gIGNvbnN0IGhpZGRlbk5vZGVzID0gW107XG4gIGNvbnN0IGVsZW1lbnRzVG9LZWVwID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgY29uc3QgZWxlbWVudHNUb1N0b3AgPSBuZXcgU2V0KHRhcmdldHMpO1xuICBjb25zdCBrZWVwID0gKGVsKSA9PiB7XG4gICAgaWYgKCFlbCB8fCBlbGVtZW50c1RvS2VlcC5oYXMoZWwpKSByZXR1cm47XG4gICAgZWxlbWVudHNUb0tlZXAuYWRkKGVsKTtcbiAgICBrZWVwKGVsLnBhcmVudE5vZGUpO1xuICB9O1xuICB0YXJnZXRzLmZvckVhY2goa2VlcCk7XG4gIGNvbnN0IGRlZXAgPSAocGFyZW50KSA9PiB7XG4gICAgaWYgKCFwYXJlbnQgfHwgZWxlbWVudHNUb1N0b3AuaGFzKHBhcmVudCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChwYXJlbnQuY2hpbGRyZW4sIChub2RlKSA9PiB7XG4gICAgICBpZiAoZWxlbWVudHNUb0tlZXAuaGFzKG5vZGUpKSB7XG4gICAgICAgIGRlZXAobm9kZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmIChpc0lnbm9yZWROb2RlKG5vZGUpKSByZXR1cm47XG4gICAgICAgICAgY29uc3QgYXR0ciA9IG5vZGUuZ2V0QXR0cmlidXRlKGNvbnRyb2xBdHRyaWJ1dGUpO1xuICAgICAgICAgIGNvbnN0IGFscmVhZHlIaWRkZW4gPSBhdHRyICE9PSBudWxsICYmIGF0dHIgIT09IFwiZmFsc2VcIjtcbiAgICAgICAgICBjb25zdCBjb3VudGVyVmFsdWUgPSAoY291bnRlck1hcC5nZXQobm9kZSkgfHwgMCkgKyAxO1xuICAgICAgICAgIGNvbnN0IG1hcmtlclZhbHVlID0gKG1hcmtlckNvdW50ZXIuZ2V0KG5vZGUpIHx8IDApICsgMTtcbiAgICAgICAgICBjb3VudGVyTWFwLnNldChub2RlLCBjb3VudGVyVmFsdWUpO1xuICAgICAgICAgIG1hcmtlckNvdW50ZXIuc2V0KG5vZGUsIG1hcmtlclZhbHVlKTtcbiAgICAgICAgICBoaWRkZW5Ob2Rlcy5wdXNoKG5vZGUpO1xuICAgICAgICAgIGlmIChjb3VudGVyVmFsdWUgPT09IDEgJiYgYWxyZWFkeUhpZGRlbikge1xuICAgICAgICAgICAgdW5jb250cm9sbGVkTm9kZXMuc2V0KG5vZGUsIHRydWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAobWFya2VyVmFsdWUgPT09IDEpIHtcbiAgICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKG1hcmtlck5hbWUsIFwiXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoIWFscmVhZHlIaWRkZW4pIHtcbiAgICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKGNvbnRyb2xBdHRyaWJ1dGUsIFwiXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJbemFnLWpzID4gYXJpYUhpZGRlbl0gY2Fubm90IG9wZXJhdGUgb24gXCIsIG5vZGUsIGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG4gIGRlZXAocGFyZW50Tm9kZSk7XG4gIGVsZW1lbnRzVG9LZWVwLmNsZWFyKCk7XG4gIGxvY2tDb3VudCsrO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGhpZGRlbk5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICAgIGNvbnN0IGNvdW50ZXJWYWx1ZSA9IGNvdW50ZXJNYXAuZ2V0KG5vZGUpIC0gMTtcbiAgICAgIGNvbnN0IG1hcmtlclZhbHVlID0gbWFya2VyQ291bnRlci5nZXQobm9kZSkgLSAxO1xuICAgICAgY291bnRlck1hcC5zZXQobm9kZSwgY291bnRlclZhbHVlKTtcbiAgICAgIG1hcmtlckNvdW50ZXIuc2V0KG5vZGUsIG1hcmtlclZhbHVlKTtcbiAgICAgIGlmICghY291bnRlclZhbHVlKSB7XG4gICAgICAgIGlmICghdW5jb250cm9sbGVkTm9kZXMuaGFzKG5vZGUpKSB7XG4gICAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoY29udHJvbEF0dHJpYnV0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgdW5jb250cm9sbGVkTm9kZXMuZGVsZXRlKG5vZGUpO1xuICAgICAgfVxuICAgICAgaWYgKCFtYXJrZXJWYWx1ZSkge1xuICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShtYXJrZXJOYW1lKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBsb2NrQ291bnQtLTtcbiAgICBpZiAoIWxvY2tDb3VudCkge1xuICAgICAgY291bnRlck1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xuICAgICAgY291bnRlck1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xuICAgICAgdW5jb250cm9sbGVkTm9kZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbiAgICAgIG1hcmtlck1hcCA9IHt9O1xuICAgIH1cbiAgfTtcbn07XG5cbi8vIHNyYy9hcmlhLWhpZGRlbi50c1xudmFyIGdldFBhcmVudE5vZGUgPSAob3JpZ2luYWxUYXJnZXQpID0+IHtcbiAgY29uc3QgdGFyZ2V0ID0gQXJyYXkuaXNBcnJheShvcmlnaW5hbFRhcmdldCkgPyBvcmlnaW5hbFRhcmdldFswXSA6IG9yaWdpbmFsVGFyZ2V0O1xuICByZXR1cm4gdGFyZ2V0Lm93bmVyRG9jdW1lbnQuYm9keTtcbn07XG52YXIgaGlkZU90aGVycyA9IChvcmlnaW5hbFRhcmdldCwgcGFyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUob3JpZ2luYWxUYXJnZXQpLCBtYXJrZXJOYW1lID0gXCJkYXRhLWFyaWEtaGlkZGVuXCIpID0+IHtcbiAgaWYgKCFwYXJlbnROb2RlKSByZXR1cm47XG4gIHJldHVybiB3YWxrVHJlZU91dHNpZGUob3JpZ2luYWxUYXJnZXQsIHtcbiAgICBwYXJlbnROb2RlLFxuICAgIG1hcmtlck5hbWUsXG4gICAgY29udHJvbEF0dHJpYnV0ZTogXCJhcmlhLWhpZGRlblwiXG4gIH0pO1xufTtcblxuLy8gc3JjL2luZGV4LnRzXG52YXIgcmFmID0gKGZuKSA9PiB7XG4gIGNvbnN0IGZyYW1lSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gZm4oKSk7XG4gIHJldHVybiAoKSA9PiBjYW5jZWxBbmltYXRpb25GcmFtZShmcmFtZUlkKTtcbn07XG5mdW5jdGlvbiBhcmlhSGlkZGVuKHRhcmdldHNPckZuLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3QgeyBkZWZlciA9IHRydWUgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGZ1bmMgPSBkZWZlciA/IHJhZiA6ICh2KSA9PiB2KCk7XG4gIGNvbnN0IGNsZWFudXBzID0gW107XG4gIGNsZWFudXBzLnB1c2goXG4gICAgZnVuYygoKSA9PiB7XG4gICAgICBjb25zdCB0YXJnZXRzID0gdHlwZW9mIHRhcmdldHNPckZuID09PSBcImZ1bmN0aW9uXCIgPyB0YXJnZXRzT3JGbigpIDogdGFyZ2V0c09yRm47XG4gICAgICBjb25zdCBlbGVtZW50cyA9IHRhcmdldHMuZmlsdGVyKEJvb2xlYW4pO1xuICAgICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgY2xlYW51cHMucHVzaChoaWRlT3RoZXJzKGVsZW1lbnRzKSk7XG4gICAgfSlcbiAgKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBjbGVhbnVwcy5mb3JFYWNoKChmbikgPT4gZm4/LigpKTtcbiAgfTtcbn1cblxuZXhwb3J0IHsgYXJpYUhpZGRlbiB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/avatar/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/avatar/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/avatar.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"avatar\").parts(\"root\", \"image\", \"fallback\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `avatar:${ctx.id}`,\n  getImageId: (ctx) => ctx.ids?.image ?? `avatar:${ctx.id}:image`,\n  getFallbackId: (ctx) => ctx.ids?.fallback ?? `avatar:${ctx.id}:fallback`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getImageEl: (ctx) => dom.getById(ctx, dom.getImageId(ctx))\n});\n\n// src/avatar.connect.ts\nfunction connect(state, send, normalize) {\n  const loaded = state.matches(\"loaded\");\n  return {\n    loaded,\n    setSrc(src) {\n      send({ type: \"SRC.SET\", src });\n    },\n    setLoaded() {\n      send({ type: \"IMG.LOADED\", src: \"api\" });\n    },\n    setError() {\n      send({ type: \"IMG.ERROR\", src: \"api\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getImageProps() {\n      return normalize.img({\n        ...parts.image.attrs,\n        hidden: !loaded,\n        dir: state.context.dir,\n        id: dom.getImageId(state.context),\n        \"data-state\": loaded ? \"visible\" : \"hidden\",\n        onLoad() {\n          send({ type: \"IMG.LOADED\", src: \"element\" });\n        },\n        onError() {\n          send({ type: \"IMG.ERROR\", src: \"element\" });\n        }\n      });\n    },\n    getFallbackProps() {\n      return normalize.element({\n        ...parts.fallback.attrs,\n        dir: state.context.dir,\n        id: dom.getFallbackId(state.context),\n        hidden: loaded,\n        \"data-state\": loaded ? \"hidden\" : \"visible\"\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"avatar\",\n      initial: \"loading\",\n      activities: [\"trackImageRemoval\"],\n      context: ctx,\n      on: {\n        \"SRC.CHANGE\": {\n          target: \"loading\"\n        },\n        \"IMG.UNMOUNT\": {\n          target: \"error\"\n        }\n      },\n      states: {\n        loading: {\n          activities: [\"trackSrcChange\"],\n          entry: [\"checkImageStatus\"],\n          on: {\n            \"IMG.LOADED\": {\n              target: \"loaded\",\n              actions: [\"invokeOnLoad\"]\n            },\n            \"IMG.ERROR\": {\n              target: \"error\",\n              actions: [\"invokeOnError\"]\n            }\n          }\n        },\n        error: {\n          activities: [\"trackSrcChange\"],\n          on: {\n            \"IMG.LOADED\": {\n              target: \"loaded\",\n              actions: [\"invokeOnLoad\"]\n            }\n          }\n        },\n        loaded: {\n          activities: [\"trackSrcChange\"],\n          on: {\n            \"IMG.ERROR\": {\n              target: \"error\",\n              actions: [\"invokeOnError\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        trackSrcChange(ctx2, _evt, { send }) {\n          const imageEl = dom.getImageEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(imageEl, {\n            attributes: [\"src\", \"srcset\"],\n            callback() {\n              send({ type: \"SRC.CHANGE\" });\n            }\n          });\n        },\n        trackImageRemoval(ctx2, _evt, { send }) {\n          const rootEl = dom.getRootEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeChildren)(rootEl, {\n            callback(records) {\n              const removedNodes = Array.from(records[0].removedNodes);\n              const removed = removedNodes.find(\n                (node) => node.nodeType === Node.ELEMENT_NODE && node.matches(\"[data-scope=avatar][data-part=image]\")\n              );\n              if (removed) {\n                send({ type: \"IMG.UNMOUNT\" });\n              }\n            }\n          });\n        }\n      },\n      actions: {\n        invokeOnLoad(ctx2) {\n          ctx2.onStatusChange?.({ status: \"loaded\" });\n        },\n        invokeOnError(ctx2) {\n          ctx2.onStatusChange?.({ status: \"error\" });\n        },\n        checkImageStatus(ctx2, _evt, { send }) {\n          const imageEl = dom.getImageEl(ctx2);\n          if (imageEl?.complete) {\n            const type = hasLoaded(imageEl) ? \"IMG.LOADED\" : \"IMG.ERROR\";\n            send({ type, src: \"ssr\" });\n          }\n        }\n      }\n    }\n  );\n}\nfunction hasLoaded(image) {\n  return image.complete && image.naturalWidth !== 0 && image.naturalHeight !== 0;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"dir\", \"id\", \"ids\", \"onStatusChange\", \"getRootNode\"]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/avatar/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/checkbox/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/checkbox/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/checkbox.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"checkbox\").parts(\"root\", \"label\", \"control\", \"indicator\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `checkbox:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `checkbox:${ctx.id}:label`,\n  getControlId: (ctx) => ctx.ids?.control ?? `checkbox:${ctx.id}:control`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `checkbox:${ctx.id}:input`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx))\n});\nfunction connect(state, send, normalize) {\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const focused = !disabled && state.context.focused;\n  const focusVisible = !disabled && state.context.focusVisible;\n  const checked = state.context.isChecked;\n  const indeterminate = state.context.isIndeterminate;\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.active),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.hovered),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": indeterminate ? \"indeterminate\" : state.context.checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid)\n  };\n  return {\n    checked,\n    disabled,\n    indeterminate,\n    focused,\n    checkedState: state.context.checked,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === dom.getHiddenInputEl(state.context)) {\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"aria-hidden\": true\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        hidden: !indeterminate && !state.context.checked\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        type: \"checkbox\",\n        required: state.context.required,\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-invalid\": state.context.invalid,\n        name: state.context.name,\n        form: state.context.form,\n        value: state.context.value,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"checkbox\",\n      initial: \"ready\",\n      context: {\n        checked: false,\n        value: \"on\",\n        disabled: false,\n        ...ctx,\n        fieldsetDisabled: false,\n        focusVisible: false\n      },\n      watch: {\n        disabled: \"removeFocusIfNeeded\",\n        checked: \"syncInputElement\"\n      },\n      activities: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n      on: {\n        \"CHECKED.TOGGLE\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"toggleChecked\"]\n          }\n        ],\n        \"CHECKED.SET\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setChecked\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"setChecked\"]\n          }\n        ],\n        \"CONTEXT.SET\": {\n          actions: [\"setContext\"]\n        }\n      },\n      computed: {\n        isIndeterminate: (ctx2) => isIndeterminate(ctx2.checked),\n        isChecked: (ctx2) => isChecked(ctx2.checked),\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled\n      },\n      states: {\n        ready: {}\n      }\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted\n      },\n      activities: {\n        trackPressEvent(ctx2) {\n          if (ctx2.isDisabled) return;\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n            pointerNode: dom.getRootEl(ctx2),\n            keyboardNode: dom.getHiddenInputEl(ctx2),\n            isValidKey: (event) => event.key === \" \",\n            onPress: () => ctx2.active = false,\n            onPressStart: () => ctx2.active = true,\n            onPressEnd: () => ctx2.active = false\n          });\n        },\n        trackFocusVisible(ctx2) {\n          if (ctx2.isDisabled) return;\n          return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: dom.getRootNode(ctx2) });\n        },\n        trackFormControlState(ctx2, _evt, { send, initialContext }) {\n          return (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__.trackFormControl)(dom.getHiddenInputEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"CHECKED.SET\", checked: !!initialContext.checked });\n            }\n          });\n        }\n      },\n      actions: {\n        setContext(ctx2, evt) {\n          Object.assign(ctx2, evt.context);\n        },\n        syncInputElement(ctx2) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          if (!inputEl) return;\n          (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__.setElementChecked)(inputEl, ctx2.isChecked);\n          inputEl.indeterminate = ctx2.isIndeterminate;\n        },\n        removeFocusIfNeeded(ctx2) {\n          if (ctx2.disabled && ctx2.focused) {\n            ctx2.focused = false;\n            ctx2.focusVisible = false;\n          }\n        },\n        setChecked(ctx2, evt) {\n          set.checked(ctx2, evt.checked);\n        },\n        toggleChecked(ctx2) {\n          const checked = isIndeterminate(ctx2.checked) ? true : !ctx2.checked;\n          set.checked(ctx2, checked);\n        },\n        dispatchChangeEvent(ctx2) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__.dispatchInputCheckedEvent)(inputEl, { checked: isChecked(ctx2.checked) });\n        }\n      }\n    }\n  );\n}\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction isChecked(checked) {\n  return isIndeterminate(checked) ? false : !!checked;\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onCheckedChange?.({ checked: ctx.checked });\n  }\n};\nvar set = {\n  checked: (ctx, checked) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isEqual)(ctx.checked, checked)) return;\n    ctx.checked = checked;\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"checked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/checkbox/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/collapsible/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/collapsible/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/collapsible.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"collapsible\").parts(\"root\", \"trigger\", \"content\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `collapsible:${ctx.id}`,\n  getContentId: (ctx) => ctx.ids?.content ?? `collapsible:${ctx.id}:content`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `collapsible:${ctx.id}:trigger`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx))\n});\n\n// src/collapsible.connect.ts\nfunction connect(state, send, normalize) {\n  const visible = state.matches(\"open\", \"closing\");\n  const open = state.matches(\"open\");\n  const height = state.context.height;\n  const width = state.context.width;\n  const disabled = !!state.context.disabled;\n  const skip = !state.context.initial && open;\n  return {\n    disabled,\n    visible,\n    open,\n    measureSize() {\n      send(\"SIZE.MEASURE\");\n    },\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        \"data-collapsible\": \"\",\n        \"data-state\": skip ? void 0 : open ? \"open\" : \"closed\",\n        id: dom.getContentId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        hidden: !visible,\n        style: {\n          \"--height\": height != null ? `${height}px` : void 0,\n          \"--width\": width != null ? `${width}px` : void 0\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.element({\n        ...parts.trigger.attrs,\n        id: dom.getTriggerId(state.context),\n        dir: state.context.dir,\n        type: \"button\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": visible || false,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: open ? \"CLOSE\" : \"OPEN\", src: \"trigger.click\" });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"collapsible\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        ...ctx,\n        height: 0,\n        width: 0,\n        initial: false,\n        stylesRef: null,\n        unmountAnimationName: null\n      },\n      watch: {\n        open: [\"setInitial\", \"computeSize\", \"toggleVisibility\"]\n      },\n      exit: [\"clearInitial\", \"cleanupNode\"],\n      states: {\n        closed: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitial\", \"computeSize\", \"invokeOnOpen\"]\n              }\n            ]\n          }\n        },\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackExitAnimation\"],\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            \"CONTROLLED.OPEN\": \"open\",\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitial\", \"invokeOnOpen\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnExitComplete\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"setInitial\", \"computeSize\", \"invokeOnExitComplete\"]\n              }\n            ],\n            \"ANIMATION.END\": {\n              target: \"closed\",\n              actions: [\"invokeOnExitComplete\", \"clearInitial\"]\n            }\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackEnterAnimation\"],\n          on: {\n            \"CONTROLLED.CLOSE\": \"closing\",\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closing\",\n                actions: [\"setInitial\", \"computeSize\", \"invokeOnClose\"]\n              }\n            ],\n            \"SIZE.MEASURE\": {\n              actions: [\"measureSize\"]\n            },\n            \"ANIMATION.END\": {\n              actions: [\"clearInitial\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackEnterAnimation(ctx2, _evt, { send }) {\n          let cleanup;\n          const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            const animationName = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl).animationName;\n            const hasNoAnimation = !animationName || animationName === \"none\";\n            if (hasNoAnimation) {\n              send({ type: \"ANIMATION.END\" });\n              return;\n            }\n            const onEnd = (event) => {\n              const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n              if (target === contentEl) {\n                send({ type: \"ANIMATION.END\" });\n              }\n            };\n            contentEl.addEventListener(\"animationend\", onEnd);\n            cleanup = () => {\n              contentEl.removeEventListener(\"animationend\", onEnd);\n            };\n          });\n          return () => {\n            rafCleanup();\n            cleanup?.();\n          };\n        },\n        trackExitAnimation(ctx2, _evt, { send }) {\n          let cleanup;\n          const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            const animationName = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl).animationName;\n            const hasNoAnimation = !animationName || animationName === \"none\";\n            if (hasNoAnimation) {\n              send({ type: \"ANIMATION.END\" });\n              return;\n            }\n            const onEnd = (event) => {\n              const win = contentEl.ownerDocument.defaultView || window;\n              const animationName2 = win.getComputedStyle(contentEl).animationName;\n              const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n              if (target === contentEl && animationName2 === ctx2.unmountAnimationName) {\n                send({ type: \"ANIMATION.END\" });\n              }\n            };\n            contentEl.addEventListener(\"animationend\", onEnd);\n            cleanup = () => {\n              contentEl.removeEventListener(\"animationend\", onEnd);\n            };\n          });\n          return () => {\n            rafCleanup();\n            cleanup?.();\n          };\n        }\n      },\n      actions: {\n        setInitial(ctx2) {\n          ctx2.initial = true;\n        },\n        clearInitial(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            ctx2.initial = false;\n          });\n        },\n        cleanupNode(ctx2) {\n          ctx2.stylesRef = null;\n        },\n        measureSize(ctx2) {\n          const contentEl = dom.getContentEl(ctx2);\n          if (!contentEl) return;\n          const { height, width } = contentEl.getBoundingClientRect();\n          ctx2.height = height;\n          ctx2.width = width;\n        },\n        computeSize(ctx2, evt) {\n          ctx2._rafCleanup?.();\n          ctx2._rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            ctx2.stylesRef || (ctx2.stylesRef = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.ref)({\n              animationName: contentEl.style.animationName,\n              animationDuration: contentEl.style.animationDuration\n            }));\n            if (evt.type === \"CLOSE\" || !ctx2.open) {\n              const win = contentEl.ownerDocument.defaultView || window;\n              ctx2.unmountAnimationName = win.getComputedStyle(contentEl).animationName;\n            }\n            const hidden = contentEl.hidden;\n            contentEl.style.animationName = \"none\";\n            contentEl.style.animationDuration = \"0s\";\n            contentEl.hidden = false;\n            const rect = contentEl.getBoundingClientRect();\n            ctx2.height = rect.height;\n            ctx2.width = rect.width;\n            if (ctx2.initial) {\n              contentEl.style.animationName = ctx2.stylesRef.animationName;\n              contentEl.style.animationDuration = ctx2.stylesRef.animationDuration;\n            }\n            contentEl.hidden = hidden;\n          });\n        },\n        invokeOnOpen: (ctx2) => {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose: (ctx2) => {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        invokeOnExitComplete(ctx2) {\n          ctx2.onExitComplete?.();\n        },\n        toggleVisibility: (ctx2, _evt, { send }) => {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\" });\n        }\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"onExitComplete\",\n  \"onOpenChange\",\n  \"open.controlled\",\n  \"open\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/collapsible/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/collection/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/collection/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GridCollection: () => (/* binding */ GridCollection),\n/* harmony export */   ListCollection: () => (/* binding */ ListCollection),\n/* harmony export */   TreeCollection: () => (/* binding */ TreeCollection),\n/* harmony export */   filePathToTree: () => (/* binding */ filePathToTree),\n/* harmony export */   flattenedToTree: () => (/* binding */ flattenedToTree)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar fallback = {\n  itemToValue(item) {\n    if (typeof item === \"string\") return item;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"value\")) return item.value;\n    return \"\";\n  },\n  itemToString(item) {\n    if (typeof item === \"string\") return item;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"label\")) return item.label;\n    return fallback.itemToValue(item);\n  },\n  isItemDisabled(item) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"disabled\")) return !!item.disabled;\n    return false;\n  }\n};\nvar ListCollection = class {\n  constructor(options) {\n    this.options = options;\n    /**\n     * The items in the collection\n     */\n    __publicField(this, \"items\");\n    this.items = [...options.items];\n  }\n  isEqual(other) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.items, other.items);\n  }\n  /**\n   * Function to update the collection items\n   */\n  setItems(items) {\n    this.items = Array.from(items);\n  }\n  /**\n   * Returns all the values in the collection\n   */\n  getValues(items = this.items) {\n    return Array.from(items).map((item) => this.getItemValue(item)).filter(Boolean);\n  }\n  /**\n   * Get the item based on its value\n   */\n  find(value) {\n    if (value == null) return null;\n    const index = this.items.findIndex((item) => this.getItemValue(item) === value);\n    return index != null ? this.items[index] : null;\n  }\n  /**\n   * Get the items based on its values\n   */\n  findMany(values) {\n    return Array.from(values).map((value) => this.find(value)).filter(Boolean);\n  }\n  /**\n   * Get the item based on its index\n   */\n  at(index) {\n    return this.items[index] ?? null;\n  }\n  sortFn(valueA, valueB) {\n    const indexA = this.indexOf(valueA);\n    const indexB = this.indexOf(valueB);\n    return (indexA ?? 0) - (indexB ?? 0);\n  }\n  /**\n   * Sort the values based on their index\n   */\n  sort(values) {\n    return [...values].sort(this.sortFn.bind(this));\n  }\n  /**\n   * Convert an item to a value\n   */\n  getItemValue(item) {\n    if (item == null) return null;\n    return this.options.itemToValue?.(item) ?? fallback.itemToValue(item);\n  }\n  /**\n   * Whether an item is disabled\n   */\n  getItemDisabled(item) {\n    if (item == null) return false;\n    return this.options.isItemDisabled?.(item) ?? fallback.isItemDisabled(item);\n  }\n  /**\n   * Convert an item to a string\n   */\n  stringifyItem(item) {\n    if (item == null) return null;\n    return this.options.itemToString?.(item) ?? fallback.itemToString(item);\n  }\n  /**\n   * Convert a value to a string\n   */\n  stringify(value) {\n    if (value == null) return null;\n    return this.stringifyItem(this.find(value));\n  }\n  /**\n   * Convert an array of items to a string\n   */\n  stringifyItems(items, separator = \", \") {\n    return Array.from(items).map((item) => this.stringifyItem(item)).filter(Boolean).join(separator);\n  }\n  /**\n   * Convert an array of items to a string\n   */\n  stringifyMany(value, separator) {\n    return this.stringifyItems(this.findMany(value), separator);\n  }\n  /**\n   * Whether the collection has a value\n   */\n  has(value) {\n    return this.indexOf(value) !== -1;\n  }\n  /**\n   * Whether the collection has an item\n   */\n  hasItem(item) {\n    if (item == null) return false;\n    return this.has(this.getItemValue(item));\n  }\n  /**\n   * Returns the number of items in the collection\n   */\n  get size() {\n    return this.items.length;\n  }\n  /**\n   * Returns the first value in the collection\n   */\n  get firstValue() {\n    let index = 0;\n    while (this.getItemDisabled(this.at(index))) index++;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Returns the last value in the collection\n   */\n  get lastValue() {\n    let index = this.size - 1;\n    while (this.getItemDisabled(this.at(index))) index--;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Returns the next value in the collection\n   */\n  getNextValue(value, step = 1, clamp = false) {\n    let index = this.indexOf(value);\n    if (index === -1) return null;\n    index = clamp ? Math.min(index + step, this.size - 1) : index + step;\n    while (index <= this.size && this.getItemDisabled(this.at(index))) index++;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Returns the previous value in the collection\n   */\n  getPreviousValue(value, step = 1, clamp = false) {\n    let index = this.indexOf(value);\n    if (index === -1) return null;\n    index = clamp ? Math.max(index - step, 0) : index - step;\n    while (index >= 0 && this.getItemDisabled(this.at(index))) index--;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Get the index of an item based on its key\n   */\n  indexOf(value) {\n    if (value == null) return -1;\n    return this.items.findIndex((item) => this.getItemValue(item) === value);\n  }\n  getByText(text, current) {\n    let items = current != null ? wrap(this.items, this.indexOf(current)) : this.items;\n    const isSingleKey = text.length === 1;\n    if (isSingleKey) items = items.filter((item) => this.getItemValue(item) !== current);\n    return items.find((item) => match(this.stringifyItem(item), text));\n  }\n  /**\n   * Search for a value based on a query\n   */\n  search(queryString, options) {\n    const { state, currentValue, timeout = 350 } = options;\n    const search = state.keysSoFar + queryString;\n    const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n    const query = isRepeated ? search[0] : search;\n    const item = this.getByText(query, currentValue);\n    const value = this.getItemValue(item);\n    function cleanup() {\n      clearTimeout(state.timer);\n      state.timer = -1;\n    }\n    function update(value2) {\n      state.keysSoFar = value2;\n      cleanup();\n      if (value2 !== \"\") {\n        state.timer = +setTimeout(() => {\n          update(\"\");\n          cleanup();\n        }, timeout);\n      }\n    }\n    update(search);\n    return value;\n  }\n  *[Symbol.iterator]() {\n    yield* this.items;\n  }\n  insertBefore(value, item) {\n    const index = this.indexOf(value);\n    if (index === -1) return;\n    this.items.splice(index, 0, item);\n  }\n  insertAfter(value, item) {\n    const index = this.indexOf(value);\n    if (index === -1) return;\n    this.items.splice(index + 1, 0, item);\n  }\n  reorder(fromIndex, toIndex) {\n    if (fromIndex === -1 || toIndex === -1) return;\n    if (fromIndex === toIndex) return;\n    const [removed] = this.items.splice(fromIndex, 1);\n    this.items.splice(toIndex, 0, removed);\n  }\n  json() {\n    return {\n      size: this.size,\n      first: this.firstValue,\n      last: this.lastValue\n    };\n  }\n};\nvar match = (label, query) => {\n  return !!label?.toLowerCase().startsWith(query.toLowerCase());\n};\nvar wrap = (v, idx) => {\n  return v.map((_, index) => v[(Math.max(idx, 0) + index) % v.length]);\n};\n\n// src/grid-collection.ts\nvar GridCollection = class extends ListCollection {\n  constructor(options) {\n    const { columnCount } = options;\n    super(options);\n    __publicField(this, \"columnCount\");\n    this.columnCount = columnCount;\n  }\n  /**\n   * Returns the row data in the grid\n   */\n  getRows() {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.chunk)([...this.items], this.columnCount);\n  }\n  /**\n   * Returns the number of rows in the grid\n   */\n  getRowCount() {\n    return this.getRows().length;\n  }\n  /**\n   * Returns the index of the specified row and column in the grid\n   */\n  getCellIndex(row, column) {\n    return row * this.columnCount + column;\n  }\n  /**\n   * Returns the item at the specified row and column in the grid\n   */\n  getCell(row, column) {\n    return this.at(this.getCellIndex(row, column));\n  }\n  /**\n   * Returns the value of the previous row in the grid, based on the current value\n   */\n  getPreviousRowValue(value, clamp = false) {\n    return this.getPreviousValue(value, this.columnCount, clamp);\n  }\n  /**\n   * Returns the value of the next row in the grid, based on the current value\n   */\n  getNextRowValue(value, clamp = false) {\n    return this.getNextValue(value, this.columnCount, clamp);\n  }\n};\n\n// src/tree-visit.ts\nfunction access(node, indexPath, options) {\n  for (let i = 0; i < indexPath.length; i++) node = options.getChildren(node, indexPath.slice(i + 1))[indexPath[i]];\n  return node;\n}\nfunction ancestorIndexPaths(indexPaths) {\n  const sortedPaths = sortIndexPaths(indexPaths);\n  const result = [];\n  const seen = /* @__PURE__ */ new Set();\n  for (const indexPath of sortedPaths) {\n    const key = indexPath.join();\n    if (!seen.has(key)) {\n      seen.add(key);\n      result.push(indexPath);\n    }\n  }\n  return result;\n}\nfunction compareIndexPaths(a, b) {\n  for (let i = 0; i < Math.min(a.length, b.length); i++) {\n    if (a[i] < b[i]) return -1;\n    if (a[i] > b[i]) return 1;\n  }\n  return a.length - b.length;\n}\nfunction sortIndexPaths(indexPaths) {\n  return indexPaths.sort(compareIndexPaths);\n}\nfunction find(node, options) {\n  let found;\n  visit(node, {\n    ...options,\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) {\n        found = child;\n        return \"stop\";\n      }\n    }\n  });\n  return found;\n}\nfunction findIndexPath(node, options) {\n  let found;\n  visit(node, {\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) {\n        found = [...indexPath];\n        return \"stop\";\n      }\n    },\n    getChildren: options.getChildren\n  });\n  return found;\n}\nfunction reduce(node, options) {\n  let result = options.initialResult;\n  visit(node, {\n    ...options,\n    onEnter: (child, indexPath) => {\n      result = options.nextResult(result, child, indexPath);\n    }\n  });\n  return result;\n}\nfunction flatMap(node, options) {\n  return reduce(node, {\n    ...options,\n    initialResult: [],\n    nextResult: (result, child, indexPath) => {\n      result.push(...options.transform(child, indexPath));\n      return result;\n    }\n  });\n}\nfunction insertOperation(index, nodes) {\n  return { type: \"insert\", index, nodes };\n}\nfunction removeOperation(indexes) {\n  return { type: \"remove\", indexes };\n}\nfunction replaceOperation() {\n  return { type: \"replace\" };\n}\nfunction splitIndexPath(indexPath) {\n  return [indexPath.slice(0, -1), indexPath[indexPath.length - 1]];\n}\nfunction getInsertionOperations(indexPath, nodes, operations = /* @__PURE__ */ new Map()) {\n  const [parentIndexPath, index] = splitIndexPath(indexPath);\n  for (let i = parentIndexPath.length - 1; i >= 0; i--) {\n    const parentKey = parentIndexPath.slice(0, i).join();\n    switch (operations.get(parentKey)?.type) {\n      case \"remove\":\n        continue;\n    }\n    operations.set(parentKey, replaceOperation());\n  }\n  const operation = operations.get(parentIndexPath.join());\n  switch (operation?.type) {\n    case \"remove\":\n      operations.set(parentIndexPath.join(), {\n        type: \"removeThenInsert\",\n        removeIndexes: operation.indexes,\n        insertIndex: index,\n        insertNodes: nodes\n      });\n      break;\n    default:\n      operations.set(parentIndexPath.join(), insertOperation(index, nodes));\n  }\n  return operations;\n}\nfunction getRemovalOperations(indexPaths) {\n  const operations = /* @__PURE__ */ new Map();\n  const indexesToRemove = /* @__PURE__ */ new Map();\n  for (const indexPath of indexPaths) {\n    const parentKey = indexPath.slice(0, -1).join();\n    const value = indexesToRemove.get(parentKey) ?? [];\n    value.push(indexPath[indexPath.length - 1]);\n    indexesToRemove.set(\n      parentKey,\n      value.sort((a, b) => a - b)\n    );\n  }\n  for (const indexPath of indexPaths) {\n    for (let i = indexPath.length - 2; i >= 0; i--) {\n      const parentKey = indexPath.slice(0, i).join();\n      if (!operations.has(parentKey)) {\n        operations.set(parentKey, replaceOperation());\n      }\n    }\n  }\n  for (const [parentKey, indexes] of indexesToRemove) {\n    operations.set(parentKey, removeOperation(indexes));\n  }\n  return operations;\n}\nfunction getReplaceOperations(indexPath, node) {\n  const operations = /* @__PURE__ */ new Map();\n  const [parentIndexPath, index] = splitIndexPath(indexPath);\n  for (let i = parentIndexPath.length - 1; i >= 0; i--) {\n    const parentKey = parentIndexPath.slice(0, i).join();\n    operations.set(parentKey, replaceOperation());\n  }\n  operations.set(parentIndexPath.join(), {\n    type: \"removeThenInsert\",\n    removeIndexes: [index],\n    insertIndex: index,\n    insertNodes: [node]\n  });\n  return operations;\n}\nfunction mutate(node, operations, options) {\n  return map(node, {\n    ...options,\n    getChildren: (node2, indexPath) => {\n      const key = indexPath.join();\n      const operation = operations.get(key);\n      switch (operation?.type) {\n        case \"replace\":\n        case \"remove\":\n        case \"removeThenInsert\":\n        case \"insert\":\n          return options.getChildren(node2, indexPath);\n        default:\n          return [];\n      }\n    },\n    transform: (node2, children, indexPath) => {\n      const key = indexPath.join();\n      const operation = operations.get(key);\n      switch (operation?.type) {\n        case \"remove\":\n          return options.create(\n            node2,\n            children.filter((_, index) => !operation.indexes.includes(index)),\n            indexPath\n          );\n        case \"removeThenInsert\":\n          const updatedChildren = children.filter((_, index) => !operation.removeIndexes.includes(index));\n          const adjustedIndex = operation.removeIndexes.reduce(\n            (index, removedIndex) => removedIndex < index ? index - 1 : index,\n            operation.insertIndex\n          );\n          return options.create(node2, splice(updatedChildren, adjustedIndex, 0, ...operation.insertNodes), indexPath);\n        case \"insert\":\n          return options.create(node2, splice(children, operation.index, 0, ...operation.nodes), indexPath);\n        case \"replace\":\n          return options.create(node2, children, indexPath);\n        default:\n          return node2;\n      }\n    }\n  });\n}\nfunction splice(array, start, deleteCount, ...items) {\n  return [...array.slice(0, start), ...items, ...array.slice(start + deleteCount)];\n}\nfunction map(node, options) {\n  const childrenMap = {};\n  visit(node, {\n    ...options,\n    onLeave: (child, indexPath) => {\n      const keyIndexPath = [0, ...indexPath];\n      const key = keyIndexPath.join();\n      const transformed = options.transform(child, childrenMap[key] ?? [], indexPath);\n      const parentKey = keyIndexPath.slice(0, -1).join();\n      const parentChildren = childrenMap[parentKey] ?? [];\n      parentChildren.push(transformed);\n      childrenMap[parentKey] = parentChildren;\n    }\n  });\n  return childrenMap[\"\"][0];\n}\nfunction insert(node, options) {\n  const { nodes, at } = options;\n  if (at.length === 0) throw new Error(`Can't insert nodes at the root`);\n  const state = getInsertionOperations(at, nodes);\n  return mutate(node, state, options);\n}\nfunction replace(node, options) {\n  if (options.at.length === 0) return options.node;\n  const operations = getReplaceOperations(options.at, options.node);\n  return mutate(node, operations, options);\n}\nfunction remove(node, options) {\n  if (options.indexPaths.length === 0) return node;\n  for (const indexPath of options.indexPaths) {\n    if (indexPath.length === 0) throw new Error(`Can't remove the root node`);\n  }\n  const operations = getRemovalOperations(options.indexPaths);\n  return mutate(node, operations, options);\n}\nfunction move(node, options) {\n  if (options.indexPaths.length === 0) return node;\n  for (const indexPath of options.indexPaths) {\n    if (indexPath.length === 0) throw new Error(`Can't move the root node`);\n  }\n  if (options.to.length === 0) throw new Error(`Can't move nodes to the root`);\n  const _ancestorIndexPaths = ancestorIndexPaths(options.indexPaths);\n  const nodesToInsert = _ancestorIndexPaths.map((indexPath) => access(node, indexPath, options));\n  const operations = getInsertionOperations(options.to, nodesToInsert, getRemovalOperations(_ancestorIndexPaths));\n  return mutate(node, operations, options);\n}\nfunction visit(node, options) {\n  const { onEnter, onLeave, getChildren } = options;\n  let indexPath = [];\n  let stack = [{ node }];\n  const getIndexPath = options.reuseIndexPath ? () => indexPath : () => indexPath.slice();\n  while (stack.length > 0) {\n    let wrapper = stack[stack.length - 1];\n    if (wrapper.state === void 0) {\n      const enterResult = onEnter?.(wrapper.node, getIndexPath());\n      if (enterResult === \"stop\") return;\n      wrapper.state = enterResult === \"skip\" ? -1 : 0;\n    }\n    const children = wrapper.children || getChildren(wrapper.node, getIndexPath());\n    wrapper.children || (wrapper.children = children);\n    if (wrapper.state !== -1) {\n      if (wrapper.state < children.length) {\n        let currentIndex = wrapper.state;\n        indexPath.push(currentIndex);\n        stack.push({ node: children[currentIndex] });\n        wrapper.state = currentIndex + 1;\n        continue;\n      }\n      const leaveResult = onLeave?.(wrapper.node, getIndexPath());\n      if (leaveResult === \"stop\") return;\n    }\n    indexPath.pop();\n    stack.pop();\n  }\n}\n\n// src/tree-collection.ts\nvar TreeCollection = class {\n  constructor(options) {\n    this.options = options;\n    __publicField(this, \"rootNode\");\n    __publicField(this, \"isEqual\", (other) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.rootNode, other.rootNode);\n    });\n    __publicField(this, \"getNodeChildren\", (node) => {\n      return this.options.nodeToChildren?.(node) ?? fallback2.nodeToChildren(node) ?? [];\n    });\n    __publicField(this, \"getNodeValue\", (node) => {\n      return this.options.nodeToValue?.(node) ?? fallback2.nodeToValue(node);\n    });\n    __publicField(this, \"getNodeDisabled\", (node) => {\n      return this.options.isNodeDisabled?.(node) ?? fallback2.isNodeDisabled(node);\n    });\n    __publicField(this, \"stringify\", (value) => {\n      const node = this.findNode(value);\n      if (!node) return null;\n      return this.stringifyNode(node);\n    });\n    __publicField(this, \"stringifyNode\", (node) => {\n      return this.options.nodeToString?.(node) ?? fallback2.nodeToString(node);\n    });\n    __publicField(this, \"getFirstNode\", (rootNode = this.rootNode) => {\n      let firstChild;\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (!firstChild && indexPath.length > 0 && !this.getNodeDisabled(node)) {\n            firstChild = node;\n            return \"stop\";\n          }\n        }\n      });\n      return firstChild;\n    });\n    __publicField(this, \"getLastNode\", (rootNode = this.rootNode, opts = {}) => {\n      let lastChild;\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) return \"skip\";\n          if (indexPath.length > 1) return \"skip\";\n          if (!this.getNodeDisabled(node)) {\n            lastChild = node;\n          }\n        }\n      });\n      return lastChild;\n    });\n    __publicField(this, \"at\", (indexPath) => {\n      return access(this.rootNode, indexPath, {\n        getChildren: this.getNodeChildren\n      });\n    });\n    __publicField(this, \"findNode\", (value, rootNode = this.rootNode) => {\n      return find(rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n    });\n    __publicField(this, \"sort\", (values) => {\n      return values.reduce(\n        (acc, value) => {\n          const indexPath = this.getIndexPath(value);\n          if (indexPath != null) acc.push({ value, indexPath });\n          return acc;\n        },\n        []\n      ).sort((a, b) => compareIndexPaths(a.indexPath, b.indexPath)).map(({ value }) => value);\n    });\n    __publicField(this, \"getIndexPath\", (value) => {\n      return findIndexPath(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n    });\n    __publicField(this, \"getValue\", (indexPath) => {\n      const node = this.at(indexPath);\n      return node ? this.getNodeValue(node) : void 0;\n    });\n    __publicField(this, \"getValuePath\", (indexPath) => {\n      if (!indexPath) return [];\n      const valuePath = [];\n      let currentPath = [...indexPath];\n      while (currentPath.length > 0) {\n        const node = this.at(currentPath);\n        if (node) valuePath.unshift(this.getNodeValue(node));\n        currentPath.pop();\n      }\n      return valuePath;\n    });\n    __publicField(this, \"getDepth\", (value) => {\n      const indexPath = findIndexPath(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n      return indexPath?.length ?? 0;\n    });\n    __publicField(this, \"isRootNode\", (node) => {\n      return this.getNodeValue(node) === this.getNodeValue(this.rootNode);\n    });\n    __publicField(this, \"contains\", (parentIndexPath, valueIndexPath) => {\n      if (!parentIndexPath || !valueIndexPath) return false;\n      return valueIndexPath.slice(0, parentIndexPath.length).every((_, i) => parentIndexPath[i] === valueIndexPath[i]);\n    });\n    __publicField(this, \"getNextNode\", (value, opts = {}) => {\n      let found = false;\n      let nextNode;\n      visit(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) {\n            if (nodeValue === value) {\n              found = true;\n            }\n            return \"skip\";\n          }\n          if (found && !this.getNodeDisabled(node)) {\n            nextNode = node;\n            return \"stop\";\n          }\n          if (nodeValue === value) {\n            found = true;\n          }\n        }\n      });\n      return nextNode;\n    });\n    __publicField(this, \"getPreviousNode\", (value, opts = {}) => {\n      let previousNode;\n      let found = false;\n      visit(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) {\n            return \"skip\";\n          }\n          if (nodeValue === value) {\n            found = true;\n            return \"stop\";\n          }\n          if (!this.getNodeDisabled(node)) {\n            previousNode = node;\n          }\n        }\n      });\n      return found ? previousNode : void 0;\n    });\n    __publicField(this, \"getParentNodes\", (values) => {\n      const result = [];\n      let indexPath = this.getIndexPath(values);\n      while (indexPath && indexPath.length > 0) {\n        indexPath.pop();\n        const parentNode = this.at(indexPath);\n        if (parentNode && !this.isRootNode(parentNode)) {\n          result.unshift(parentNode);\n        }\n      }\n      return result;\n    });\n    __publicField(this, \"getParentIndexPath\", (indexPath) => {\n      return indexPath.slice(0, -1);\n    });\n    __publicField(this, \"getParentNode\", (valueOrIndexPath) => {\n      const indexPath = typeof valueOrIndexPath === \"string\" ? this.getIndexPath(valueOrIndexPath) : valueOrIndexPath;\n      return indexPath ? this.at(this.getParentIndexPath(indexPath)) : void 0;\n    });\n    __publicField(this, \"visit\", (opts) => {\n      const { skip, ...rest } = opts;\n      visit(this.rootNode, {\n        ...rest,\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          if (skip?.({ value: this.getNodeValue(node), node, indexPath })) return \"skip\";\n          return rest.onEnter?.(node, indexPath);\n        }\n      });\n    });\n    __publicField(this, \"getPreviousSibling\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const siblings = this.getNodeChildren(parentNode);\n      let idx = siblings.findIndex((sibling) => this.getValue(indexPath) === this.getNodeValue(sibling));\n      while (--idx >= 0) {\n        const sibling = siblings[idx];\n        if (!this.getNodeDisabled(sibling)) return sibling;\n      }\n      return;\n    });\n    __publicField(this, \"getNextSibling\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const siblings = this.getNodeChildren(parentNode);\n      let idx = siblings.findIndex((sibling) => this.getValue(indexPath) === this.getNodeValue(sibling));\n      while (++idx < siblings.length) {\n        const sibling = siblings[idx];\n        if (!this.getNodeDisabled(sibling)) return sibling;\n      }\n      return;\n    });\n    __publicField(this, \"getSiblingNodes\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      return parentNode ? this.getNodeChildren(parentNode) : [];\n    });\n    __publicField(this, \"getValues\", (rootNode = this.rootNode) => {\n      const values = flatMap(rootNode, {\n        getChildren: this.getNodeChildren,\n        transform: (node) => [this.getNodeValue(node)]\n      });\n      return values.slice(1);\n    });\n    __publicField(this, \"isSameDepth\", (indexPath, depth) => {\n      if (depth == null) return true;\n      return indexPath.length === depth;\n    });\n    __publicField(this, \"isBranchNode\", (node) => {\n      return this.getNodeChildren(node).length > 0;\n    });\n    __publicField(this, \"getBranchValues\", (rootNode = this.rootNode, opts = {}) => {\n      let values = [];\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) return \"skip\";\n          if (this.getNodeChildren(node).length > 0 && this.isSameDepth(indexPath, opts.depth)) {\n            values.push(this.getNodeValue(node));\n          }\n        }\n      });\n      return values.slice(1);\n    });\n    __publicField(this, \"flatten\", (rootNode = this.rootNode) => {\n      const nodes = flatMap(rootNode, {\n        getChildren: this.getNodeChildren,\n        transform: (node, indexPath) => {\n          const children = this.getNodeChildren(node).map((child) => this.getNodeValue(child));\n          return [\n            (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({\n              label: this.stringifyNode(node),\n              value: this.getNodeValue(node),\n              indexPath,\n              children: children.length > 0 ? children : void 0\n            })\n          ];\n        }\n      });\n      return nodes.slice(1);\n    });\n    __publicField(this, \"_create\", (node, children) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ ...node, children });\n    });\n    __publicField(this, \"_insert\", (rootNode, indexPath, nodes) => {\n      return insert(rootNode, { at: indexPath, nodes, getChildren: this.getNodeChildren, create: this._create });\n    });\n    __publicField(this, \"_replace\", (rootNode, indexPath, node) => {\n      return replace(rootNode, { at: indexPath, node, getChildren: this.getNodeChildren, create: this._create });\n    });\n    __publicField(this, \"_move\", (rootNode, indexPaths, to) => {\n      return move(rootNode, { indexPaths, to, getChildren: this.getNodeChildren, create: this._create });\n    });\n    __publicField(this, \"_remove\", (rootNode, indexPaths) => {\n      return remove(rootNode, { indexPaths, getChildren: this.getNodeChildren, create: this._create });\n    });\n    __publicField(this, \"replace\", (indexPath, node) => {\n      return this._replace(this.rootNode, indexPath, node);\n    });\n    __publicField(this, \"remove\", (indexPaths) => {\n      return this._remove(this.rootNode, indexPaths);\n    });\n    __publicField(this, \"insertBefore\", (indexPath, nodes) => {\n      const parentNode = this.getParentNode(indexPath);\n      return parentNode ? this._insert(this.rootNode, indexPath, nodes) : void 0;\n    });\n    __publicField(this, \"insertAfter\", (indexPath, nodes) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const nextIndex = [...indexPath.slice(0, -1), indexPath[indexPath.length - 1] + 1];\n      return this._insert(this.rootNode, nextIndex, nodes);\n    });\n    __publicField(this, \"move\", (fromIndexPaths, toIndexPath) => {\n      return this._move(this.rootNode, fromIndexPaths, toIndexPath);\n    });\n    __publicField(this, \"json\", () => {\n      return this.getValues(this.rootNode);\n    });\n    this.rootNode = options.rootNode;\n  }\n};\nfunction flattenedToTree(nodes) {\n  let rootNode = {\n    value: \"ROOT\"\n  };\n  nodes.map((node) => {\n    const { indexPath, label, value } = node;\n    if (!indexPath.length) {\n      Object.assign(rootNode, { label, value, children: [] });\n      return;\n    }\n    rootNode = insert(rootNode, {\n      at: indexPath,\n      nodes: [(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ label, value })],\n      getChildren: (node2) => node2.children ?? [],\n      create: (node2, children) => {\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ ...node2, children });\n      }\n    });\n  });\n  return new TreeCollection({ rootNode });\n}\nfunction filePathToTree(paths) {\n  const rootNode = {\n    label: \"\",\n    value: \"ROOT\",\n    children: []\n  };\n  paths.forEach((path) => {\n    const parts = path.split(\"/\");\n    let currentNode = rootNode;\n    parts.forEach((part) => {\n      let childNode = currentNode.children?.find((child) => child.label === part);\n      if (!childNode) {\n        childNode = {\n          value: parts.slice(0, parts.indexOf(part) + 1).join(\"/\"),\n          label: part\n        };\n        currentNode.children || (currentNode.children = []);\n        currentNode.children.push(childNode);\n      }\n      currentNode = childNode;\n    });\n  });\n  return new TreeCollection({ rootNode });\n}\nvar fallback2 = {\n  nodeToValue(node) {\n    if (typeof node === \"string\") return node;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"value\")) return node.value;\n    return \"\";\n  },\n  nodeToString(node) {\n    if (typeof node === \"string\") return node;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"label\")) return node.label;\n    return fallback2.nodeToValue(node);\n  },\n  isNodeDisabled(node) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"disabled\")) return !!node.disabled;\n    return false;\n  },\n  nodeToChildren(node) {\n    return node.children;\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/color-picker/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/color-picker/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/color-utils */ \"(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/color-picker.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"color-picker\", [\n  \"root\",\n  \"label\",\n  \"control\",\n  \"trigger\",\n  \"positioner\",\n  \"content\",\n  \"area\",\n  \"areaThumb\",\n  \"valueText\",\n  \"areaBackground\",\n  \"channelSlider\",\n  \"channelSliderLabel\",\n  \"channelSliderTrack\",\n  \"channelSliderThumb\",\n  \"channelSliderValueText\",\n  \"channelInput\",\n  \"transparencyGrid\",\n  \"swatchGroup\",\n  \"swatchTrigger\",\n  \"swatchIndicator\",\n  \"swatch\",\n  \"eyeDropperTrigger\",\n  \"formatTrigger\",\n  \"formatSelect\"\n]);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `color-picker:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `color-picker:${ctx.id}:label`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `color-picker:${ctx.id}:hidden-input`,\n  getControlId: (ctx) => ctx.ids?.control ?? `color-picker:${ctx.id}:control`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `color-picker:${ctx.id}:trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `color-picker:${ctx.id}:content`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `color-picker:${ctx.id}:positioner`,\n  getFormatSelectId: (ctx) => ctx.ids?.formatSelect ?? `color-picker:${ctx.id}:format-select`,\n  getAreaId: (ctx) => ctx.ids?.area ?? `color-picker:${ctx.id}:area`,\n  getAreaGradientId: (ctx) => ctx.ids?.areaGradient ?? `color-picker:${ctx.id}:area-gradient`,\n  getAreaThumbId: (ctx) => ctx.ids?.areaThumb ?? `color-picker:${ctx.id}:area-thumb`,\n  getChannelSliderTrackId: (ctx, channel) => ctx.ids?.channelSliderTrack?.(channel) ?? `color-picker:${ctx.id}:slider-track:${channel}`,\n  getChannelSliderThumbId: (ctx, channel) => ctx.ids?.channelSliderThumb?.(channel) ?? `color-picker:${ctx.id}:slider-thumb:${channel}`,\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getAreaThumbEl: (ctx) => dom.getById(ctx, dom.getAreaThumbId(ctx)),\n  getChannelSliderThumbEl: (ctx, channel) => dom.getById(ctx, dom.getChannelSliderThumbId(ctx, channel)),\n  getChannelInputEl: (ctx, channel) => {\n    const selector = `input[data-channel=\"${channel}\"]`;\n    return [\n      ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getContentEl(ctx), selector),\n      ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getControlEl(ctx), selector)\n    ];\n  },\n  getFormatSelectEl: (ctx) => dom.getById(ctx, dom.getFormatSelectId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  getAreaEl: (ctx) => dom.getById(ctx, dom.getAreaId(ctx)),\n  getAreaValueFromPoint(ctx, point) {\n    const areaEl = dom.getAreaEl(ctx);\n    if (!areaEl) return;\n    const { percent } = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, areaEl);\n    return percent;\n  },\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getChannelSliderTrackEl: (ctx, channel) => {\n    return dom.getById(ctx, dom.getChannelSliderTrackId(ctx, channel));\n  },\n  getChannelSliderValueFromPoint(ctx, point, channel) {\n    const trackEl = dom.getChannelSliderTrackEl(ctx, channel);\n    if (!trackEl) return;\n    const { percent } = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, trackEl);\n    return percent;\n  },\n  getChannelInputEls: (ctx) => {\n    return [\n      ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getContentEl(ctx), \"input[data-channel]\"),\n      ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getControlEl(ctx), \"input[data-channel]\")\n    ];\n  }\n});\nfunction getChannelDisplayColor(color, channel) {\n  switch (channel) {\n    case \"hue\":\n      return (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(`hsl(${color.getChannelValue(\"hue\")}, 100%, 50%)`);\n    case \"lightness\":\n    case \"brightness\":\n    case \"saturation\":\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.withChannelValue(\"alpha\", 1);\n    case \"alpha\": {\n      return color;\n    }\n    default:\n      throw new Error(\"Unknown color channel: \" + channel);\n  }\n}\nfunction getChannelValue(color, channel) {\n  if (channel == null) return \"\";\n  if (channel === \"hex\") {\n    return color.toString(\"hex\");\n  }\n  if (channel === \"css\") {\n    return color.toString(\"css\");\n  }\n  if (channel in color) {\n    return color.getChannelValue(channel).toString();\n  }\n  const isHSL = color.getFormat() === \"hsla\";\n  switch (channel) {\n    case \"hue\":\n      return isHSL ? color.toFormat(\"hsla\").getChannelValue(\"hue\").toString() : color.toFormat(\"hsba\").getChannelValue(\"hue\").toString();\n    case \"saturation\":\n      return isHSL ? color.toFormat(\"hsla\").getChannelValue(\"saturation\").toString() : color.toFormat(\"hsba\").getChannelValue(\"saturation\").toString();\n    case \"lightness\":\n      return color.toFormat(\"hsla\").getChannelValue(\"lightness\").toString();\n    case \"brightness\":\n      return color.toFormat(\"hsba\").getChannelValue(\"brightness\").toString();\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.toFormat(\"rgba\").getChannelValue(channel).toString();\n    default:\n      return color.getChannelValue(channel).toString();\n  }\n}\nfunction getChannelRange(color, channel) {\n  switch (channel) {\n    case \"hex\":\n      const minColor = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(\"#000000\");\n      const maxColor = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(\"#FFFFFF\");\n      return {\n        minValue: minColor.toHexInt(),\n        maxValue: maxColor.toHexInt(),\n        pageSize: 10,\n        step: 1\n      };\n    case \"css\":\n      return void 0;\n    case \"hue\":\n    case \"saturation\":\n    case \"lightness\":\n      return color.toFormat(\"hsla\").getChannelRange(channel);\n    case \"brightness\":\n      return color.toFormat(\"hsba\").getChannelRange(channel);\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.toFormat(\"rgba\").getChannelRange(channel);\n    default:\n      return color.getChannelRange(channel);\n  }\n}\n\n// src/utils/get-slider-background.ts\nfunction getSliderBackgroundDirection(orientation, dir) {\n  if (orientation === \"vertical\") {\n    return \"top\";\n  } else if (dir === \"ltr\") {\n    return \"right\";\n  } else {\n    return \"left\";\n  }\n}\nvar getSliderBackground = (props) => {\n  const { channel, value, dir, orientation } = props;\n  const bgDirection = getSliderBackgroundDirection(orientation, dir);\n  const { minValue, maxValue } = value.getChannelRange(channel);\n  switch (channel) {\n    case \"hue\":\n      return `linear-gradient(to ${bgDirection}, rgb(255, 0, 0) 0%, rgb(255, 255, 0) 17%, rgb(0, 255, 0) 33%, rgb(0, 255, 255) 50%, rgb(0, 0, 255) 67%, rgb(255, 0, 255) 83%, rgb(255, 0, 0) 100%)`;\n    case \"lightness\": {\n      let start = value.withChannelValue(channel, minValue).toString(\"css\");\n      let middle = value.withChannelValue(channel, (maxValue - minValue) / 2).toString(\"css\");\n      let end = value.withChannelValue(channel, maxValue).toString(\"css\");\n      return `linear-gradient(to ${bgDirection}, ${start}, ${middle}, ${end})`;\n    }\n    case \"saturation\":\n    case \"brightness\":\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n    case \"alpha\": {\n      let start = value.withChannelValue(channel, minValue).toString(\"css\");\n      let end = value.withChannelValue(channel, maxValue).toString(\"css\");\n      return `linear-gradient(to ${bgDirection}, ${start}, ${end})`;\n    }\n    default:\n      throw new Error(\"Unknown color channel: \" + channel);\n  }\n};\n\n// src/color-picker.connect.ts\nfunction connect(state, send, normalize) {\n  const value = state.context.value;\n  const areaValue = state.context.areaValue;\n  const valueAsString = state.context.valueAsString;\n  const disabled = state.context.isDisabled;\n  const interactive = state.context.isInteractive;\n  const dragging = state.hasTag(\"dragging\");\n  const open = state.hasTag(\"open\");\n  const focused = state.hasTag(\"focused\");\n  const getAreaChannels = (props) => {\n    const channels = areaValue.getChannels();\n    return {\n      xChannel: props.xChannel ?? channels[1],\n      yChannel: props.yChannel ?? channels[2]\n    };\n  };\n  const currentPlacement = state.context.currentPlacement;\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: currentPlacement\n  });\n  function getSwatchTriggerState(props) {\n    const color = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeColor)(props.value).toFormat(state.context.format);\n    return {\n      value: color,\n      valueAsString: color.toString(\"hex\"),\n      checked: color.isEqual(value),\n      disabled: props.disabled || !interactive\n    };\n  }\n  return {\n    dragging,\n    open,\n    valueAsString,\n    value,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeColor)(value2), src: \"set-color\" });\n    },\n    getChannelValue(channel) {\n      return getChannelValue(value, channel);\n    },\n    getChannelValueText(channel, locale) {\n      return value.formatChannelValue(channel, locale);\n    },\n    setChannelValue(channel, channelValue) {\n      const color = value.withChannelValue(channel, channelValue);\n      send({ type: \"VALUE.SET\", value: color, src: \"set-channel\" });\n    },\n    format: state.context.format,\n    setFormat(format) {\n      const formatValue = value.toFormat(format);\n      send({ type: \"VALUE.SET\", value: formatValue, src: \"set-format\" });\n    },\n    alpha: value.getChannelValue(\"alpha\"),\n    setAlpha(alphaValue) {\n      const color = value.withChannelValue(\"alpha\", alphaValue);\n      send({ type: \"VALUE.SET\", value: color, src: \"set-alpha\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        style: {\n          \"--value\": value.toString(\"css\")\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        onClick(event) {\n          event.preventDefault();\n          const inputEl = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(dom.getControlEl(state.context), \"[data-channel=hex]\");\n          inputEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        id: dom.getControlId(state.context),\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: dom.getTriggerId(state.context),\n        dir: state.context.dir,\n        disabled,\n        \"aria-label\": `select color. current color is ${valueAsString}`,\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-placement\": currentPlacement,\n        \"aria-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        type: \"button\",\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"TRIGGER.BLUR\" });\n        },\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        id: dom.getPositionerId(state.context),\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: dom.getContentId(state.context),\n        dir: state.context.dir,\n        \"data-placement\": currentPlacement,\n        \"data-state\": open ? \"open\" : \"closed\",\n        hidden: !open\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getAreaProps(props = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props);\n      const { areaStyles } = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.getColorAreaGradient)(areaValue, {\n        xChannel,\n        yChannel,\n        dir: state.context.dir\n      });\n      return normalize.element({\n        ...parts.area.attrs,\n        id: dom.getAreaId(state.context),\n        role: \"group\",\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const channel = { xChannel, yChannel };\n          send({ type: \"AREA.POINTER_DOWN\", point, channel, id: \"area\" });\n          event.preventDefault();\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          ...areaStyles\n        }\n      });\n    },\n    getAreaBackgroundProps(props = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props);\n      const { areaGradientStyles } = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.getColorAreaGradient)(areaValue, {\n        xChannel,\n        yChannel,\n        dir: state.context.dir\n      });\n      return normalize.element({\n        ...parts.areaBackground.attrs,\n        id: dom.getAreaGradientId(state.context),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          ...areaGradientStyles\n        }\n      });\n    },\n    getAreaThumbProps(props = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props);\n      const channel = { xChannel, yChannel };\n      const xPercent = areaValue.getChannelValuePercent(xChannel);\n      const yPercent = 1 - areaValue.getChannelValuePercent(yChannel);\n      const xValue = areaValue.getChannelValue(xChannel);\n      const yValue = areaValue.getChannelValue(yChannel);\n      const color = areaValue.withChannelValue(\"alpha\", 1).toString(\"css\");\n      return normalize.element({\n        ...parts.areaThumb.attrs,\n        id: dom.getAreaThumbId(state.context),\n        dir: state.context.dir,\n        tabIndex: disabled ? void 0 : 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        role: \"slider\",\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        \"aria-valuenow\": xValue,\n        \"aria-label\": `${xChannel} and ${yChannel}`,\n        \"aria-roledescription\": \"2d slider\",\n        \"aria-valuetext\": `${xChannel} ${xValue}, ${yChannel} ${yValue}`,\n        style: {\n          position: \"absolute\",\n          left: `${xPercent * 100}%`,\n          top: `${yPercent * 100}%`,\n          transform: \"translate(-50%, -50%)\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          \"--color\": color,\n          background: color\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"AREA.FOCUS\", id: \"area\", channel });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event);\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"AREA.ARROW_UP\", channel, step });\n            },\n            ArrowDown() {\n              send({ type: \"AREA.ARROW_DOWN\", channel, step });\n            },\n            ArrowLeft() {\n              send({ type: \"AREA.ARROW_LEFT\", channel, step });\n            },\n            ArrowRight() {\n              send({ type: \"AREA.ARROW_RIGHT\", channel, step });\n            },\n            PageUp() {\n              send({ type: \"AREA.PAGE_UP\", channel, step });\n            },\n            PageDown() {\n              send({ type: \"AREA.PAGE_DOWN\", channel, step });\n            },\n            Escape(event2) {\n              event2.stopPropagation();\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getTransparencyGridProps(props = {}) {\n      const { size = \"12px\" } = props;\n      return normalize.element({\n        ...parts.transparencyGrid.attrs,\n        style: {\n          \"--size\": size,\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          backgroundColor: \"#fff\",\n          backgroundImage: \"conic-gradient(#eeeeee 0 25%, transparent 0 50%, #eeeeee 0 75%, transparent 0)\",\n          backgroundSize: \"var(--size) var(--size)\",\n          inset: \"0px\",\n          zIndex: \"auto\",\n          pointerEvents: \"none\"\n        }\n      });\n    },\n    getChannelSliderProps(props) {\n      const { orientation = \"horizontal\", channel, format } = props;\n      return normalize.element({\n        ...parts.channelSlider.attrs,\n        \"data-channel\": channel,\n        \"data-orientation\": orientation,\n        role: \"presentation\",\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CHANNEL_SLIDER.POINTER_DOWN\", channel, format, point, id: channel, orientation });\n          event.preventDefault();\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\"\n        }\n      });\n    },\n    getChannelSliderTrackProps(props) {\n      const { orientation = \"horizontal\", channel, format } = props;\n      const normalizedValue = format ? value.toFormat(format) : areaValue;\n      return normalize.element({\n        ...parts.channelSliderTrack.attrs,\n        id: dom.getChannelSliderTrackId(state.context, channel),\n        role: \"group\",\n        \"data-channel\": channel,\n        \"data-orientation\": orientation,\n        style: {\n          position: \"relative\",\n          forcedColorAdjust: \"none\",\n          backgroundImage: getSliderBackground({\n            orientation,\n            channel,\n            dir: state.context.dir,\n            value: normalizedValue\n          })\n        }\n      });\n    },\n    getChannelSliderLabelProps(props) {\n      const { channel } = props;\n      return normalize.element({\n        ...parts.channelSliderLabel.attrs,\n        \"data-channel\": channel,\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          const thumbId = dom.getChannelSliderThumbId(state.context, channel);\n          dom.getById(state.context, thumbId)?.focus({ preventScroll: true });\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getChannelSliderValueTextProps(props) {\n      return normalize.element({\n        ...parts.channelSliderValueText.attrs,\n        \"data-channel\": props.channel\n      });\n    },\n    getChannelSliderThumbProps(props) {\n      const { orientation = \"horizontal\", channel, format } = props;\n      const normalizedValue = format ? value.toFormat(format) : areaValue;\n      const channelRange = normalizedValue.getChannelRange(channel);\n      const channelValue = normalizedValue.getChannelValue(channel);\n      const offset = (channelValue - channelRange.minValue) / (channelRange.maxValue - channelRange.minValue);\n      const placementStyles = orientation === \"horizontal\" ? { left: `${offset * 100}%`, top: \"50%\" } : { top: `${offset * 100}%`, left: \"50%\" };\n      return normalize.element({\n        ...parts.channelSliderThumb.attrs,\n        id: dom.getChannelSliderThumbId(state.context, channel),\n        role: \"slider\",\n        \"aria-label\": channel,\n        tabIndex: disabled ? void 0 : 0,\n        \"data-channel\": channel,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": orientation,\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-orientation\": orientation,\n        \"aria-valuemax\": channelRange.maxValue,\n        \"aria-valuemin\": channelRange.minValue,\n        \"aria-valuenow\": channelValue,\n        \"aria-valuetext\": `${channel} ${channelValue}`,\n        style: {\n          forcedColorAdjust: \"none\",\n          position: \"absolute\",\n          background: getChannelDisplayColor(areaValue, channel).toString(\"css\"),\n          ...placementStyles\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"CHANNEL_SLIDER.FOCUS\", channel });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * channelRange.step;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_UP\", channel, step });\n            },\n            ArrowDown() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_DOWN\", channel, step });\n            },\n            ArrowLeft() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_LEFT\", channel, step });\n            },\n            ArrowRight() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_RIGHT\", channel, step });\n            },\n            PageUp() {\n              send({ type: \"CHANNEL_SLIDER.PAGE_UP\", channel });\n            },\n            PageDown() {\n              send({ type: \"CHANNEL_SLIDER.PAGE_DOWN\", channel });\n            },\n            Home() {\n              send({ type: \"CHANNEL_SLIDER.HOME\", channel });\n            },\n            End() {\n              send({ type: \"CHANNEL_SLIDER.END\", channel });\n            },\n            Escape(event2) {\n              event2.stopPropagation();\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getChannelInputProps(props) {\n      const { channel } = props;\n      const isTextField = channel === \"hex\" || channel === \"css\";\n      const channelRange = getChannelRange(value, channel);\n      return normalize.input({\n        ...parts.channelInput.attrs,\n        dir: state.context.dir,\n        type: isTextField ? \"text\" : \"number\",\n        \"data-channel\": channel,\n        \"aria-label\": channel,\n        spellCheck: false,\n        autoComplete: \"off\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        readOnly: state.context.readOnly,\n        defaultValue: getChannelValue(value, channel),\n        min: channelRange?.minValue,\n        max: channelRange?.maxValue,\n        step: channelRange?.step,\n        onBeforeInput(event) {\n          if (isTextField || !interactive) return;\n          const value2 = event.currentTarget.value;\n          if (value2.match(/[^0-9.]/g)) {\n            event.preventDefault();\n          }\n        },\n        onFocus(event) {\n          if (!interactive) return;\n          send({ type: \"CHANNEL_INPUT.FOCUS\", channel });\n          event.currentTarget.select();\n        },\n        onBlur(event) {\n          if (!interactive) return;\n          const value2 = isTextField ? event.currentTarget.value : event.currentTarget.valueAsNumber;\n          send({ type: \"CHANNEL_INPUT.BLUR\", channel, value: value2, isTextField });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (event.key === \"Enter\") {\n            const value2 = isTextField ? event.currentTarget.value : event.currentTarget.valueAsNumber;\n            send({ type: \"CHANNEL_INPUT.CHANGE\", channel, value: value2, isTextField });\n            event.preventDefault();\n          }\n        },\n        style: {\n          appearance: \"none\",\n          WebkitAppearance: \"none\",\n          MozAppearance: \"textfield\"\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        type: \"text\",\n        disabled,\n        name: state.context.name,\n        tabIndex: -1,\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        id: dom.getHiddenInputId(state.context),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        defaultValue: valueAsString\n      });\n    },\n    getEyeDropperTriggerProps() {\n      return normalize.button({\n        ...parts.eyeDropperTrigger.attrs,\n        type: \"button\",\n        dir: state.context.dir,\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"aria-label\": \"Pick a color from the screen\",\n        onClick() {\n          if (!interactive) return;\n          send(\"EYEDROPPER.CLICK\");\n        }\n      });\n    },\n    getSwatchGroupProps() {\n      return normalize.element({\n        ...parts.swatchGroup.attrs,\n        role: \"group\"\n      });\n    },\n    getSwatchTriggerState,\n    getSwatchTriggerProps(props) {\n      const swatchState = getSwatchTriggerState(props);\n      return normalize.button({\n        ...parts.swatchTrigger.attrs,\n        disabled: swatchState.disabled,\n        dir: state.context.dir,\n        type: \"button\",\n        \"aria-label\": `select ${swatchState.valueAsString} as the color`,\n        \"data-state\": swatchState.checked ? \"checked\" : \"unchecked\",\n        \"data-value\": swatchState.valueAsString,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(swatchState.disabled),\n        onClick() {\n          if (swatchState.disabled) return;\n          send({ type: \"SWATCH_TRIGGER.CLICK\", value: swatchState.value });\n        },\n        style: {\n          \"--color\": swatchState.valueAsString,\n          position: \"relative\"\n        }\n      });\n    },\n    getSwatchIndicatorProps(props) {\n      const swatchState = getSwatchTriggerState(props);\n      return normalize.element({\n        ...parts.swatchIndicator.attrs,\n        dir: state.context.dir,\n        hidden: !swatchState.checked\n      });\n    },\n    getSwatchProps(props) {\n      const { respectAlpha = true } = props;\n      const swatchState = getSwatchTriggerState(props);\n      const color = swatchState.value.toString(respectAlpha ? \"css\" : \"hex\");\n      return normalize.element({\n        ...parts.swatch.attrs,\n        dir: state.context.dir,\n        \"data-state\": swatchState.checked ? \"checked\" : \"unchecked\",\n        \"data-value\": swatchState.valueAsString,\n        style: {\n          \"--color\": color,\n          position: \"relative\",\n          background: color\n        }\n      });\n    },\n    getFormatTriggerProps() {\n      return normalize.button({\n        ...parts.formatTrigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        \"aria-label\": `change color format to ${getNextFormat(state.context.format)}`,\n        onClick(event) {\n          if (event.currentTarget.disabled) return;\n          const nextFormat = getNextFormat(state.context.format);\n          send({ type: \"FORMAT.SET\", format: nextFormat, src: \"format-trigger\" });\n        }\n      });\n    },\n    getFormatSelectProps() {\n      return normalize.select({\n        ...parts.formatSelect.attrs,\n        \"aria-label\": \"change color format\",\n        dir: state.context.dir,\n        defaultValue: state.context.format,\n        disabled,\n        onChange(event) {\n          const format = assertFormat(event.currentTarget.value);\n          send({ type: \"FORMAT.SET\", format, src: \"format-select\" });\n        }\n      });\n    }\n  };\n}\nvar formats = [\"hsba\", \"hsla\", \"rgba\"];\nvar formatRegex = new RegExp(`^(${formats.join(\"|\")})$`);\nfunction getNextFormat(format) {\n  const index = formats.indexOf(format);\n  return formats[index + 1] ?? formats[0];\n}\nfunction assertFormat(format) {\n  if (formatRegex.test(format)) return format;\n  throw new Error(`Unsupported color format: ${format}`);\n}\nvar parse = (colorString) => {\n  return (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(colorString);\n};\n\n// src/color-picker.machine.ts\nvar { and } = _zag_js_core__WEBPACK_IMPORTED_MODULE_4__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)(\n    {\n      id: \"color-picker\",\n      initial: ctx.open ? \"open\" : \"idle\",\n      context: {\n        dir: \"ltr\",\n        value: parse(\"#000000\"),\n        format: \"rgba\",\n        disabled: false,\n        closeOnSelect: false,\n        openAutoFocus: true,\n        ...ctx,\n        activeId: null,\n        activeChannel: null,\n        activeOrientation: null,\n        fieldsetDisabled: false,\n        restoreFocus: true,\n        positioning: {\n          ...ctx.positioning,\n          placement: \"bottom\"\n        }\n      },\n      computed: {\n        isRtl: (ctx2) => ctx2.dir === \"rtl\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.isDisabled || ctx2.readOnly),\n        valueAsString: (ctx2) => ctx2.value.toString(ctx2.format),\n        areaValue: (ctx2) => {\n          const format = ctx2.format.startsWith(\"hsl\") ? \"hsla\" : \"hsba\";\n          return ctx2.value.toFormat(format);\n        }\n      },\n      activities: [\"trackFormControl\"],\n      watch: {\n        value: [\"syncInputElements\"],\n        format: [\"syncFormatSelectElement\"],\n        open: [\"toggleVisibility\"]\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        },\n        \"FORMAT.SET\": {\n          actions: [\"setFormat\"]\n        },\n        \"CHANNEL_INPUT.CHANGE\": {\n          actions: [\"setChannelColorFromInput\"]\n        },\n        \"EYEDROPPER.CLICK\": {\n          actions: [\"openEyeDropper\"]\n        },\n        \"SWATCH_TRIGGER.CLICK\": {\n          actions: [\"setValue\"]\n        }\n      },\n      states: {\n        idle: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\",\n              actions: [\"setInitialFocus\"]\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            \"CHANNEL_INPUT.FOCUS\": {\n              target: \"focused\",\n              actions: [\"setActiveChannel\"]\n            }\n          }\n        },\n        focused: {\n          tags: [\"closed\", \"focused\"],\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\",\n              actions: [\"setInitialFocus\"]\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            \"CHANNEL_INPUT.FOCUS\": {\n              actions: [\"setActiveChannel\"]\n            },\n            \"CHANNEL_INPUT.BLUR\": {\n              target: \"idle\",\n              actions: [\"setChannelColorFromInput\"]\n            },\n            \"TRIGGER.BLUR\": {\n              target: \"idle\"\n            }\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackPositioning\", \"trackDismissableElement\"],\n          on: {\n            \"CONTROLLED.CLOSE\": [\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"setReturnFocus\"]\n              },\n              {\n                target: \"idle\"\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            \"AREA.POINTER_DOWN\": {\n              target: \"open:dragging\",\n              actions: [\"setActiveChannel\", \"setAreaColorFromPoint\", \"focusAreaThumb\"]\n            },\n            \"AREA.FOCUS\": {\n              actions: [\"setActiveChannel\"]\n            },\n            \"CHANNEL_SLIDER.POINTER_DOWN\": {\n              target: \"open:dragging\",\n              actions: [\"setActiveChannel\", \"setChannelColorFromPoint\", \"focusChannelThumb\"]\n            },\n            \"CHANNEL_SLIDER.FOCUS\": {\n              actions: [\"setActiveChannel\"]\n            },\n            \"AREA.ARROW_LEFT\": {\n              actions: [\"decrementAreaXChannel\"]\n            },\n            \"AREA.ARROW_RIGHT\": {\n              actions: [\"incrementAreaXChannel\"]\n            },\n            \"AREA.ARROW_UP\": {\n              actions: [\"incrementAreaYChannel\"]\n            },\n            \"AREA.ARROW_DOWN\": {\n              actions: [\"decrementAreaYChannel\"]\n            },\n            \"AREA.PAGE_UP\": {\n              actions: [\"incrementAreaXChannel\"]\n            },\n            \"AREA.PAGE_DOWN\": {\n              actions: [\"decrementAreaXChannel\"]\n            },\n            \"CHANNEL_SLIDER.ARROW_LEFT\": {\n              actions: [\"decrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.ARROW_RIGHT\": {\n              actions: [\"incrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.ARROW_UP\": {\n              actions: [\"incrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.ARROW_DOWN\": {\n              actions: [\"decrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.PAGE_UP\": {\n              actions: [\"incrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.PAGE_DOWN\": {\n              actions: [\"decrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.HOME\": {\n              actions: [\"setChannelToMin\"]\n            },\n            \"CHANNEL_SLIDER.END\": {\n              actions: [\"setChannelToMax\"]\n            },\n            \"CHANNEL_INPUT.BLUR\": {\n              actions: [\"setChannelColorFromInput\"]\n            },\n            INTERACT_OUTSIDE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"setReturnFocus\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            \"SWATCH_TRIGGER.CLICK\": [\n              {\n                guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n                actions: [\"setValue\", \"invokeOnClose\"]\n              },\n              {\n                guard: \"closeOnSelect\",\n                target: \"focused\",\n                actions: [\"setValue\", \"invokeOnClose\", \"setReturnFocus\"]\n              },\n              {\n                actions: [\"setValue\"]\n              }\n            ]\n          }\n        },\n        \"open:dragging\": {\n          tags: [\"open\"],\n          exit: [\"clearActiveChannel\"],\n          activities: [\"trackPointerMove\", \"disableTextSelection\", \"trackPositioning\", \"trackDismissableElement\"],\n          on: {\n            \"CONTROLLED.CLOSE\": [\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"setReturnFocus\"]\n              },\n              {\n                target: \"idle\"\n              }\n            ],\n            \"AREA.POINTER_MOVE\": {\n              actions: [\"setAreaColorFromPoint\", \"focusAreaThumb\"]\n            },\n            \"AREA.POINTER_UP\": {\n              target: \"open\",\n              actions: [\"invokeOnChangeEnd\"]\n            },\n            \"CHANNEL_SLIDER.POINTER_MOVE\": {\n              actions: [\"setChannelColorFromPoint\", \"focusChannelThumb\"]\n            },\n            \"CHANNEL_SLIDER.POINTER_UP\": {\n              target: \"open\",\n              actions: [\"invokeOnChangeEnd\"]\n            },\n            INTERACT_OUTSIDE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"setReturnFocus\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        closeOnSelect: (ctx2) => !!ctx2.closeOnSelect,\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"],\n        shouldRestoreFocus: (ctx2) => !!ctx2.restoreFocus\n      },\n      activities: {\n        trackPositioning(ctx2) {\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const anchorEl = dom.getTriggerEl(ctx2);\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(anchorEl, getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__.trackDismissableElement)(getContentEl, {\n            exclude: dom.getTriggerEl(ctx2),\n            defer: true,\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (event.defaultPrevented) return;\n              ctx2.restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n            },\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onFocusOutside: ctx2.onFocusOutside,\n            onDismiss() {\n              send({ type: \"INTERACT_OUTSIDE\" });\n            }\n          });\n        },\n        trackFormControl(ctx2, _evt, { send, initialContext }) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          return (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_7__.trackFormControl)(inputEl, {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"VALUE.SET\", value: initialContext.value, src: \"form.reset\" });\n            }\n          });\n        },\n        trackPointerMove(ctx2, evt, { send }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPointerMove)(dom.getDoc(ctx2), {\n            onPointerMove({ point }) {\n              const type = ctx2.activeId === \"area\" ? \"AREA.POINTER_MOVE\" : \"CHANNEL_SLIDER.POINTER_MOVE\";\n              send({ type, point, format: evt.format });\n            },\n            onPointerUp() {\n              const type = ctx2.activeId === \"area\" ? \"AREA.POINTER_UP\" : \"CHANNEL_SLIDER.POINTER_UP\";\n              send({ type });\n            }\n          });\n        },\n        disableTextSelection(ctx2) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.disableTextSelection)({ doc: dom.getDoc(ctx2), target: dom.getContentEl(ctx2) });\n        }\n      },\n      actions: {\n        openEyeDropper(ctx2) {\n          const isSupported = \"EyeDropper\" in dom.getWin(ctx2);\n          if (!isSupported) return;\n          const win = dom.getWin(ctx2);\n          const picker = new win.EyeDropper();\n          picker.open().then(({ sRGBHex }) => {\n            const format = ctx2.value.getFormat();\n            const color = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(sRGBHex).toFormat(format);\n            set.value(ctx2, color);\n            ctx2.onValueChangeEnd?.({ value: ctx2.value, valueAsString: ctx2.valueAsString });\n          }).catch(() => void 0);\n        },\n        setActiveChannel(ctx2, evt) {\n          ctx2.activeId = evt.id;\n          if (evt.channel) ctx2.activeChannel = evt.channel;\n          if (evt.orientation) ctx2.activeOrientation = evt.orientation;\n        },\n        clearActiveChannel(ctx2) {\n          ctx2.activeChannel = null;\n          ctx2.activeId = null;\n          ctx2.activeOrientation = null;\n        },\n        setAreaColorFromPoint(ctx2, evt) {\n          const normalizedValue = evt.format ? ctx2.value.toFormat(evt.format) : ctx2.areaValue;\n          const { xChannel, yChannel } = evt.channel || ctx2.activeChannel;\n          const percent = dom.getAreaValueFromPoint(ctx2, evt.point);\n          if (!percent) return;\n          const xValue = normalizedValue.getChannelPercentValue(xChannel, percent.x);\n          const yValue = normalizedValue.getChannelPercentValue(yChannel, 1 - percent.y);\n          const color = normalizedValue.withChannelValue(xChannel, xValue).withChannelValue(yChannel, yValue);\n          set.value(ctx2, color);\n        },\n        setChannelColorFromPoint(ctx2, evt) {\n          const channel = evt.channel || ctx2.activeId;\n          const normalizedValue = evt.format ? ctx2.value.toFormat(evt.format) : ctx2.areaValue;\n          const percent = dom.getChannelSliderValueFromPoint(ctx2, evt.point, channel);\n          if (!percent) return;\n          const orientation = ctx2.activeOrientation || \"horizontal\";\n          const channelPercent = orientation === \"horizontal\" ? percent.x : percent.y;\n          const value = normalizedValue.getChannelPercentValue(channel, channelPercent);\n          const color = normalizedValue.withChannelValue(channel, value);\n          set.value(ctx2, color);\n        },\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        setFormat(ctx2, evt) {\n          set.format(ctx2, evt.format);\n        },\n        syncInputElements(ctx2) {\n          sync.inputs(ctx2);\n        },\n        invokeOnChangeEnd(ctx2) {\n          invoke.changeEnd(ctx2);\n        },\n        setChannelColorFromInput(ctx2, evt) {\n          const { channel, isTextField, value } = evt;\n          const currentAlpha = ctx2.value.getChannelValue(\"alpha\");\n          let color;\n          if (channel === \"alpha\") {\n            let valueAsNumber = parseFloat(value);\n            valueAsNumber = Number.isNaN(valueAsNumber) ? currentAlpha : valueAsNumber;\n            color = ctx2.value.withChannelValue(\"alpha\", valueAsNumber);\n          } else if (isTextField) {\n            color = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.tryCatch)(\n              () => parse(value).withChannelValue(\"alpha\", currentAlpha),\n              () => ctx2.value\n            );\n          } else {\n            const current = ctx2.value.toFormat(ctx2.format);\n            const valueAsNumber = Number.isNaN(value) ? current.getChannelValue(channel) : value;\n            color = current.withChannelValue(channel, valueAsNumber);\n          }\n          sync.inputs(ctx2, color);\n          set.value(ctx2, color);\n        },\n        incrementChannel(ctx2, evt) {\n          const color = ctx2.value.incrementChannel(evt.channel, evt.step);\n          set.value(ctx2, color);\n        },\n        decrementChannel(ctx2, evt) {\n          const color = ctx2.value.decrementChannel(evt.channel, evt.step);\n          set.value(ctx2, color);\n        },\n        incrementAreaXChannel(ctx2, evt) {\n          const { xChannel } = evt.channel;\n          const color = ctx2.areaValue.incrementChannel(xChannel, evt.step);\n          set.value(ctx2, color);\n        },\n        decrementAreaXChannel(ctx2, evt) {\n          const { xChannel } = evt.channel;\n          const color = ctx2.areaValue.decrementChannel(xChannel, evt.step);\n          set.value(ctx2, color);\n        },\n        incrementAreaYChannel(ctx2, evt) {\n          const { yChannel } = evt.channel;\n          const color = ctx2.areaValue.incrementChannel(yChannel, evt.step);\n          set.value(ctx2, color);\n        },\n        decrementAreaYChannel(ctx2, evt) {\n          const { yChannel } = evt.channel;\n          const color = ctx2.areaValue.decrementChannel(yChannel, evt.step);\n          set.value(ctx2, color);\n        },\n        setChannelToMax(ctx2, evt) {\n          const range = ctx2.value.getChannelRange(evt.channel);\n          const color = ctx2.value.withChannelValue(evt.channel, range.maxValue);\n          set.value(ctx2, color);\n        },\n        setChannelToMin(ctx2, evt) {\n          const range = ctx2.value.getChannelRange(evt.channel);\n          const color = ctx2.value.withChannelValue(evt.channel, range.minValue);\n          set.value(ctx2, color);\n        },\n        focusAreaThumb(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getAreaThumbEl(ctx2)?.focus({ preventScroll: true });\n          });\n        },\n        focusChannelThumb(ctx2, evt) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getChannelSliderThumbEl(ctx2, evt.channel)?.focus({ preventScroll: true });\n          });\n        },\n        setInitialFocus(ctx2) {\n          if (!ctx2.openAutoFocus) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n              root: dom.getContentEl(ctx2),\n              getInitialEl: ctx2.initialFocusEl\n            });\n            element?.focus({ preventScroll: true });\n          });\n        },\n        setReturnFocus(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getTriggerEl(ctx2)?.focus({ preventScroll: true });\n          });\n        },\n        syncFormatSelectElement(ctx2) {\n          sync.formatSelect(ctx2);\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      },\n      compareFns: {\n        value: (a, b) => a.isEqual(b)\n      }\n    }\n  );\n}\nvar sync = {\n  // sync channel inputs\n  inputs(ctx, color) {\n    const channelInputs = dom.getChannelInputEls(ctx);\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n      channelInputs.forEach((inputEl) => {\n        const channel = inputEl.dataset.channel;\n        dom.setValue(inputEl, getChannelValue(color || ctx.value, channel));\n      });\n    });\n  },\n  // sync format select\n  formatSelect(ctx) {\n    const selectEl = dom.getFormatSelectEl(ctx);\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n      dom.setValue(selectEl, ctx.format);\n    });\n  }\n};\nvar invoke = {\n  changeEnd(ctx) {\n    const value = ctx.value.toFormat(ctx.format);\n    ctx.onValueChangeEnd?.({\n      value,\n      valueAsString: ctx.valueAsString\n    });\n  },\n  change(ctx) {\n    const value = ctx.value.toFormat(ctx.format);\n    ctx.onValueChange?.({\n      value,\n      valueAsString: ctx.valueAsString\n    });\n    (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_7__.dispatchInputValueEvent)(dom.getHiddenInputEl(ctx), { value: ctx.valueAsString });\n  },\n  formatChange(ctx) {\n    ctx.onFormatChange?.({ format: ctx.format });\n  }\n};\nvar set = {\n  value(ctx, color) {\n    if (!color || ctx.value.isEqual(color)) return;\n    ctx.value = color;\n    invoke.change(ctx);\n  },\n  format(ctx, format) {\n    if (ctx.format === format) return;\n    ctx.format = format;\n    invoke.formatChange(ctx);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/color-picker/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/color-utils/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   getColorAreaGradient: () => (/* binding */ getColorAreaGradient),\n/* harmony export */   normalizeColor: () => (/* binding */ normalizeColor),\n/* harmony export */   parseColor: () => (/* binding */ parseColor)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, key + \"\" , value);\n\n// src/color-format-gradient.ts\nvar generateRGB_R = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(${zValue},0,0),rgb(${zValue},255,0))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(${zValue},0,255),rgb(${zValue},255,255))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateRGB_G = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,${zValue},0),rgb(255,${zValue},0))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,${zValue},255),rgb(255,${zValue},255))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateRGB_B = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,0,${zValue}),rgb(255,0,${zValue}))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,255,${zValue}),rgb(255,255,${zValue}))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateHSL_H = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(dir)]}, hsla(0,0%,0%,1) 0%, hsla(0,0%,0%,0) 50%, hsla(0,0%,100%,0) 50%, hsla(0,0%,100%,1) 100%)`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,50%),hsla(0,0%,50%,0))`,\n        `hsl(${zValue}, 100%, 50%)`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSL_S = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]}, hsla(0,0%,0%,${alphaValue}) 0%, hsla(0,0%,0%,0) 50%, hsla(0,0%,100%,0) 50%, hsla(0,0%,100%,${alphaValue}) 100%)`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        \"hsl(0, 0%, 50%)\"\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSL_L = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      backgroundImage: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,${zValue}%),hsla(0,0%,${zValue}%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsl(0,100%,${zValue}%),hsl(60,100%,${zValue}%),hsl(120,100%,${zValue}%),hsl(180,100%,${zValue}%),hsl(240,100%,${zValue}%),hsl(300,100%,${zValue}%),hsl(360,100%,${zValue}%))`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_H = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(dir)]},hsl(0,0%,0%),hsla(0,0%,0%,0))`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,100%),hsla(0,0%,100%,0))`,\n        `hsl(${zValue}, 100%, 50%)`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_S = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsla(0,0%,0%,${alphaValue}),hsla(0,0%,0%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,0%),hsl(0,0%,100%))`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_B = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsla(0,0%,100%,${alphaValue}),hsla(0,0%,100%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        \"#000\"\n      ].join(\",\")\n    }\n  };\n  return result;\n};\n\n// src/area-gradient.ts\nfunction getColorAreaGradient(color, options) {\n  const { xChannel, yChannel, dir: dirProp = \"ltr\" } = options;\n  const { zChannel } = color.getColorAxes({ xChannel, yChannel });\n  const zValue = color.getChannelValue(zChannel);\n  const { minValue: zMin, maxValue: zMax } = color.getChannelRange(zChannel);\n  const orientation = [\"top\", dirProp === \"rtl\" ? \"left\" : \"right\"];\n  let dir = false;\n  let background = { areaStyles: {}, areaGradientStyles: {} };\n  let alphaValue = (zValue - zMin) / (zMax - zMin);\n  let isHSL = color.getFormat() === \"hsla\";\n  switch (zChannel) {\n    case \"red\": {\n      dir = xChannel === \"green\";\n      background = generateRGB_R(orientation, dir, zValue);\n      break;\n    }\n    case \"green\": {\n      dir = xChannel === \"red\";\n      background = generateRGB_G(orientation, dir, zValue);\n      break;\n    }\n    case \"blue\": {\n      dir = xChannel === \"red\";\n      background = generateRGB_B(orientation, dir, zValue);\n      break;\n    }\n    case \"hue\": {\n      dir = xChannel !== \"saturation\";\n      if (isHSL) {\n        background = generateHSL_H(orientation, dir, zValue);\n      } else {\n        background = generateHSB_H(orientation, dir, zValue);\n      }\n      break;\n    }\n    case \"saturation\": {\n      dir = xChannel === \"hue\";\n      if (isHSL) {\n        background = generateHSL_S(orientation, dir, alphaValue);\n      } else {\n        background = generateHSB_S(orientation, dir, alphaValue);\n      }\n      break;\n    }\n    case \"brightness\": {\n      dir = xChannel === \"hue\";\n      background = generateHSB_B(orientation, dir, alphaValue);\n      break;\n    }\n    case \"lightness\": {\n      dir = xChannel === \"hue\";\n      background = generateHSL_L(orientation, dir, zValue);\n      break;\n    }\n  }\n  return background;\n}\nvar isEqualObject = (a, b) => {\n  if (Object.keys(a).length !== Object.keys(b).length) return false;\n  for (let key in a) if (a[key] !== b[key]) return false;\n  return true;\n};\nvar Color = class {\n  toHexInt() {\n    return this.toFormat(\"rgba\").toHexInt();\n  }\n  getChannelValue(channel) {\n    if (channel in this) return this[channel];\n    throw new Error(\"Unsupported color channel: \" + channel);\n  }\n  getChannelValuePercent(channel, valueToCheck) {\n    const value = valueToCheck ?? this.getChannelValue(channel);\n    const { minValue, maxValue } = this.getChannelRange(channel);\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.getValuePercent)(value, minValue, maxValue);\n  }\n  getChannelPercentValue(channel, percentToCheck) {\n    const { minValue, maxValue, step } = this.getChannelRange(channel);\n    const percentValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.getPercentValue)(percentToCheck, minValue, maxValue, step);\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.snapValueToStep)(percentValue, minValue, maxValue, step);\n  }\n  withChannelValue(channel, value) {\n    const { minValue, maxValue } = this.getChannelRange(channel);\n    if (channel in this) {\n      let clone = this.clone();\n      clone[channel] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(value, minValue, maxValue);\n      return clone;\n    }\n    throw new Error(\"Unsupported color channel: \" + channel);\n  }\n  getColorAxes(xyChannels) {\n    let { xChannel, yChannel } = xyChannels;\n    let xCh = xChannel || this.getChannels().find((c) => c !== yChannel);\n    let yCh = yChannel || this.getChannels().find((c) => c !== xCh);\n    let zCh = this.getChannels().find((c) => c !== xCh && c !== yCh);\n    return { xChannel: xCh, yChannel: yCh, zChannel: zCh };\n  }\n  incrementChannel(channel, stepSize) {\n    const { minValue, maxValue, step } = this.getChannelRange(channel);\n    const value = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.snapValueToStep)(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(this.getChannelValue(channel) + stepSize, minValue, maxValue),\n      minValue,\n      maxValue,\n      step\n    );\n    return this.withChannelValue(channel, value);\n  }\n  decrementChannel(channel, stepSize) {\n    return this.incrementChannel(channel, -stepSize);\n  }\n  isEqual(color) {\n    const isSame = isEqualObject(this.toJSON(), color.toJSON());\n    return isSame && this.getChannelValue(\"alpha\") === color.getChannelValue(\"alpha\");\n  }\n};\nvar _RGBColor = class _RGBColor extends Color {\n  constructor(red, green, blue, alpha) {\n    super();\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let colors = [];\n    if (/^#[\\da-f]+$/i.test(value) && [4, 5, 7, 9].includes(value.length)) {\n      const values = (value.length < 6 ? value.replace(/[^#]/gi, \"$&$&\") : value).slice(1).split(\"\");\n      while (values.length > 0) {\n        colors.push(parseInt(values.splice(0, 2).join(\"\"), 16));\n      }\n      colors[3] = colors[3] !== void 0 ? colors[3] / 255 : void 0;\n    }\n    const match = value.match(/^rgba?\\((.*)\\)$/);\n    if (match?.[1]) {\n      colors = match[1].split(\",\").map((value2) => Number(value2.trim())).map((num, i) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(num, 0, i < 3 ? 255 : 1));\n    }\n    return colors.length < 3 ? void 0 : new _RGBColor(colors[0], colors[1], colors[2], colors[3] ?? 1);\n  }\n  toString(format) {\n    switch (format) {\n      case \"hex\":\n        return \"#\" + (this.red.toString(16).padStart(2, \"0\") + this.green.toString(16).padStart(2, \"0\") + this.blue.toString(16).padStart(2, \"0\")).toUpperCase();\n      case \"hexa\":\n        return \"#\" + (this.red.toString(16).padStart(2, \"0\") + this.green.toString(16).padStart(2, \"0\") + this.blue.toString(16).padStart(2, \"0\") + Math.round(this.alpha * 255).toString(16).padStart(2, \"0\")).toUpperCase();\n      case \"rgb\":\n        return `rgb(${this.red}, ${this.green}, ${this.blue})`;\n      case \"css\":\n      case \"rgba\":\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n      case \"hsl\":\n        return this.toHSL().toString(\"hsl\");\n      case \"hsb\":\n        return this.toHSB().toString(\"hsb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"rgba\":\n        return this;\n      case \"hsba\":\n        return this.toHSB();\n      case \"hsla\":\n        return this.toHSL();\n      default:\n        throw new Error(\"Unsupported color conversion: rgb -> \" + format);\n    }\n  }\n  toHexInt() {\n    return this.red << 16 | this.green << 8 | this.blue;\n  }\n  /**\n   * Converts an RGB color value to HSB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.\n   * @returns An HSBColor object.\n   */\n  toHSB() {\n    const red = this.red / 255;\n    const green = this.green / 255;\n    const blue = this.blue / 255;\n    const min = Math.min(red, green, blue);\n    const brightness = Math.max(red, green, blue);\n    const chroma = brightness - min;\n    const saturation = brightness === 0 ? 0 : chroma / brightness;\n    let hue = 0;\n    if (chroma !== 0) {\n      switch (brightness) {\n        case red:\n          hue = (green - blue) / chroma + (green < blue ? 6 : 0);\n          break;\n        case green:\n          hue = (blue - red) / chroma + 2;\n          break;\n        case blue:\n          hue = (red - green) / chroma + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    return new HSBColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(hue * 360, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(brightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts an RGB color value to HSL.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.\n   * @returns An HSLColor object.\n   */\n  toHSL() {\n    const red = this.red / 255;\n    const green = this.green / 255;\n    const blue = this.blue / 255;\n    const min = Math.min(red, green, blue);\n    const max = Math.max(red, green, blue);\n    const lightness = (max + min) / 2;\n    const chroma = max - min;\n    let hue = -1;\n    let saturation = -1;\n    if (chroma === 0) {\n      hue = saturation = 0;\n    } else {\n      saturation = chroma / (lightness < 0.5 ? max + min : 2 - max - min);\n      switch (max) {\n        case red:\n          hue = (green - blue) / chroma + (green < blue ? 6 : 0);\n          break;\n        case green:\n          hue = (blue - red) / chroma + 2;\n          break;\n        case blue:\n          hue = (red - green) / chroma + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    return new HSLColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(hue * 360, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(lightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _RGBColor(this.red, this.green, this.blue, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"red\":\n      case \"green\":\n      case \"blue\":\n        return { style: \"decimal\" };\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"red\":\n      case \"green\":\n      case \"blue\":\n        return { minValue: 0, maxValue: 255, step: 1, pageSize: 17 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { r: this.red, g: this.green, b: this.blue, a: this.alpha };\n  }\n  getFormat() {\n    return \"rgba\";\n  }\n  getChannels() {\n    return _RGBColor.colorChannels;\n  }\n};\n__publicField(_RGBColor, \"colorChannels\", [\"red\", \"green\", \"blue\"]);\nvar RGBColor = _RGBColor;\n\n// src/hsl-color.ts\nvar HSL_REGEX = /hsl\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%)\\)|hsla\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d(.\\d+)?)\\)/;\nvar _HSLColor = class _HSLColor extends Color {\n  constructor(hue, saturation, lightness, alpha) {\n    super();\n    this.hue = hue;\n    this.saturation = saturation;\n    this.lightness = lightness;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let m;\n    if (m = value.match(HSL_REGEX)) {\n      const [h, s, l, a] = (m[1] ?? m[2]).split(\",\").map((n) => Number(n.trim().replace(\"%\", \"\")));\n      return new _HSLColor((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.mod)(h, 360), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(s, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(l, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(a ?? 1, 0, 1));\n    }\n  }\n  toString(format) {\n    switch (format) {\n      case \"hex\":\n        return this.toRGB().toString(\"hex\");\n      case \"hexa\":\n        return this.toRGB().toString(\"hexa\");\n      case \"hsl\":\n        return `hsl(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.lightness, 2)}%)`;\n      case \"css\":\n      case \"hsla\":\n        return `hsla(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.lightness, 2)}%, ${this.alpha})`;\n      case \"hsb\":\n        return this.toHSB().toString(\"hsb\");\n      case \"rgb\":\n        return this.toRGB().toString(\"rgb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"hsla\":\n        return this;\n      case \"hsba\":\n        return this.toHSB();\n      case \"rgba\":\n        return this.toRGB();\n      default:\n        throw new Error(\"Unsupported color conversion: hsl -> \" + format);\n    }\n  }\n  /**\n   * Converts a HSL color to HSB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV.\n   * @returns An HSBColor object.\n   */\n  toHSB() {\n    let saturation = this.saturation / 100;\n    let lightness = this.lightness / 100;\n    let brightness = lightness + saturation * Math.min(lightness, 1 - lightness);\n    saturation = brightness === 0 ? 0 : 2 * (1 - lightness / brightness);\n    return new HSBColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.hue, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(brightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts a HSL color to RGB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative.\n   * @returns An RGBColor object.\n   */\n  toRGB() {\n    let hue = this.hue;\n    let saturation = this.saturation / 100;\n    let lightness = this.lightness / 100;\n    let a = saturation * Math.min(lightness, 1 - lightness);\n    let fn = (n, k = (n + hue / 30) % 12) => lightness - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return new RGBColor(\n      Math.round(fn(0) * 255),\n      Math.round(fn(8) * 255),\n      Math.round(fn(4) * 255),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _HSLColor(this.hue, this.saturation, this.lightness, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { style: \"unit\", unit: \"degree\", unitDisplay: \"narrow\" };\n      case \"saturation\":\n      case \"lightness\":\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    if (channel === \"saturation\" || channel === \"lightness\") {\n      value /= 100;\n    }\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };\n      case \"saturation\":\n      case \"lightness\":\n        return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { h: this.hue, s: this.saturation, l: this.lightness, a: this.alpha };\n  }\n  getFormat() {\n    return \"hsla\";\n  }\n  getChannels() {\n    return _HSLColor.colorChannels;\n  }\n};\n__publicField(_HSLColor, \"colorChannels\", [\"hue\", \"saturation\", \"lightness\"]);\nvar HSLColor = _HSLColor;\n\n// src/hsb-color.ts\nvar HSB_REGEX = /hsb\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%)\\)|hsba\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d(.\\d+)?)\\)/;\nvar _HSBColor = class _HSBColor extends Color {\n  constructor(hue, saturation, brightness, alpha) {\n    super();\n    this.hue = hue;\n    this.saturation = saturation;\n    this.brightness = brightness;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let m;\n    if (m = value.match(HSB_REGEX)) {\n      const [h, s, b, a] = (m[1] ?? m[2]).split(\",\").map((n) => Number(n.trim().replace(\"%\", \"\")));\n      return new _HSBColor((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.mod)(h, 360), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(s, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(b, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(a ?? 1, 0, 1));\n    }\n  }\n  toString(format) {\n    switch (format) {\n      case \"css\":\n        return this.toHSL().toString(\"css\");\n      case \"hex\":\n        return this.toRGB().toString(\"hex\");\n      case \"hexa\":\n        return this.toRGB().toString(\"hexa\");\n      case \"hsb\":\n        return `hsb(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.brightness, 2)}%)`;\n      case \"hsba\":\n        return `hsba(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.brightness, 2)}%, ${this.alpha})`;\n      case \"hsl\":\n        return this.toHSL().toString(\"hsl\");\n      case \"rgb\":\n        return this.toRGB().toString(\"rgb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"hsba\":\n        return this;\n      case \"hsla\":\n        return this.toHSL();\n      case \"rgba\":\n        return this.toRGB();\n      default:\n        throw new Error(\"Unsupported color conversion: hsb -> \" + format);\n    }\n  }\n  /**\n   * Converts a HSB color to HSL.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL.\n   * @returns An HSLColor object.\n   */\n  toHSL() {\n    let saturation = this.saturation / 100;\n    let brightness = this.brightness / 100;\n    let lightness = brightness * (1 - saturation / 2);\n    saturation = lightness === 0 || lightness === 1 ? 0 : (brightness - lightness) / Math.min(lightness, 1 - lightness);\n    return new HSLColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.hue, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(lightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts a HSV color value to RGB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB_alternative.\n   * @returns An RGBColor object.\n   */\n  toRGB() {\n    let hue = this.hue;\n    let saturation = this.saturation / 100;\n    let brightness = this.brightness / 100;\n    let fn = (n, k = (n + hue / 60) % 6) => brightness - saturation * brightness * Math.max(Math.min(k, 4 - k, 1), 0);\n    return new RGBColor(\n      Math.round(fn(5) * 255),\n      Math.round(fn(3) * 255),\n      Math.round(fn(1) * 255),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _HSBColor(this.hue, this.saturation, this.brightness, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { style: \"unit\", unit: \"degree\", unitDisplay: \"narrow\" };\n      case \"saturation\":\n      case \"brightness\":\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    if (channel === \"saturation\" || channel === \"brightness\") {\n      value /= 100;\n    }\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };\n      case \"saturation\":\n      case \"brightness\":\n        return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { h: this.hue, s: this.saturation, b: this.brightness, a: this.alpha };\n  }\n  getFormat() {\n    return \"hsba\";\n  }\n  getChannels() {\n    return _HSBColor.colorChannels;\n  }\n};\n__publicField(_HSBColor, \"colorChannels\", [\"hue\", \"saturation\", \"brightness\"]);\nvar HSBColor = _HSBColor;\n\n// src/native-color.ts\nvar nativeColors = \"aliceblue:f0f8ff,antiquewhite:faebd7,aqua:00ffff,aquamarine:7fffd4,azure:f0ffff,beige:f5f5dc,bisque:ffe4c4,black:000000,blanchedalmond:ffebcd,blue:0000ff,blueviolet:8a2be2,brown:a52a2a,burlywood:deb887,cadetblue:5f9ea0,chartreuse:7fff00,chocolate:d2691e,coral:ff7f50,cornflowerblue:6495ed,cornsilk:fff8dc,crimson:dc143c,cyan:00ffff,darkblue:00008b,darkcyan:008b8b,darkgoldenrod:b8860b,darkgray:a9a9a9,darkgreen:006400,darkkhaki:bdb76b,darkmagenta:8b008b,darkolivegreen:556b2f,darkorange:ff8c00,darkorchid:9932cc,darkred:8b0000,darksalmon:e9967a,darkseagreen:8fbc8f,darkslateblue:483d8b,darkslategray:2f4f4f,darkturquoise:00ced1,darkviolet:9400d3,deeppink:ff1493,deepskyblue:00bfff,dimgray:696969,dodgerblue:1e90ff,firebrick:b22222,floralwhite:fffaf0,forestgreen:228b22,fuchsia:ff00ff,gainsboro:dcdcdc,ghostwhite:f8f8ff,gold:ffd700,goldenrod:daa520,gray:808080,green:008000,greenyellow:adff2f,honeydew:f0fff0,hotpink:ff69b4,indianred:cd5c5c,indigo:4b0082,ivory:fffff0,khaki:f0e68c,lavender:e6e6fa,lavenderblush:fff0f5,lawngreen:7cfc00,lemonchiffon:fffacd,lightblue:add8e6,lightcoral:f08080,lightcyan:e0ffff,lightgoldenrodyellow:fafad2,lightgrey:d3d3d3,lightgreen:90ee90,lightpink:ffb6c1,lightsalmon:ffa07a,lightseagreen:20b2aa,lightskyblue:87cefa,lightslategray:778899,lightsteelblue:b0c4de,lightyellow:ffffe0,lime:00ff00,limegreen:32cd32,linen:faf0e6,magenta:ff00ff,maroon:800000,mediumaquamarine:66cdaa,mediumblue:0000cd,mediumorchid:ba55d3,mediumpurple:9370d8,mediumseagreen:3cb371,mediumslateblue:7b68ee,mediumspringgreen:00fa9a,mediumturquoise:48d1cc,mediumvioletred:c71585,midnightblue:191970,mintcream:f5fffa,mistyrose:ffe4e1,moccasin:ffe4b5,navajowhite:ffdead,navy:000080,oldlace:fdf5e6,olive:808000,olivedrab:6b8e23,orange:ffa500,orangered:ff4500,orchid:da70d6,palegoldenrod:eee8aa,palegreen:98fb98,paleturquoise:afeeee,palevioletred:d87093,papayawhip:ffefd5,peachpuff:ffdab9,peru:cd853f,pink:ffc0cb,plum:dda0dd,powderblue:b0e0e6,purple:800080,rebeccapurple:663399,red:ff0000,rosybrown:bc8f8f,royalblue:4169e1,saddlebrown:8b4513,salmon:fa8072,sandybrown:f4a460,seagreen:2e8b57,seashell:fff5ee,sienna:a0522d,silver:c0c0c0,skyblue:87ceeb,slateblue:6a5acd,slategray:708090,snow:fffafa,springgreen:00ff7f,steelblue:4682b4,tan:d2b48c,teal:008080,thistle:d8bfd8,tomato:ff6347,turquoise:40e0d0,violet:ee82ee,wheat:f5deb3,white:ffffff,whitesmoke:f5f5f5,yellow:ffff00,yellowgreen:9acd32\";\nvar makeMap = (str) => {\n  const map = /* @__PURE__ */ new Map();\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    const [key, val] = list[i].split(\":\");\n    map.set(key, `#${val}`);\n    if (key.includes(\"gray\")) map.set(key.replace(\"gray\", \"grey\"), `#${val}`);\n  }\n  return map;\n};\nvar nativeColorMap = makeMap(nativeColors);\n\n// src/parse-color.ts\nvar parseColor = (value) => {\n  if (nativeColorMap.has(value)) {\n    return parseColor(nativeColorMap.get(value));\n  }\n  const result = RGBColor.parse(value) || HSBColor.parse(value) || HSLColor.parse(value);\n  if (!result) {\n    const error = new Error(\"Invalid color value: \" + value);\n    Error.captureStackTrace?.(error, parseColor);\n    throw error;\n  }\n  return result;\n};\nvar normalizeColor = (v) => {\n  return typeof v === \"string\" ? parseColor(v) : v;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/core/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/core/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Machine: () => (/* binding */ Machine),\n/* harmony export */   choose: () => (/* binding */ choose),\n/* harmony export */   createMachine: () => (/* binding */ createMachine),\n/* harmony export */   deepMerge: () => (/* binding */ deepMerge),\n/* harmony export */   guards: () => (/* binding */ guards),\n/* harmony export */   isMachine: () => (/* binding */ isMachine),\n/* harmony export */   mergeProps: () => (/* binding */ mergeProps),\n/* harmony export */   proxy: () => (/* reexport safe */ _zag_js_store__WEBPACK_IMPORTED_MODULE_0__.proxy),\n/* harmony export */   ref: () => (/* reexport safe */ _zag_js_store__WEBPACK_IMPORTED_MODULE_0__.ref),\n/* harmony export */   snapshot: () => (/* reexport safe */ _zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot),\n/* harmony export */   subscribe: () => (/* reexport safe */ _zag_js_store__WEBPACK_IMPORTED_MODULE_0__.subscribe)\n/* harmony export */ });\n/* harmony import */ var _zag_js_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/store */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nfunction deepMerge(source, ...objects) {\n  for (const obj of objects) {\n    const target = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)(obj);\n    for (const key in target) {\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(obj[key])) {\n        if (!source[key]) {\n          source[key] = {};\n        }\n        deepMerge(source[key], obj[key]);\n      } else {\n        source[key] = obj[key];\n      }\n    }\n  }\n  return source;\n}\nfunction toEvent(event) {\n  const obj = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(event) ? { type: event } : event;\n  return obj;\n}\nfunction toArray(value) {\n  if (!value) return [];\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isArray)(value) ? value.slice() : [value];\n}\nfunction isGuardHelper(value) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(value) && value.predicate != null;\n}\n\n// src/guard-utils.ts\nvar Truthy = () => true;\nfunction exec(guardMap, ctx, event, meta) {\n  return (guard) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(guard)) {\n      return !!guardMap[guard]?.(ctx, event, meta);\n    }\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(guard)) {\n      return guard(ctx, event, meta);\n    }\n    return guard.predicate(guardMap)(ctx, event, meta);\n  };\n}\nfunction or(...conditions) {\n  return {\n    predicate: (guardMap) => (ctx, event, meta) => conditions.map(exec(guardMap, ctx, event, meta)).some(Boolean)\n  };\n}\nfunction and(...conditions) {\n  return {\n    predicate: (guardMap) => (ctx, event, meta) => conditions.map(exec(guardMap, ctx, event, meta)).every(Boolean)\n  };\n}\nfunction not(condition) {\n  return {\n    predicate: (guardMap) => (ctx, event, meta) => {\n      return !exec(guardMap, ctx, event, meta)(condition);\n    }\n  };\n}\nfunction stateIn(...values) {\n  return (_ctx, _evt, meta) => meta.state.matches(...values);\n}\nvar guards = { or, and, not, stateIn };\nfunction choose(actions) {\n  return {\n    predicate: (guardMap) => (ctx, event, meta) => actions.find((def) => {\n      const guard = def.guard ?? Truthy;\n      return exec(guardMap, ctx, event, meta)(guard);\n    })?.actions\n  };\n}\nfunction determineGuardFn(guard, guardMap) {\n  guard = guard ?? Truthy;\n  return (context, event, meta) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(guard)) {\n      const value = guardMap[guard];\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value) ? value(context, event, meta) : value;\n    }\n    if (isGuardHelper(guard)) {\n      return guard.predicate(guardMap)(context, event, meta);\n    }\n    return guard?.(context, event, meta);\n  };\n}\nfunction determineActionsFn(values, guardMap) {\n  return (context, event, meta) => {\n    if (isGuardHelper(values)) {\n      return values.predicate(guardMap)(context, event, meta);\n    }\n    return values;\n  };\n}\nfunction createProxy(config) {\n  const computedContext = config.computed ?? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)({});\n  const initialContext = config.context ?? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)({});\n  const initialTags = config.initial ? config.states?.[config.initial]?.tags : [];\n  const state = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    value: config.initial ?? \"\",\n    previousValue: \"\",\n    event: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)({}),\n    previousEvent: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)({}),\n    context: (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.proxyWithComputed)(initialContext, computedContext),\n    done: false,\n    tags: initialTags ?? [],\n    hasTag(tag) {\n      return this.tags.includes(tag);\n    },\n    matches(...value) {\n      return value.includes(this.value);\n    },\n    can(event) {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)(this).nextEvents.includes(event);\n    },\n    get nextEvents() {\n      const stateEvents = config.states?.[this.value]?.[\"on\"] ?? {};\n      const globalEvents = config?.on ?? {};\n      return Object.keys({ ...stateEvents, ...globalEvents });\n    },\n    get changed() {\n      if (this.event.value === \"machine.init\" /* Init */ || !this.previousValue) return false;\n      return this.value !== this.previousValue;\n    }\n  });\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)(state);\n}\nfunction determineDelayFn(delay, delaysMap) {\n  return (context, event) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(delay)) return delay;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(delay)) {\n      return delay(context, event);\n    }\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(delay)) {\n      const value = Number.parseFloat(delay);\n      if (!Number.isNaN(value)) {\n        return value;\n      }\n      if (delaysMap) {\n        const valueOrFn = delaysMap?.[delay];\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(\n          valueOrFn == null,\n          `[@zag-js/core > determine-delay] Cannot determine delay for \\`${delay}\\`. It doesn't exist in \\`options.delays\\``\n        );\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(valueOrFn) ? valueOrFn(context, event) : valueOrFn;\n      }\n    }\n  };\n}\nfunction toTarget(target) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(target) ? { target } : target;\n}\nfunction determineTransitionFn(transitions, guardMap) {\n  return (context, event, meta) => {\n    return toArray(transitions).map(toTarget).find((transition) => {\n      const determineGuard = determineGuardFn(transition.guard, guardMap);\n      const guard = determineGuard(context, event, meta);\n      return guard ?? transition.target ?? transition.actions;\n    });\n  };\n}\n\n// src/machine.ts\nvar Machine = class {\n  // Let's get started!\n  constructor(config, options) {\n    __publicField(this, \"status\", \"Not Started\" /* NotStarted */);\n    __publicField(this, \"state\");\n    __publicField(this, \"initialState\");\n    __publicField(this, \"initialContext\");\n    __publicField(this, \"id\");\n    __publicField(this, \"type\", \"machine\" /* Machine */);\n    // Cleanup function map (per state)\n    __publicField(this, \"activityEvents\", /* @__PURE__ */ new Map());\n    __publicField(this, \"delayedEvents\", /* @__PURE__ */ new Map());\n    // state update listeners the user can opt-in for\n    __publicField(this, \"stateListeners\", /* @__PURE__ */ new Set());\n    __publicField(this, \"doneListeners\", /* @__PURE__ */ new Set());\n    __publicField(this, \"contextWatchers\", /* @__PURE__ */ new Set());\n    // Cleanup functions (for `subscribe`)\n    __publicField(this, \"removeStateListener\", _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.noop);\n    // For Parent <==> Spawned Actor relationship\n    __publicField(this, \"parent\");\n    __publicField(this, \"children\", /* @__PURE__ */ new Map());\n    // A map of guard, action, delay implementations\n    __publicField(this, \"guardMap\");\n    __publicField(this, \"actionMap\");\n    __publicField(this, \"delayMap\");\n    __publicField(this, \"activityMap\");\n    __publicField(this, \"sync\");\n    __publicField(this, \"options\");\n    __publicField(this, \"config\");\n    // created actions\n    __publicField(this, \"_created\", () => {\n      if (!this.config.created) return;\n      const event = toEvent(\"machine.created\" /* Created */);\n      this.executeActions(this.config.created, event);\n    });\n    // Starts the interpreted machine.\n    __publicField(this, \"start\", (init) => {\n      this.state.value = \"\";\n      this.state.tags = [];\n      if (this.status === \"Running\" /* Running */) {\n        return this;\n      }\n      this.status = \"Running\" /* Running */;\n      this.removeStateListener = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.subscribe)(\n        this.state,\n        () => {\n          this.stateListeners.forEach((listener) => {\n            listener(this.stateSnapshot);\n          });\n        },\n        this.sync\n      );\n      this.setupContextWatchers();\n      this.executeActivities(toEvent(\"machine.start\" /* Start */), toArray(this.config.activities), \"machine.start\" /* Start */);\n      this.executeActions(this.config.entry, toEvent(\"machine.start\" /* Start */));\n      const event = toEvent(\"machine.init\" /* Init */);\n      const target = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(init) ? init.value : init;\n      const context = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(init) ? init.context : void 0;\n      if (context) {\n        this.setContext(context);\n      }\n      const transition = {\n        target: target ?? this.config.initial\n      };\n      const next = this.getNextStateInfo(transition, event);\n      this.initialState = next;\n      this.performStateChangeEffects(this.state.value, next, event);\n      return this;\n    });\n    __publicField(this, \"setupContextWatchers\", () => {\n      const { watch } = this.config;\n      if (!watch) return;\n      let prev = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot)(this.state.context);\n      const cleanup = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.subscribe)(this.state.context, () => {\n        const next = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot)(this.state.context);\n        for (const [key, fn] of Object.entries(watch)) {\n          const isEqual = this.options.compareFns?.[key] ?? Object.is;\n          if (isEqual(prev[key], next[key])) continue;\n          this.executeActions(fn, this.state.event);\n        }\n        prev = next;\n      });\n      this.contextWatchers.add(cleanup);\n    });\n    // Stops the interpreted machine\n    __publicField(this, \"stop\", () => {\n      if (this.status === \"Stopped\" /* Stopped */) return;\n      this.performExitEffects(this.state.value, toEvent(\"machine.stop\" /* Stop */));\n      this.executeActions(this.config.exit, toEvent(\"machine.stop\" /* Stop */));\n      this.setState(\"\");\n      this.setEvent(\"machine.stop\" /* Stop */);\n      this.stopStateListeners();\n      this.stopChildren();\n      this.stopActivities();\n      this.stopDelayedEvents();\n      this.stopContextWatchers();\n      this.status = \"Stopped\" /* Stopped */;\n      return this;\n    });\n    __publicField(this, \"stopStateListeners\", () => {\n      this.removeStateListener();\n      this.stateListeners.clear();\n    });\n    __publicField(this, \"stopContextWatchers\", () => {\n      this.contextWatchers.forEach((fn) => fn());\n      this.contextWatchers.clear();\n    });\n    __publicField(this, \"stopDelayedEvents\", () => {\n      this.delayedEvents.forEach((state) => {\n        state.forEach((stop) => stop());\n      });\n      this.delayedEvents.clear();\n    });\n    // Cleanup running activities (e.g `setInterval`, invoked callbacks, promises)\n    __publicField(this, \"stopActivities\", (state) => {\n      if (state) {\n        this.activityEvents.get(state)?.forEach((stop) => stop());\n        this.activityEvents.get(state)?.clear();\n        this.activityEvents.delete(state);\n      } else {\n        this.activityEvents.forEach((state2) => {\n          state2.forEach((stop) => stop());\n          state2.clear();\n        });\n        this.activityEvents.clear();\n      }\n    });\n    /**\n     * Function to send event to spawned child machine or actor\n     */\n    __publicField(this, \"sendChild\", (evt, to) => {\n      const event = toEvent(evt);\n      const id = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.runIfFn)(to, this.contextSnapshot);\n      const child = this.children.get(id);\n      if (!child) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(`[@zag-js/core] Cannot send '${event.type}' event to unknown child`);\n      }\n      child.send(event);\n    });\n    /**\n     * Function to stop a running child machine or actor\n     */\n    __publicField(this, \"stopChild\", (id) => {\n      if (!this.children.has(id)) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(`[@zag-js/core > stop-child] Cannot stop unknown child ${id}`);\n      }\n      this.children.get(id).stop();\n      this.children.delete(id);\n    });\n    __publicField(this, \"removeChild\", (id) => {\n      this.children.delete(id);\n    });\n    // Stop and delete spawned actors\n    __publicField(this, \"stopChildren\", () => {\n      this.children.forEach((child) => child.stop());\n      this.children.clear();\n    });\n    __publicField(this, \"setParent\", (parent) => {\n      this.parent = parent;\n    });\n    __publicField(this, \"spawn\", (src, id) => {\n      const actor = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.runIfFn)(src);\n      if (id) actor.id = id;\n      actor.type = \"machine.actor\" /* Actor */;\n      actor.setParent(this);\n      this.children.set(actor.id, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)(actor));\n      actor.onDone(() => {\n        this.removeChild(actor.id);\n      }).start();\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)((0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.ref)(actor));\n    });\n    __publicField(this, \"stopActivity\", (key) => {\n      if (!this.state.value) return;\n      const cleanups = this.activityEvents.get(this.state.value);\n      cleanups?.get(key)?.();\n      cleanups?.delete(key);\n    });\n    __publicField(this, \"addActivityCleanup\", (state, key, cleanup) => {\n      if (!state) return;\n      if (!this.activityEvents.has(state)) {\n        this.activityEvents.set(state, /* @__PURE__ */ new Map([[key, cleanup]]));\n      } else {\n        this.activityEvents.get(state)?.set(key, cleanup);\n      }\n    });\n    __publicField(this, \"setState\", (target) => {\n      this.state.previousValue = this.state.value;\n      this.state.value = target;\n      const stateNode = this.getStateNode(target);\n      if (target == null) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.clear)(this.state.tags);\n      } else {\n        this.state.tags = toArray(stateNode?.tags);\n      }\n    });\n    /**\n     * To used within side effects for React or Vue to update context\n     */\n    __publicField(this, \"setContext\", (context) => {\n      if (!context) return;\n      deepMerge(this.state.context, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)(context));\n    });\n    __publicField(this, \"setOptions\", (options) => {\n      const opts = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)(options);\n      this.actionMap = { ...this.actionMap, ...opts.actions };\n      this.delayMap = { ...this.delayMap, ...opts.delays };\n      this.activityMap = { ...this.activityMap, ...opts.activities };\n      this.guardMap = { ...this.guardMap, ...opts.guards };\n    });\n    __publicField(this, \"getStateNode\", (state) => {\n      if (!state) return;\n      return this.config.states?.[state];\n    });\n    __publicField(this, \"getNextStateInfo\", (transitions, event) => {\n      const transition = this.determineTransition(transitions, event);\n      const isTargetless = !transition?.target;\n      const target = transition?.target ?? this.state.value;\n      const changed = this.state.value !== target;\n      const stateNode = this.getStateNode(target);\n      const reenter = !isTargetless && !changed && !transition?.internal;\n      const info = {\n        reenter,\n        transition,\n        stateNode,\n        target,\n        changed\n      };\n      this.log(\"NextState:\", `[${event.type}]`, this.state.value, \"---->\", info.target);\n      return info;\n    });\n    __publicField(this, \"getAfterActions\", (transition, delay) => {\n      let id;\n      const current = this.state.value;\n      return {\n        entry: () => {\n          id = globalThis.setTimeout(() => {\n            const next = this.getNextStateInfo(transition, this.state.event);\n            this.performStateChangeEffects(current, next, this.state.event);\n          }, delay);\n        },\n        exit: () => {\n          globalThis.clearTimeout(id);\n        }\n      };\n    });\n    /**\n     * All `after` events leverage `setTimeout` and `clearTimeout`,\n     * we invoke the `clearTimeout` on exit and `setTimeout` on entry.\n     *\n     * To achieve this, we split the `after` definition into `entry` and `exit`\n     *  functions and append them to the state's `entry` and `exit` actions\n     */\n    __publicField(this, \"getDelayedEventActions\", (state) => {\n      const stateNode = this.getStateNode(state);\n      const event = this.state.event;\n      if (!stateNode || !stateNode.after) return;\n      const entries = [];\n      const exits = [];\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isArray)(stateNode.after)) {\n        const transition = this.determineTransition(stateNode.after, event);\n        if (!transition) return;\n        if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.hasProp)(transition, \"delay\")) {\n          throw new Error(`[@zag-js/core > after] Delay is required for after transition: ${JSON.stringify(transition)}`);\n        }\n        const determineDelay = determineDelayFn(transition.delay, this.delayMap);\n        const __delay = determineDelay(this.contextSnapshot, event);\n        const actions = this.getAfterActions(transition, __delay);\n        entries.push(actions.entry);\n        exits.push(actions.exit);\n        return { entries, exits };\n      }\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(stateNode.after)) {\n        for (const delay in stateNode.after) {\n          const transition = stateNode.after[delay];\n          const determineDelay = determineDelayFn(delay, this.delayMap);\n          const __delay = determineDelay(this.contextSnapshot, event);\n          const actions = this.getAfterActions(transition, __delay);\n          entries.push(actions.entry);\n          exits.push(actions.exit);\n        }\n      }\n      return { entries, exits };\n    });\n    /**\n     * Function to executes defined actions. It can accept actions as string\n     * (referencing `options.actions`) or actual functions.\n     */\n    __publicField(this, \"executeActions\", (actions, event) => {\n      const pickedActions = determineActionsFn(actions, this.guardMap)(this.contextSnapshot, event, this.guardMeta);\n      for (const action of toArray(pickedActions)) {\n        const fn = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(action) ? this.actionMap?.[action] : action;\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\n          (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(action) && !fn,\n          `[@zag-js/core > execute-actions] No implementation found for action: \\`${action}\\``\n        );\n        fn?.(this.state.context, event, this.meta);\n      }\n    });\n    /**\n     * Function to execute running activities and registers\n     * their cleanup function internally (to be called later on when we exit the state)\n     */\n    __publicField(this, \"executeActivities\", (event, activities, state) => {\n      for (const activity of activities) {\n        const fn = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(activity) ? this.activityMap?.[activity] : activity;\n        if (!fn) {\n          (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(`[@zag-js/core > execute-activity] No implementation found for activity: \\`${activity}\\``);\n          continue;\n        }\n        const cleanup = fn(this.state.context, event, this.meta);\n        if (cleanup) {\n          const key = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(activity) ? activity : activity.name || (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.uuid)();\n          this.addActivityCleanup(state ?? this.state.value, key, cleanup);\n        }\n      }\n    });\n    /**\n     * Normalizes the `every` definition to transition. `every` can be:\n     * - An array of possible actions to run (we need to pick the first match based on guard)\n     * - An object of intervals and actions\n     */\n    __publicField(this, \"createEveryActivities\", (every, callbackfn) => {\n      if (!every) return;\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isArray)(every)) {\n        const picked = toArray(every).find((transition) => {\n          const delayOrFn = transition.delay;\n          const determineDelay2 = determineDelayFn(delayOrFn, this.delayMap);\n          const delay2 = determineDelay2(this.contextSnapshot, this.state.event);\n          const determineGuard = determineGuardFn(transition.guard, this.guardMap);\n          const guard = determineGuard(this.contextSnapshot, this.state.event, this.guardMeta);\n          return guard ?? delay2 != null;\n        });\n        if (!picked) return;\n        const determineDelay = determineDelayFn(picked.delay, this.delayMap);\n        const delay = determineDelay(this.contextSnapshot, this.state.event);\n        const activity = () => {\n          const id = globalThis.setInterval(() => {\n            this.executeActions(picked.actions, this.state.event);\n          }, delay);\n          return () => {\n            globalThis.clearInterval(id);\n          };\n        };\n        callbackfn(activity);\n      } else {\n        for (const interval in every) {\n          const actions = every?.[interval];\n          const determineDelay = determineDelayFn(interval, this.delayMap);\n          const delay = determineDelay(this.contextSnapshot, this.state.event);\n          const activity = () => {\n            const id = globalThis.setInterval(() => {\n              this.executeActions(actions, this.state.event);\n            }, delay);\n            return () => {\n              globalThis.clearInterval(id);\n            };\n          };\n          callbackfn(activity);\n        }\n      }\n    });\n    __publicField(this, \"setEvent\", (event) => {\n      this.state.previousEvent = this.state.event;\n      this.state.event = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.ref)(toEvent(event));\n    });\n    __publicField(this, \"performExitEffects\", (current, event) => {\n      const currentState = this.state.value;\n      if (currentState === \"\") return;\n      const stateNode = current ? this.getStateNode(current) : void 0;\n      this.stopActivities(currentState);\n      const _exit = determineActionsFn(stateNode?.exit, this.guardMap)(this.contextSnapshot, event, this.guardMeta);\n      const exitActions = toArray(_exit);\n      const afterExitActions = this.delayedEvents.get(currentState);\n      if (afterExitActions) {\n        exitActions.push(...afterExitActions);\n      }\n      this.executeActions(exitActions, event);\n      this.delayedEvents.delete(currentState);\n    });\n    __publicField(this, \"performEntryEffects\", (next, event) => {\n      const stateNode = this.getStateNode(next);\n      const activities = toArray(stateNode?.activities);\n      this.createEveryActivities(stateNode?.every, (activity) => {\n        activities.unshift(activity);\n      });\n      if (activities.length > 0) {\n        this.executeActivities(event, activities);\n      }\n      const pickedActions = determineActionsFn(stateNode?.entry, this.guardMap)(\n        this.contextSnapshot,\n        event,\n        this.guardMeta\n      );\n      const entryActions = toArray(pickedActions);\n      const afterActions = this.getDelayedEventActions(next);\n      if (stateNode?.after && afterActions) {\n        this.delayedEvents.set(next, afterActions?.exits);\n        entryActions.push(...afterActions.entries);\n      }\n      this.executeActions(entryActions, event);\n      if (stateNode?.type === \"final\") {\n        this.state.done = true;\n        this.doneListeners.forEach((listener) => {\n          listener(this.stateSnapshot);\n        });\n        this.stop();\n      }\n    });\n    __publicField(this, \"performTransitionEffects\", (transitions, event) => {\n      const transition = this.determineTransition(transitions, event);\n      this.executeActions(transition?.actions, event);\n    });\n    /**\n     * Performs all the requires side-effects or reactions when\n     * we move from state A => state B.\n     *\n     * The Effect order:\n     * Exit actions (current state) => Transition actions  => Go to state => Entry actions (next state)\n     */\n    __publicField(this, \"performStateChangeEffects\", (current, next, event) => {\n      this.setEvent(event);\n      const changed = next.changed || next.reenter;\n      if (changed) {\n        this.performExitEffects(current, event);\n      }\n      this.performTransitionEffects(next.transition, event);\n      this.setState(next.target);\n      if (changed) {\n        this.performEntryEffects(next.target, event);\n      }\n    });\n    __publicField(this, \"determineTransition\", (transition, event) => {\n      const fn = determineTransitionFn(transition, this.guardMap);\n      return fn?.(this.contextSnapshot, event, this.guardMeta);\n    });\n    /**\n     * Function to send event to parent machine from spawned child\n     */\n    __publicField(this, \"sendParent\", (evt) => {\n      if (!this.parent) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(\"[@zag-js/core > send-parent] Cannot send event to an unknown parent\");\n      }\n      const event = toEvent(evt);\n      this.parent?.send(event);\n    });\n    __publicField(this, \"log\", (...args) => {\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isDev)() && this.options.debug) {\n        console.log(...args);\n      }\n    });\n    /**\n     * Function to send an event to current machine\n     */\n    __publicField(this, \"send\", (evt) => {\n      const event = toEvent(evt);\n      this.transition(this.state.value, event);\n    });\n    __publicField(this, \"transition\", (state, evt) => {\n      const stateNode = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(state) ? this.getStateNode(state) : state?.stateNode;\n      const event = toEvent(evt);\n      if (!stateNode && !this.config.on) {\n        const msg = this.status === \"Stopped\" /* Stopped */ ? \"[@zag-js/core > transition] Cannot transition a stopped machine\" : `[@zag-js/core > transition] State does not have a definition for \\`state\\`: ${state}, \\`event\\`: ${event.type}`;\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(msg);\n        return;\n      }\n      const transitions = (\n        // @ts-expect-error - Fix this\n        stateNode?.on?.[event.type] ?? this.config.on?.[event.type]\n      );\n      const next = this.getNextStateInfo(transitions, event);\n      this.performStateChangeEffects(this.state.value, next, event);\n      return next.stateNode;\n    });\n    __publicField(this, \"subscribe\", (listener) => {\n      this.stateListeners.add(listener);\n      if (this.status === \"Running\" /* Running */) {\n        listener(this.stateSnapshot);\n      }\n      return () => {\n        this.stateListeners.delete(listener);\n      };\n    });\n    __publicField(this, \"onDone\", (listener) => {\n      this.doneListeners.add(listener);\n      return this;\n    });\n    __publicField(this, \"onTransition\", (listener) => {\n      this.stateListeners.add(listener);\n      if (this.status === \"Running\" /* Running */) {\n        listener(this.stateSnapshot);\n      }\n      return this;\n    });\n    this.config = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.clone)(config);\n    this.options = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.clone)(options ?? {});\n    this.id = this.config.id ?? `machine-${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.uuid)()}`;\n    this.guardMap = this.options?.guards ?? {};\n    this.actionMap = this.options?.actions ?? {};\n    this.delayMap = this.options?.delays ?? {};\n    this.activityMap = this.options?.activities ?? {};\n    this.sync = this.options?.sync ?? false;\n    this.state = createProxy(this.config);\n    this.initialContext = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot)(this.state.context);\n  }\n  // immutable state value\n  get stateSnapshot() {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)((0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot)(this.state));\n  }\n  getState() {\n    return this.stateSnapshot;\n  }\n  // immutable context value\n  get contextSnapshot() {\n    return this.stateSnapshot.context;\n  }\n  /**\n   * A reference to the instance methods of the machine.\n   * Useful when spawning child machines and managing the communication between them.\n   */\n  get self() {\n    const self = this;\n    return {\n      id: this.id,\n      send: this.send.bind(this),\n      sendParent: this.sendParent.bind(this),\n      sendChild: this.sendChild.bind(this),\n      stop: this.stop.bind(this),\n      stopChild: this.stopChild.bind(this),\n      spawn: this.spawn.bind(this),\n      stopActivity: this.stopActivity.bind(this),\n      get state() {\n        return self.stateSnapshot;\n      },\n      get initialContext() {\n        return self.initialContext;\n      },\n      get initialState() {\n        return self.initialState?.target ?? \"\";\n      }\n    };\n  }\n  get meta() {\n    return {\n      state: this.stateSnapshot,\n      guards: this.guardMap,\n      send: this.send.bind(this),\n      self: this.self,\n      initialContext: this.initialContext,\n      initialState: this.initialState?.target ?? \"\",\n      getState: () => this.stateSnapshot,\n      getAction: (key) => this.actionMap[key],\n      getGuard: (key) => this.guardMap[key]\n    };\n  }\n  get guardMeta() {\n    return {\n      state: this.stateSnapshot\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return \"Machine\";\n  }\n  getHydrationState() {\n    const state = this.getState();\n    return {\n      value: state.value,\n      tags: state.tags\n    };\n  }\n};\nvar createMachine = (config, options) => new Machine(config, options);\nvar isMachine = (value) => {\n  return value instanceof Machine || value?.type === \"machine\" /* Machine */;\n};\nvar clsx = (...args) => args.map((str) => str?.trim?.()).filter(Boolean).join(\" \");\nvar CSS_REGEX = /((?:--)?(?:\\w+-?)+)\\s*:\\s*([^;]*)/g;\nvar serialize = (style) => {\n  const res = {};\n  let match;\n  while (match = CSS_REGEX.exec(style)) {\n    res[match[1]] = match[2];\n  }\n  return res;\n};\nvar css = (a, b) => {\n  if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(a)) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(b)) return `${a};${b}`;\n    a = serialize(a);\n  } else if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(b)) {\n    b = serialize(b);\n  }\n  return Object.assign({}, a ?? {}, b ?? {});\n};\nfunction mergeProps(...args) {\n  let result = {};\n  for (let props of args) {\n    for (let key in result) {\n      if (key.startsWith(\"on\") && typeof result[key] === \"function\" && typeof props[key] === \"function\") {\n        result[key] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(props[key], result[key]);\n        continue;\n      }\n      if (key === \"className\" || key === \"class\") {\n        result[key] = clsx(result[key], props[key]);\n        continue;\n      }\n      if (key === \"style\") {\n        result[key] = css(result[key], props[key]);\n        continue;\n      }\n      result[key] = props[key] !== void 0 ? props[key] : result[key];\n    }\n    for (let key in props) {\n      if (result[key] === void 0) {\n        result[key] = props[key];\n      }\n    }\n  }\n  return result;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/core/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dialog/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/dialog/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/focus-trap */ \"(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\");\n/* harmony import */ var _zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/remove-scroll */ \"(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n// src/dialog.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"dialog\").parts(\n  \"trigger\",\n  \"backdrop\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`,\n  getBackdropId: (ctx) => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`,\n  getContentId: (ctx) => ctx.ids?.content ?? `dialog:${ctx.id}:content`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`,\n  getTitleId: (ctx) => ctx.ids?.title ?? `dialog:${ctx.id}:title`,\n  getDescriptionId: (ctx) => ctx.ids?.description ?? `dialog:${ctx.id}:description`,\n  getCloseTriggerId: (ctx) => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`,\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getBackdropEl: (ctx) => dom.getById(ctx, dom.getBackdropId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getTitleEl: (ctx) => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: (ctx) => dom.getById(ctx, dom.getDescriptionId(ctx)),\n  getCloseTriggerEl: (ctx) => dom.getById(ctx, dom.getCloseTriggerId(ctx))\n});\n\n// src/dialog.connect.ts\nfunction connect(state, send, normalize) {\n  const ariaLabel = state.context[\"aria-label\"];\n  const open = state.matches(\"open\");\n  const rendered = state.context.renderedElements;\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"TOGGLE\");\n        }\n      });\n    },\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: state.context.dir,\n        hidden: !open,\n        id: dom.getBackdropId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: {\n          pointerEvents: open ? void 0 : \"none\"\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        role: state.context.role,\n        hidden: !open,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || void 0,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? void 0 : dom.getTitleId(state.context),\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : void 0\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: state.context.dir,\n        id: dom.getTitleId(state.context)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: state.context.dir,\n        id: dom.getDescriptionId(state.context)\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send(\"CLOSE\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"dialog\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        role: \"dialog\",\n        renderedElements: {\n          title: true,\n          description: true\n        },\n        modal: true,\n        trapFocus: true,\n        preventScroll: true,\n        closeOnInteractOutside: true,\n        closeOnEscape: true,\n        restoreFocus: true,\n        ...ctx\n      },\n      created: [\"setAlertDialogProps\"],\n      watch: {\n        open: [\"toggleVisibility\"]\n      },\n      states: {\n        open: {\n          entry: [\"checkRenderedElements\", \"syncZIndex\"],\n          activities: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\"\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        },\n        closed: {\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\"\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__.trackDismissableElement)(getContentEl, {\n            defer: true,\n            pointerBlocking: ctx2.modal,\n            exclude: [dom.getTriggerEl(ctx2)],\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (!ctx2.closeOnInteractOutside) {\n                event.preventDefault();\n              }\n            },\n            persistentElements: ctx2.persistentElements,\n            onFocusOutside: ctx2.onFocusOutside,\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onEscapeKeyDown(event) {\n              ctx2.onEscapeKeyDown?.(event);\n              if (!ctx2.closeOnEscape) {\n                event.preventDefault();\n              }\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\" });\n            }\n          });\n        },\n        preventScroll(ctx2) {\n          if (!ctx2.preventScroll) return;\n          return (0,_zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_5__.preventBodyScroll)(dom.getDoc(ctx2));\n        },\n        trapFocus(ctx2) {\n          if (!ctx2.trapFocus || !ctx2.modal) return;\n          const contentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_6__.trapFocus)(contentEl, {\n            preventScroll: true,\n            returnFocusOnDeactivate: !!ctx2.restoreFocus,\n            initialFocus: ctx2.initialFocusEl,\n            setReturnFocus: (el) => ctx2.finalFocusEl?.() ?? el\n          });\n        },\n        hideContentBelow(ctx2) {\n          if (!ctx2.modal) return;\n          const getElements = () => [dom.getContentEl(ctx2)];\n          return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_7__.ariaHidden)(getElements, { defer: true });\n        }\n      },\n      actions: {\n        setAlertDialogProps(ctx2) {\n          if (ctx2.role !== \"alertdialog\") return;\n          ctx2.initialFocusEl || (ctx2.initialFocusEl = () => dom.getCloseTriggerEl(ctx2));\n          ctx2.closeOnInteractOutside = false;\n        },\n        checkRenderedElements(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            ctx2.renderedElements.title = !!dom.getTitleEl(ctx2);\n            ctx2.renderedElements.description = !!dom.getDescriptionEl(ctx2);\n          });\n        },\n        syncZIndex(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            const win = dom.getWin(ctx2);\n            const styles = win.getComputedStyle(contentEl);\n            const elems = [dom.getPositionerEl(ctx2), dom.getBackdropEl(ctx2)];\n            elems.forEach((node) => {\n              node?.style.setProperty(\"--z-index\", styles.zIndex);\n            });\n          });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"aria-label\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"finalFocusEl\",\n  \"getRootNode\",\n  \"getRootNode\",\n  \"id\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"open.controlled\",\n  \"open\",\n  \"persistentElements\",\n  \"preventScroll\",\n  \"restoreFocus\",\n  \"role\",\n  \"trapFocus\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dialog/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/dismissable/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackDismissableBranch: () => (/* binding */ trackDismissableBranch),\n/* harmony export */   trackDismissableElement: () => (/* binding */ trackDismissableElement)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/interact-outside */ \"(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n// src/dismissable-layer.ts\nfunction trackEscapeKeydown(node, fn) {\n  const handleKeyDown = (event) => {\n    if (event.key !== \"Escape\") return;\n    if (event.isComposing) return;\n    fn?.(event);\n  };\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node), \"keydown\", handleKeyDown, { capture: true });\n}\nvar layerStack = {\n  layers: [],\n  branches: [],\n  count() {\n    return this.layers.length;\n  },\n  pointerBlockingLayers() {\n    return this.layers.filter((layer) => layer.pointerBlocking);\n  },\n  topMostPointerBlockingLayer() {\n    return [...this.pointerBlockingLayers()].slice(-1)[0];\n  },\n  hasPointerBlockingLayer() {\n    return this.pointerBlockingLayers().length > 0;\n  },\n  isBelowPointerBlockingLayer(node) {\n    const index = this.indexOf(node);\n    const highestBlockingIndex = this.topMostPointerBlockingLayer() ? this.indexOf(this.topMostPointerBlockingLayer()?.node) : -1;\n    return index < highestBlockingIndex;\n  },\n  isTopMost(node) {\n    const layer = this.layers[this.count() - 1];\n    return layer?.node === node;\n  },\n  getNestedLayers(node) {\n    return Array.from(this.layers).slice(this.indexOf(node) + 1);\n  },\n  isInNestedLayer(node, target) {\n    return this.getNestedLayers(node).some((layer) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(layer.node, target));\n  },\n  isInBranch(target) {\n    return Array.from(this.branches).some((branch) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(branch, target));\n  },\n  add(layer) {\n    const num = this.layers.push(layer);\n    layer.node.style.setProperty(\"--layer-index\", `${num}`);\n  },\n  addBranch(node) {\n    this.branches.push(node);\n  },\n  remove(node) {\n    const index = this.indexOf(node);\n    if (index < 0) return;\n    if (index < this.count() - 1) {\n      const _layers = this.getNestedLayers(node);\n      _layers.forEach((layer) => layer.dismiss());\n    }\n    this.layers.splice(index, 1);\n    node.style.removeProperty(\"--layer-index\");\n  },\n  removeBranch(node) {\n    const index = this.branches.indexOf(node);\n    if (index >= 0) this.branches.splice(index, 1);\n  },\n  indexOf(node) {\n    return this.layers.findIndex((layer) => layer.node === node);\n  },\n  dismiss(node) {\n    this.layers[this.indexOf(node)]?.dismiss();\n  },\n  clear() {\n    this.remove(this.layers[0].node);\n  }\n};\nvar originalBodyPointerEvents;\nfunction assignPointerEventToLayers() {\n  layerStack.layers.forEach(({ node }) => {\n    node.style.pointerEvents = layerStack.isBelowPointerBlockingLayer(node) ? \"none\" : \"auto\";\n  });\n}\nfunction clearPointerEvent(node) {\n  node.style.pointerEvents = \"\";\n}\nfunction disablePointerEventsOutside(node, persistentElements) {\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node);\n  const cleanups = [];\n  if (layerStack.hasPointerBlockingLayer() && !doc.body.hasAttribute(\"data-inert\")) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = \"none\";\n      doc.body.setAttribute(\"data-inert\", \"\");\n    });\n  }\n  if (persistentElements) {\n    const persistedCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.waitForElements)(persistentElements, (el) => {\n      cleanups.push((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyle)(el, { pointerEvents: \"auto\" }));\n    });\n    cleanups.push(persistedCleanup);\n  }\n  return () => {\n    if (layerStack.hasPointerBlockingLayer()) return;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = originalBodyPointerEvents;\n      doc.body.removeAttribute(\"data-inert\");\n      if (doc.body.style.length === 0) doc.body.removeAttribute(\"style\");\n    });\n    cleanups.forEach((fn) => fn());\n  };\n}\n\n// src/dismissable-layer.ts\nfunction trackDismissableElementImpl(node, options) {\n  if (!node) {\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\"[@zag-js/dismissable] node is `null` or `undefined`\");\n    return;\n  }\n  const { onDismiss, pointerBlocking, exclude: excludeContainers, debug } = options;\n  const layer = { dismiss: onDismiss, node, pointerBlocking };\n  layerStack.add(layer);\n  assignPointerEventToLayers();\n  function onPointerDownOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event.detail.originalEvent);\n    if (layerStack.isBelowPointerBlockingLayer(node) || layerStack.isInBranch(target)) return;\n    options.onPointerDownOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onPointerDownOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onFocusOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event.detail.originalEvent);\n    if (layerStack.isInBranch(target)) return;\n    options.onFocusOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onFocusOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onEscapeKeyDown(event) {\n    if (!layerStack.isTopMost(node)) return;\n    options.onEscapeKeyDown?.(event);\n    if (!event.defaultPrevented && onDismiss) {\n      event.preventDefault();\n      onDismiss();\n    }\n  }\n  function exclude(target) {\n    if (!node) return false;\n    const containers = typeof excludeContainers === \"function\" ? excludeContainers() : excludeContainers;\n    const _containers = Array.isArray(containers) ? containers : [containers];\n    const persistentElements = options.persistentElements?.map((fn) => fn()).filter(_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement);\n    if (persistentElements) _containers.push(...persistentElements);\n    return _containers.some((node2) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(node2, target)) || layerStack.isInNestedLayer(node, target);\n  }\n  const cleanups = [\n    pointerBlocking ? disablePointerEventsOutside(node, options.persistentElements) : void 0,\n    trackEscapeKeydown(node, onEscapeKeyDown),\n    (0,_zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_2__.trackInteractOutside)(node, { exclude, onFocusOutside, onPointerDownOutside, defer: options.defer })\n  ];\n  return () => {\n    layerStack.remove(node);\n    assignPointerEventToLayers();\n    clearPointerEvent(node);\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction trackDismissableElement(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n      cleanups.push(trackDismissableElementImpl(node, options));\n    })\n  );\n  return () => {\n    func(() => {\n      cleanups.forEach((fn) => fn?.());\n    });\n  };\n}\nfunction trackDismissableBranch(nodeOrFn, options = {}) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n      if (!node) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\"[@zag-js/dismissable] branch node is `null` or `undefined`\");\n        return;\n      }\n      layerStack.addBranch(node);\n      cleanups.push(() => {\n        layerStack.removeBranch(node);\n      });\n    })\n  );\n  return () => {\n    func(() => {\n      cleanups.forEach((fn) => fn?.());\n    });\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/dom-query/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_Z_INDEX: () => (/* binding */ MAX_Z_INDEX),\n/* harmony export */   addDomEvent: () => (/* binding */ addDomEvent),\n/* harmony export */   ariaAttr: () => (/* binding */ ariaAttr),\n/* harmony export */   clickIfLink: () => (/* binding */ clickIfLink),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   createScope: () => (/* binding */ createScope),\n/* harmony export */   dataAttr: () => (/* binding */ dataAttr),\n/* harmony export */   defaultItemToId: () => (/* binding */ defaultItemToId),\n/* harmony export */   disableTextSelection: () => (/* binding */ disableTextSelection),\n/* harmony export */   getActiveElement: () => (/* binding */ getActiveElement),\n/* harmony export */   getBeforeInputValue: () => (/* binding */ getBeforeInputValue),\n/* harmony export */   getByText: () => (/* binding */ getByText),\n/* harmony export */   getByTypeahead: () => (/* binding */ getByTypeahead),\n/* harmony export */   getComputedStyle: () => (/* binding */ getComputedStyle),\n/* harmony export */   getDataUrl: () => (/* binding */ getDataUrl),\n/* harmony export */   getDocument: () => (/* binding */ getDocument),\n/* harmony export */   getDocumentElement: () => (/* binding */ getDocumentElement),\n/* harmony export */   getEventKey: () => (/* binding */ getEventKey),\n/* harmony export */   getEventPoint: () => (/* binding */ getEventPoint),\n/* harmony export */   getEventStep: () => (/* binding */ getEventStep),\n/* harmony export */   getEventTarget: () => (/* binding */ getEventTarget),\n/* harmony export */   getFirstFocusable: () => (/* binding */ getFirstFocusable),\n/* harmony export */   getFirstTabbable: () => (/* binding */ getFirstTabbable),\n/* harmony export */   getFocusables: () => (/* binding */ getFocusables),\n/* harmony export */   getInitialFocus: () => (/* binding */ getInitialFocus),\n/* harmony export */   getLastTabbable: () => (/* binding */ getLastTabbable),\n/* harmony export */   getNativeEvent: () => (/* binding */ getNativeEvent),\n/* harmony export */   getNearestOverflowAncestor: () => (/* binding */ getNearestOverflowAncestor),\n/* harmony export */   getNextTabbable: () => (/* binding */ getNextTabbable),\n/* harmony export */   getNodeName: () => (/* binding */ getNodeName),\n/* harmony export */   getOverflowAncestors: () => (/* binding */ getOverflowAncestors),\n/* harmony export */   getParentNode: () => (/* binding */ getParentNode),\n/* harmony export */   getPlatform: () => (/* binding */ getPlatform),\n/* harmony export */   getRelativePoint: () => (/* binding */ getRelativePoint),\n/* harmony export */   getScrollPosition: () => (/* binding */ getScrollPosition),\n/* harmony export */   getTabIndex: () => (/* binding */ getTabIndex),\n/* harmony export */   getTabbableEdges: () => (/* binding */ getTabbableEdges),\n/* harmony export */   getTabbables: () => (/* binding */ getTabbables),\n/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent),\n/* harmony export */   getWindow: () => (/* binding */ getWindow),\n/* harmony export */   indexOfId: () => (/* binding */ indexOfId),\n/* harmony export */   isAnchorElement: () => (/* binding */ isAnchorElement),\n/* harmony export */   isAndroid: () => (/* binding */ isAndroid),\n/* harmony export */   isApple: () => (/* binding */ isApple),\n/* harmony export */   isComposingEvent: () => (/* binding */ isComposingEvent),\n/* harmony export */   isContextMenuEvent: () => (/* binding */ isContextMenuEvent),\n/* harmony export */   isDocument: () => (/* binding */ isDocument),\n/* harmony export */   isDom: () => (/* binding */ isDom),\n/* harmony export */   isDownloadingEvent: () => (/* binding */ isDownloadingEvent),\n/* harmony export */   isEditableElement: () => (/* binding */ isEditableElement),\n/* harmony export */   isElementVisible: () => (/* binding */ isElementVisible),\n/* harmony export */   isFirefox: () => (/* binding */ isFirefox),\n/* harmony export */   isFocusable: () => (/* binding */ isFocusable),\n/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),\n/* harmony export */   isInView: () => (/* binding */ isInView),\n/* harmony export */   isInputElement: () => (/* binding */ isInputElement),\n/* harmony export */   isIos: () => (/* binding */ isIos),\n/* harmony export */   isKeyboardClick: () => (/* binding */ isKeyboardClick),\n/* harmony export */   isLeftClick: () => (/* binding */ isLeftClick),\n/* harmony export */   isMac: () => (/* binding */ isMac),\n/* harmony export */   isModifierKey: () => (/* binding */ isModifierKey),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isOpeningInNewTab: () => (/* binding */ isOpeningInNewTab),\n/* harmony export */   isOverflowElement: () => (/* binding */ isOverflowElement),\n/* harmony export */   isPrintableKey: () => (/* binding */ isPrintableKey),\n/* harmony export */   isRootElement: () => (/* binding */ isRootElement),\n/* harmony export */   isSafari: () => (/* binding */ isSafari),\n/* harmony export */   isSelfTarget: () => (/* binding */ isSelfTarget),\n/* harmony export */   isShadowRoot: () => (/* binding */ isShadowRoot),\n/* harmony export */   isTabbable: () => (/* binding */ isTabbable),\n/* harmony export */   isTouchDevice: () => (/* binding */ isTouchDevice),\n/* harmony export */   isTouchEvent: () => (/* binding */ isTouchEvent),\n/* harmony export */   isValidTabEvent: () => (/* binding */ isValidTabEvent),\n/* harmony export */   isVirtualClick: () => (/* binding */ isVirtualClick),\n/* harmony export */   isVirtualPointerEvent: () => (/* binding */ isVirtualPointerEvent),\n/* harmony export */   isVisualViewport: () => (/* binding */ isVisualViewport),\n/* harmony export */   isWebKit: () => (/* binding */ isWebKit),\n/* harmony export */   isWindow: () => (/* binding */ isWindow),\n/* harmony export */   itemById: () => (/* binding */ itemById),\n/* harmony export */   nextById: () => (/* binding */ nextById),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   observeAttributes: () => (/* binding */ observeAttributes),\n/* harmony export */   observeChildren: () => (/* binding */ observeChildren),\n/* harmony export */   prevById: () => (/* binding */ prevById),\n/* harmony export */   proxyTabFocus: () => (/* binding */ proxyTabFocus),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   queryAll: () => (/* binding */ queryAll),\n/* harmony export */   queueBeforeEvent: () => (/* binding */ queueBeforeEvent),\n/* harmony export */   raf: () => (/* binding */ raf),\n/* harmony export */   requestPointerLock: () => (/* binding */ requestPointerLock),\n/* harmony export */   restoreTextSelection: () => (/* binding */ restoreTextSelection),\n/* harmony export */   scrollIntoView: () => (/* binding */ scrollIntoView),\n/* harmony export */   setAttribute: () => (/* binding */ setAttribute),\n/* harmony export */   setProperty: () => (/* binding */ setProperty),\n/* harmony export */   setStyle: () => (/* binding */ setStyle),\n/* harmony export */   setVisuallyHidden: () => (/* binding */ setVisuallyHidden),\n/* harmony export */   trackPointerMove: () => (/* binding */ trackPointerMove),\n/* harmony export */   trackPress: () => (/* binding */ trackPress),\n/* harmony export */   trackVisualViewport: () => (/* binding */ trackVisualViewport),\n/* harmony export */   visuallyHiddenStyle: () => (/* binding */ visuallyHiddenStyle),\n/* harmony export */   waitForElement: () => (/* binding */ waitForElement),\n/* harmony export */   waitForElements: () => (/* binding */ waitForElements)\n/* harmony export */ });\n// src/shared.ts\nvar clamp = (value) => Math.max(0, Math.min(1, value));\nvar wrap = (v, idx) => {\n  return v.map((_, index) => v[(Math.max(idx, 0) + index) % v.length]);\n};\nvar pipe = (...fns) => (arg) => fns.reduce((acc, fn) => fn(acc), arg);\nvar noop = () => void 0;\nvar isObject = (v) => typeof v === \"object\" && v !== null;\nvar MAX_Z_INDEX = 2147483647;\nvar dataAttr = (guard) => guard ? \"\" : void 0;\nvar ariaAttr = (guard) => guard ? \"true\" : void 0;\n\n// src/node.ts\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_NODE = 9;\nvar DOCUMENT_FRAGMENT_NODE = 11;\nvar isHTMLElement = (el) => isObject(el) && el.nodeType === ELEMENT_NODE && typeof el.nodeName === \"string\";\nvar isDocument = (el) => isObject(el) && el.nodeType === DOCUMENT_NODE;\nvar isWindow = (el) => isObject(el) && el === el.window;\nvar isVisualViewport = (el) => isObject(el) && el.constructor.name === \"VisualViewport\";\nvar getNodeName = (node) => {\n  if (isHTMLElement(node)) return node.localName || \"\";\n  return \"#document\";\n};\nfunction isRootElement(node) {\n  return [\"html\", \"body\", \"#document\"].includes(getNodeName(node));\n}\nvar isNode = (el) => isObject(el) && el.nodeType !== void 0;\nvar isShadowRoot = (el) => isNode(el) && el.nodeType === DOCUMENT_FRAGMENT_NODE && \"host\" in el;\nvar isInputElement = (el) => isHTMLElement(el) && el.localName === \"input\";\nvar isAnchorElement = (el) => !!el?.matches(\"a[href]\");\nvar isElementVisible = (el) => {\n  if (!isHTMLElement(el)) return false;\n  return el.offsetWidth > 0 || el.offsetHeight > 0 || el.getClientRects().length > 0;\n};\nvar TEXTAREA_SELECT_REGEX = /(textarea|select)/;\nfunction isEditableElement(el) {\n  if (el == null || !isHTMLElement(el)) return false;\n  try {\n    return isInputElement(el) && el.selectionStart != null || TEXTAREA_SELECT_REGEX.test(el.localName) || el.isContentEditable || el.getAttribute(\"contenteditable\") === \"true\" || el.getAttribute(\"contenteditable\") === \"\";\n  } catch {\n    return false;\n  }\n}\nfunction contains(parent, child) {\n  if (!parent || !child) return false;\n  if (!isHTMLElement(parent) || !isHTMLElement(child)) return false;\n  const rootNode = child.getRootNode?.();\n  if (parent === child) return true;\n  if (parent.contains(child)) return true;\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) return true;\n      next = next.parentNode || next.host;\n    }\n  }\n  return false;\n}\nfunction getDocument(el) {\n  if (isDocument(el)) return el;\n  if (isWindow(el)) return el.document;\n  return el?.ownerDocument ?? document;\n}\nfunction getDocumentElement(el) {\n  return getDocument(el).documentElement;\n}\nfunction getWindow(el) {\n  if (isShadowRoot(el)) return getWindow(el.host);\n  if (isDocument(el)) return el.defaultView ?? window;\n  if (isHTMLElement(el)) return el.ownerDocument?.defaultView ?? window;\n  return window;\n}\nfunction getActiveElement(rootNode) {\n  let activeElement = rootNode.activeElement;\n  while (activeElement?.shadowRoot) {\n    const el = activeElement.shadowRoot.activeElement;\n    if (el === activeElement) break;\n    else activeElement = el;\n  }\n  return activeElement;\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === \"html\") return node;\n  const result = node.assignedSlot || node.parentNode || isShadowRoot(node) && node.host || getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\n// src/computed-style.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    styleCache.set(el, getWindow(el).getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\n\n// src/data-url.ts\nfunction getDataUrl(svg, opts) {\n  const { type, quality = 0.92, background } = opts;\n  if (!svg) throw new Error(\"[zag-js > getDataUrl]: Could not find the svg element\");\n  const win = getWindow(svg);\n  const doc = win.document;\n  const svgBounds = svg.getBoundingClientRect();\n  const svgClone = svg.cloneNode(true);\n  if (!svgClone.hasAttribute(\"viewBox\")) {\n    svgClone.setAttribute(\"viewBox\", `0 0 ${svgBounds.width} ${svgBounds.height}`);\n  }\n  const serializer = new win.XMLSerializer();\n  const source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + serializer.serializeToString(svgClone);\n  const svgString = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n  if (type === \"image/svg+xml\") {\n    return Promise.resolve(svgString).then((str) => {\n      svgClone.remove();\n      return str;\n    });\n  }\n  const dpr = win.devicePixelRatio || 1;\n  const canvas = doc.createElement(\"canvas\");\n  const image = new win.Image();\n  image.src = svgString;\n  canvas.width = svgBounds.width * dpr;\n  canvas.height = svgBounds.height * dpr;\n  const context = canvas.getContext(\"2d\");\n  if (type === \"image/jpeg\" || background) {\n    context.fillStyle = background || \"white\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  }\n  return new Promise((resolve) => {\n    image.onload = () => {\n      context?.drawImage(image, 0, 0, canvas.width, canvas.height);\n      resolve(canvas.toDataURL(type, quality));\n      svgClone.remove();\n    };\n  });\n}\n\n// src/platform.ts\nvar isDom = () => typeof document !== \"undefined\";\nfunction getPlatform() {\n  const agent = navigator.userAgentData;\n  return agent?.platform ?? navigator.platform;\n}\nfunction getUserAgent() {\n  const ua2 = navigator.userAgentData;\n  if (ua2 && Array.isArray(ua2.brands)) {\n    return ua2.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \");\n  }\n  return navigator.userAgent;\n}\nvar pt = (v) => isDom() && v.test(getPlatform());\nvar ua = (v) => isDom() && v.test(getUserAgent());\nvar vn = (v) => isDom() && v.test(navigator.vendor);\nvar isTouchDevice = () => isDom() && !!navigator.maxTouchPoints;\nvar isMac = () => pt(/^Mac/);\nvar isSafari = () => isApple() && vn(/apple/i);\nvar isFirefox = () => ua(/firefox\\//i);\nvar isApple = () => pt(/mac|iphone|ipad|ipod/i);\nvar isIos = () => pt(/iP(hone|ad|od)|iOS/);\nvar isWebKit = () => ua(/AppleWebKit/);\nvar isAndroid = () => {\n  const re = /android/i;\n  return pt(re) || ua(re);\n};\n\n// src/event.ts\nfunction getBeforeInputValue(event) {\n  const { selectionStart, selectionEnd, value } = event.currentTarget;\n  return value.slice(0, selectionStart) + event.data + value.slice(selectionEnd);\n}\nfunction getComposedPath(event) {\n  return event.composedPath?.() ?? event.nativeEvent?.composedPath?.();\n}\nfunction getEventTarget(event) {\n  const composedPath = getComposedPath(event);\n  return composedPath?.[0] ?? event.target;\n}\nvar isSelfTarget = (event) => {\n  return contains(event.currentTarget, getEventTarget(event));\n};\nfunction isOpeningInNewTab(event) {\n  const element = event.currentTarget;\n  if (!element) return false;\n  const isAppleDevice = isApple();\n  if (isAppleDevice && !event.metaKey) return false;\n  if (!isAppleDevice && !event.ctrlKey) return false;\n  const localName = element.localName;\n  if (localName === \"a\") return true;\n  if (localName === \"button\" && element.type === \"submit\") return true;\n  if (localName === \"input\" && element.type === \"submit\") return true;\n  return false;\n}\nfunction isDownloadingEvent(event) {\n  const element = event.currentTarget;\n  if (!element) return false;\n  const localName = element.localName;\n  if (!event.altKey) return false;\n  if (localName === \"a\") return true;\n  if (localName === \"button\" && element.type === \"submit\") return true;\n  if (localName === \"input\" && element.type === \"submit\") return true;\n  return false;\n}\nfunction isComposingEvent(event) {\n  return getNativeEvent(event).isComposing;\n}\nfunction isKeyboardClick(e) {\n  return e.detail === 0 || e.clientX === 0 && e.clientY === 0;\n}\nfunction isPrintableKey(e) {\n  return e.key.length === 1 && !e.ctrlKey && !e.metaKey;\n}\nfunction isVirtualPointerEvent(e) {\n  return e.width === 0 && e.height === 0 || e.width === 1 && e.height === 1 && e.pressure === 0 && e.detail === 0 && e.pointerType === \"mouse\";\n}\nfunction isVirtualClick(e) {\n  if (e.mozInputSource === 0 && e.isTrusted) return true;\n  if (isAndroid() && e.pointerType) {\n    return e.type === \"click\" && e.buttons === 1;\n  }\n  return e.detail === 0 && !e.pointerType;\n}\nvar isLeftClick = (e) => e.button === 0;\nvar isContextMenuEvent = (e) => {\n  return e.button === 2 || isMac() && e.ctrlKey && e.button === 0;\n};\nvar isModifierKey = (e) => e.ctrlKey || e.altKey || e.metaKey;\nvar isTouchEvent = (event) => \"touches\" in event && event.touches.length > 0;\nvar keyMap = {\n  Up: \"ArrowUp\",\n  Down: \"ArrowDown\",\n  Esc: \"Escape\",\n  \" \": \"Space\",\n  \",\": \"Comma\",\n  Left: \"ArrowLeft\",\n  Right: \"ArrowRight\"\n};\nvar rtlKeyMap = {\n  ArrowLeft: \"ArrowRight\",\n  ArrowRight: \"ArrowLeft\"\n};\nfunction getEventKey(event, options = {}) {\n  const { dir = \"ltr\", orientation = \"horizontal\" } = options;\n  let key = event.key;\n  key = keyMap[key] ?? key;\n  const isRtl = dir === \"rtl\" && orientation === \"horizontal\";\n  if (isRtl && key in rtlKeyMap) key = rtlKeyMap[key];\n  return key;\n}\nfunction getNativeEvent(event) {\n  return event.nativeEvent ?? event;\n}\nvar pageKeys = /* @__PURE__ */ new Set([\"PageUp\", \"PageDown\"]);\nvar arrowKeys = /* @__PURE__ */ new Set([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"]);\nfunction getEventStep(event) {\n  if (event.ctrlKey || event.metaKey) {\n    return 0.1;\n  } else {\n    const isPageKey = pageKeys.has(event.key);\n    const isSkipKey = isPageKey || event.shiftKey && arrowKeys.has(event.key);\n    return isSkipKey ? 10 : 1;\n  }\n}\nfunction getEventPoint(event, type = \"client\") {\n  const point = isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n  return { x: point[`${type}X`], y: point[`${type}Y`] };\n}\nvar addDomEvent = (target, eventName, handler, options) => {\n  const node = typeof target === \"function\" ? target() : target;\n  node?.addEventListener(eventName, handler, options);\n  return () => {\n    node?.removeEventListener(eventName, handler, options);\n  };\n};\n\n// src/tabbable.ts\nvar isFrame = (el) => isHTMLElement(el) && el.tagName === \"IFRAME\";\nvar hasTabIndex = (el) => !Number.isNaN(parseInt(el.getAttribute(\"tabindex\") || \"0\", 10));\nvar hasNegativeTabIndex = (el) => parseInt(el.getAttribute(\"tabindex\") || \"0\", 10) < 0;\nvar focusableSelector = \"input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable='false']), details > summary:first-of-type\";\nvar getFocusables = (container, includeContainer = false) => {\n  if (!container) return [];\n  const elements = Array.from(container.querySelectorAll(focusableSelector));\n  const include = includeContainer == true || includeContainer == \"if-empty\" && elements.length === 0;\n  if (include && isHTMLElement(container) && isFocusable(container)) {\n    elements.unshift(container);\n  }\n  const focusableElements = elements.filter(isFocusable);\n  focusableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body;\n      focusableElements.splice(i, 1, ...getFocusables(frameBody));\n    }\n  });\n  return focusableElements;\n};\nfunction isFocusable(element) {\n  if (!element || element.closest(\"[inert]\")) return false;\n  return element.matches(focusableSelector) && isElementVisible(element);\n}\nfunction getFirstFocusable(container, includeContainer) {\n  const [first] = getFocusables(container, includeContainer);\n  return first || null;\n}\nfunction getTabbables(container, includeContainer) {\n  if (!container) return [];\n  const elements = Array.from(container.querySelectorAll(focusableSelector));\n  const tabbableElements = elements.filter(isTabbable);\n  if (includeContainer && isTabbable(container)) {\n    tabbableElements.unshift(container);\n  }\n  tabbableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body;\n      const allFrameTabbable = getTabbables(frameBody);\n      tabbableElements.splice(i, 1, ...allFrameTabbable);\n    }\n  });\n  if (!tabbableElements.length && includeContainer) {\n    return elements;\n  }\n  return tabbableElements;\n}\nfunction isTabbable(el) {\n  if (el != null && el.tabIndex > 0) return true;\n  return isFocusable(el) && !hasNegativeTabIndex(el);\n}\nfunction getFirstTabbable(container, includeContainer) {\n  const [first] = getTabbables(container, includeContainer);\n  return first || null;\n}\nfunction getLastTabbable(container, includeContainer) {\n  const elements = getTabbables(container, includeContainer);\n  return elements[elements.length - 1] || null;\n}\nfunction getTabbableEdges(container, includeContainer) {\n  const elements = getTabbables(container, includeContainer);\n  const first = elements[0] || null;\n  const last = elements[elements.length - 1] || null;\n  return [first, last];\n}\nfunction getNextTabbable(container, current) {\n  const tabbables = getTabbables(container);\n  const doc = container?.ownerDocument || document;\n  const currentElement = current ?? doc.activeElement;\n  if (!currentElement) return null;\n  const index = tabbables.indexOf(currentElement);\n  return tabbables[index + 1] || null;\n}\nfunction getTabIndex(node) {\n  if (node.tabIndex < 0) {\n    if ((/^(audio|video|details)$/.test(node.localName) || isEditableElement(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n}\n\n// src/initial-focus.ts\nfunction getInitialFocus(options) {\n  const { root, getInitialEl, filter, enabled = true } = options;\n  if (!enabled) return;\n  let node = null;\n  node || (node = typeof getInitialEl === \"function\" ? getInitialEl() : getInitialEl);\n  node || (node = root?.querySelector(\"[data-autofocus],[autofocus]\"));\n  if (!node) {\n    const tabbables = getTabbables(root);\n    node = filter ? tabbables.filter(filter)[0] : tabbables[0];\n  }\n  return node || root || void 0;\n}\nfunction isValidTabEvent(event) {\n  const container = event.currentTarget;\n  if (!container) return false;\n  const [firstTabbable, lastTabbable] = getTabbableEdges(container);\n  const doc = container.ownerDocument || document;\n  if (doc.activeElement === firstTabbable && event.shiftKey) return false;\n  if (doc.activeElement === lastTabbable && !event.shiftKey) return false;\n  if (!firstTabbable && !lastTabbable) return false;\n  return true;\n}\n\n// src/raf.ts\nfunction nextTick(fn) {\n  const set2 = /* @__PURE__ */ new Set();\n  function raf2(fn2) {\n    const id = globalThis.requestAnimationFrame(fn2);\n    set2.add(() => globalThis.cancelAnimationFrame(id));\n  }\n  raf2(() => raf2(fn));\n  return function cleanup() {\n    set2.forEach((fn2) => fn2());\n  };\n}\nfunction raf(fn) {\n  const id = globalThis.requestAnimationFrame(fn);\n  return () => {\n    globalThis.cancelAnimationFrame(id);\n  };\n}\nfunction queueBeforeEvent(el, type, cb) {\n  const cancelTimer = raf(() => {\n    el.removeEventListener(type, exec, true);\n    cb();\n  });\n  const exec = () => {\n    cancelTimer();\n    cb();\n  };\n  el.addEventListener(type, exec, { once: true, capture: true });\n  return cancelTimer;\n}\n\n// src/mutation-observer.ts\nfunction observeAttributesImpl(node, options) {\n  if (!node) return;\n  const { attributes, callback: fn } = options;\n  const win = node.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver((changes) => {\n    for (const change of changes) {\n      if (change.type === \"attributes\" && change.attributeName && attributes.includes(change.attributeName)) {\n        fn(change);\n      }\n    }\n  });\n  obs.observe(node, { attributes: true, attributeFilter: attributes });\n  return () => obs.disconnect();\n}\nfunction observeAttributes(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups2 = [];\n  cleanups2.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups2.push(observeAttributesImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups2.forEach((fn) => fn?.());\n  };\n}\nfunction observeChildrenImpl(node, options) {\n  const { callback: fn } = options;\n  if (!node) return;\n  const win = node.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver(fn);\n  obs.observe(node, { childList: true, subtree: true });\n  return () => obs.disconnect();\n}\nfunction observeChildren(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups2 = [];\n  cleanups2.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups2.push(observeChildrenImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups2.forEach((fn) => fn?.());\n  };\n}\n\n// src/navigate.ts\nfunction clickIfLink(el) {\n  const click = () => el.click();\n  if (isFirefox()) {\n    queueBeforeEvent(el, \"keyup\", click);\n  } else {\n    queueMicrotask(click);\n  }\n}\n\n// src/overflow.ts\nfunction getNearestOverflowAncestor(el) {\n  const parentNode = getParentNode(el);\n  if (isRootElement(parentNode)) return getDocument(parentNode).body;\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) return parentNode;\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(el, list = []) {\n  const scrollableAncestor = getNearestOverflowAncestor(el);\n  const isBody = scrollableAncestor === el.ownerDocument.body;\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, []));\n}\nvar getElementRect = (el) => {\n  if (isHTMLElement(el)) return el.getBoundingClientRect();\n  if (isVisualViewport(el)) return { top: 0, left: 0, bottom: el.height, right: el.width };\n  return { top: 0, left: 0, bottom: el.innerHeight, right: el.innerWidth };\n};\nfunction isInView(el, ancestor) {\n  if (!isHTMLElement(el)) return true;\n  const ancestorRect = getElementRect(ancestor);\n  const elRect = el.getBoundingClientRect();\n  return elRect.top >= ancestorRect.top && elRect.left >= ancestorRect.left && elRect.bottom <= ancestorRect.bottom && elRect.right <= ancestorRect.right;\n}\nvar OVERFLOW_RE = /auto|scroll|overlay|hidden|clip/;\nfunction isOverflowElement(el) {\n  const win = getWindow(el);\n  const { overflow, overflowX, overflowY, display } = win.getComputedStyle(el);\n  return OVERFLOW_RE.test(overflow + overflowY + overflowX) && ![\"inline\", \"contents\"].includes(display);\n}\nfunction isScrollable(el) {\n  return el.scrollHeight > el.clientHeight || el.scrollWidth > el.clientWidth;\n}\nfunction scrollIntoView(el, options) {\n  const { rootEl, ...scrollOptions } = options || {};\n  if (!el || !rootEl) return;\n  if (!isOverflowElement(rootEl) || !isScrollable(rootEl)) return;\n  el.scrollIntoView(scrollOptions);\n}\nfunction getScrollPosition(element) {\n  if (isHTMLElement(element)) {\n    return { scrollLeft: element.scrollLeft, scrollTop: element.scrollTop };\n  }\n  return { scrollLeft: element.scrollX, scrollTop: element.scrollY };\n}\n\n// src/point.ts\nfunction getRelativePoint(point, element) {\n  const { left, top, width, height } = element.getBoundingClientRect();\n  const offset = { x: point.x - left, y: point.y - top };\n  const percent = { x: clamp(offset.x / width), y: clamp(offset.y / height) };\n  function getPercentValue(options = {}) {\n    const { dir = \"ltr\", orientation = \"horizontal\", inverted } = options;\n    const invertX = typeof inverted === \"object\" ? inverted.x : inverted;\n    const invertY = typeof inverted === \"object\" ? inverted.y : inverted;\n    if (orientation === \"horizontal\") {\n      return dir === \"rtl\" || invertX ? 1 - percent.x : percent.x;\n    }\n    return invertY ? 1 - percent.y : percent.y;\n  }\n  return { offset, percent, getPercentValue };\n}\n\n// src/pointer-lock.ts\nfunction requestPointerLock(doc, fn) {\n  const body = doc.body;\n  const supported = \"pointerLockElement\" in doc || \"mozPointerLockElement\" in doc;\n  const isLocked = () => !!doc.pointerLockElement;\n  function onPointerChange() {\n    fn?.(isLocked());\n  }\n  function onPointerError(event) {\n    if (isLocked()) fn?.(false);\n    console.error(\"PointerLock error occurred:\", event);\n    doc.exitPointerLock();\n  }\n  if (!supported) return;\n  try {\n    body.requestPointerLock();\n  } catch {\n  }\n  const cleanup = [\n    addDomEvent(doc, \"pointerlockchange\", onPointerChange, false),\n    addDomEvent(doc, \"pointerlockerror\", onPointerError, false)\n  ];\n  return () => {\n    cleanup.forEach((cleanup2) => cleanup2());\n    doc.exitPointerLock();\n  };\n}\n\n// src/text-selection.ts\nvar state = \"default\";\nvar userSelect = \"\";\nvar elementMap = /* @__PURE__ */ new WeakMap();\nfunction disableTextSelectionImpl(options = {}) {\n  const { target, doc } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state === \"default\") {\n      userSelect = rootEl.style.webkitUserSelect;\n      rootEl.style.webkitUserSelect = \"none\";\n    }\n    state = \"disabled\";\n  } else if (target) {\n    elementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n  return () => restoreTextSelection({ target, doc: docNode });\n}\nfunction restoreTextSelection(options = {}) {\n  const { target, doc } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state !== \"disabled\") return;\n    state = \"restoring\";\n    setTimeout(() => {\n      nextTick(() => {\n        if (state === \"restoring\") {\n          if (rootEl.style.webkitUserSelect === \"none\") {\n            rootEl.style.webkitUserSelect = userSelect || \"\";\n          }\n          userSelect = \"\";\n          state = \"default\";\n        }\n      });\n    }, 300);\n  } else {\n    if (target && elementMap.has(target)) {\n      const prevUserSelect = elementMap.get(target);\n      if (target.style.userSelect === \"none\") {\n        target.style.userSelect = prevUserSelect ?? \"\";\n      }\n      if (target.getAttribute(\"style\") === \"\") {\n        target.removeAttribute(\"style\");\n      }\n      elementMap.delete(target);\n    }\n  }\n}\nfunction disableTextSelection(options = {}) {\n  const { defer, target, ...restOptions } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups2 = [];\n  cleanups2.push(\n    func(() => {\n      const node = typeof target === \"function\" ? target() : target;\n      cleanups2.push(disableTextSelectionImpl({ ...restOptions, target: node }));\n    })\n  );\n  return () => {\n    cleanups2.forEach((fn) => fn?.());\n  };\n}\n\n// src/pointer-move.ts\nfunction trackPointerMove(doc, handlers) {\n  const { onPointerMove, onPointerUp } = handlers;\n  const handleMove = (event) => {\n    const point = getEventPoint(event);\n    const distance = Math.sqrt(point.x ** 2 + point.y ** 2);\n    const moveBuffer = event.pointerType === \"touch\" ? 10 : 5;\n    if (distance < moveBuffer) return;\n    if (event.pointerType === \"mouse\" && event.button === 0) {\n      onPointerUp();\n      return;\n    }\n    onPointerMove({ point, event });\n  };\n  const cleanups2 = [\n    addDomEvent(doc, \"pointermove\", handleMove, false),\n    addDomEvent(doc, \"pointerup\", onPointerUp, false),\n    addDomEvent(doc, \"pointercancel\", onPointerUp, false),\n    addDomEvent(doc, \"contextmenu\", onPointerUp, false),\n    disableTextSelection({ doc })\n  ];\n  return () => {\n    cleanups2.forEach((cleanup) => cleanup());\n  };\n}\n\n// src/press.ts\nfunction trackPress(options) {\n  const {\n    pointerNode,\n    keyboardNode = pointerNode,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    isValidKey = (e) => e.key === \"Enter\"\n  } = options;\n  if (!pointerNode) return noop;\n  const win = getWindow(pointerNode);\n  const doc = getDocument(pointerNode);\n  let removeStartListeners = noop;\n  let removeEndListeners = noop;\n  let removeAccessibleListeners = noop;\n  const getInfo = (event) => ({\n    point: getEventPoint(event),\n    event\n  });\n  function startPress(event) {\n    onPressStart?.(getInfo(event));\n  }\n  function cancelPress(event) {\n    onPressEnd?.(getInfo(event));\n  }\n  const startPointerPress = (startEvent) => {\n    removeEndListeners();\n    const endPointerPress = (endEvent) => {\n      const target = getEventTarget(endEvent);\n      if (contains(pointerNode, target)) {\n        onPress?.(getInfo(endEvent));\n      } else {\n        onPressEnd?.(getInfo(endEvent));\n      }\n    };\n    const removePointerUpListener = addDomEvent(win, \"pointerup\", endPointerPress, { passive: !onPress });\n    const removePointerCancelListener = addDomEvent(win, \"pointercancel\", cancelPress, { passive: !onPressEnd });\n    removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n    if (doc.activeElement === keyboardNode && startEvent.pointerType === \"mouse\") {\n      startEvent.preventDefault();\n    }\n    startPress(startEvent);\n  };\n  const removePointerListener = addDomEvent(pointerNode, \"pointerdown\", startPointerPress, { passive: !onPressStart });\n  const removeFocusListener = addDomEvent(keyboardNode, \"focus\", startAccessiblePress);\n  removeStartListeners = pipe(removePointerListener, removeFocusListener);\n  function startAccessiblePress() {\n    const handleKeydown = (keydownEvent) => {\n      if (!isValidKey(keydownEvent)) return;\n      const handleKeyup = (keyupEvent) => {\n        if (!isValidKey(keyupEvent)) return;\n        const evt2 = new win.PointerEvent(\"pointerup\");\n        const info = getInfo(evt2);\n        onPress?.(info);\n        onPressEnd?.(info);\n      };\n      removeEndListeners();\n      removeEndListeners = addDomEvent(keyboardNode, \"keyup\", handleKeyup);\n      const evt = new win.PointerEvent(\"pointerdown\");\n      startPress(evt);\n    };\n    const handleBlur = () => {\n      const evt = new win.PointerEvent(\"pointercancel\");\n      cancelPress(evt);\n    };\n    const removeKeydownListener = addDomEvent(keyboardNode, \"keydown\", handleKeydown);\n    const removeBlurListener = addDomEvent(keyboardNode, \"blur\", handleBlur);\n    removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n  }\n  return () => {\n    removeStartListeners();\n    removeEndListeners();\n    removeAccessibleListeners();\n  };\n}\n\n// src/proxy-tab-focus.ts\nfunction proxyTabFocusImpl(container, options = {}) {\n  const { triggerElement, onFocus } = options;\n  const doc = container?.ownerDocument || document;\n  const body = doc.body;\n  function onKeyDown(event) {\n    if (event.key !== \"Tab\") return;\n    let elementToFocus = null;\n    const [firstTabbable, lastTabbable] = getTabbableEdges(container, true);\n    const noTabbableElements = !firstTabbable && !lastTabbable;\n    if (event.shiftKey && (doc.activeElement === firstTabbable || noTabbableElements)) {\n      elementToFocus = triggerElement;\n    } else if (!event.shiftKey && doc.activeElement === triggerElement) {\n      elementToFocus = firstTabbable;\n    } else if (!event.shiftKey && (doc.activeElement === lastTabbable || noTabbableElements)) {\n      elementToFocus = getNextTabbable(body, triggerElement);\n    }\n    if (!elementToFocus) return;\n    event.preventDefault();\n    if (typeof onFocus === \"function\") {\n      onFocus(elementToFocus);\n    } else {\n      elementToFocus.focus();\n    }\n  }\n  return addDomEvent(doc, \"keydown\", onKeyDown, true);\n}\nfunction proxyTabFocus(container, options) {\n  const { defer, triggerElement, ...restOptions } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups2 = [];\n  cleanups2.push(\n    func(() => {\n      const node = typeof container === \"function\" ? container() : container;\n      const trigger = typeof triggerElement === \"function\" ? triggerElement() : triggerElement;\n      cleanups2.push(proxyTabFocusImpl(node, { triggerElement: trigger, ...restOptions }));\n    })\n  );\n  return () => {\n    cleanups2.forEach((fn) => fn?.());\n  };\n}\n\n// src/query.ts\nfunction queryAll(root, selector) {\n  return Array.from(root?.querySelectorAll(selector) ?? []);\n}\nfunction query(root, selector) {\n  return root?.querySelector(selector) ?? null;\n}\nvar defaultItemToId = (v) => v.id;\nfunction itemById(v, id, itemToId = defaultItemToId) {\n  return v.find((item) => itemToId(item) === id);\n}\nfunction indexOfId(v, id, itemToId = defaultItemToId) {\n  const item = itemById(v, id, itemToId);\n  return item ? v.indexOf(item) : -1;\n}\nfunction nextById(v, id, loop = true) {\n  let idx = indexOfId(v, id);\n  idx = loop ? (idx + 1) % v.length : Math.min(idx + 1, v.length - 1);\n  return v[idx];\n}\nfunction prevById(v, id, loop = true) {\n  let idx = indexOfId(v, id);\n  if (idx === -1) return loop ? v[v.length - 1] : null;\n  idx = loop ? (idx - 1 + v.length) % v.length : Math.max(0, idx - 1);\n  return v[idx];\n}\n\n// src/scope.ts\nfunction createScope(methods) {\n  const dom = {\n    getRootNode: (ctx) => ctx.getRootNode?.() ?? document,\n    getDoc: (ctx) => getDocument(dom.getRootNode(ctx)),\n    getWin: (ctx) => dom.getDoc(ctx).defaultView ?? window,\n    getActiveElement: (ctx) => getActiveElement(dom.getRootNode(ctx)),\n    isActiveElement: (ctx, elem) => elem === dom.getActiveElement(ctx),\n    getById: (ctx, id) => dom.getRootNode(ctx).getElementById(id),\n    setValue: (elem, value) => {\n      if (elem == null || value == null) return;\n      const valueAsString = value.toString();\n      if (elem.value === valueAsString) return;\n      elem.value = value.toString();\n    }\n  };\n  return { ...dom, ...methods };\n}\n\n// src/searchable.ts\nvar sanitize = (str) => str.split(\"\").map((char) => {\n  const code = char.charCodeAt(0);\n  if (code > 0 && code < 128) return char;\n  if (code >= 128 && code <= 255) return `/x${code.toString(16)}`.replace(\"/\", \"\\\\\");\n  return \"\";\n}).join(\"\").trim();\nvar getValueText = (el) => {\n  return sanitize(el.dataset?.valuetext ?? el.textContent ?? \"\");\n};\nvar match = (valueText, query2) => {\n  return valueText.trim().toLowerCase().startsWith(query2.toLowerCase());\n};\nfunction getByText(v, text, currentId, itemToId = defaultItemToId) {\n  const index = currentId ? indexOfId(v, currentId, itemToId) : -1;\n  let items = currentId ? wrap(v, index) : v;\n  const isSingleKey = text.length === 1;\n  if (isSingleKey) {\n    items = items.filter((item) => itemToId(item) !== currentId);\n  }\n  return items.find((item) => match(getValueText(item), text));\n}\n\n// src/set.ts\nvar cleanups = /* @__PURE__ */ new WeakMap();\nfunction set(element, key, setup) {\n  if (!cleanups.has(element)) {\n    cleanups.set(element, /* @__PURE__ */ new Map());\n  }\n  const elementCleanups = cleanups.get(element);\n  const prevCleanup = elementCleanups.get(key);\n  if (!prevCleanup) {\n    elementCleanups.set(key, setup());\n    return () => {\n      elementCleanups.get(key)?.();\n      elementCleanups.delete(key);\n    };\n  }\n  const cleanup = setup();\n  const nextCleanup = () => {\n    cleanup();\n    prevCleanup();\n    elementCleanups.delete(key);\n  };\n  elementCleanups.set(key, nextCleanup);\n  return () => {\n    const isCurrent = elementCleanups.get(key) === nextCleanup;\n    if (!isCurrent) return;\n    cleanup();\n    elementCleanups.set(key, prevCleanup);\n  };\n}\nfunction setAttribute(element, attr, value) {\n  const setup = () => {\n    const previousValue = element.getAttribute(attr);\n    element.setAttribute(attr, value);\n    return () => {\n      if (previousValue == null) {\n        element.removeAttribute(attr);\n      } else {\n        element.setAttribute(attr, previousValue);\n      }\n    };\n  };\n  return set(element, attr, setup);\n}\nfunction setProperty(element, property, value) {\n  const setup = () => {\n    const exists = property in element;\n    const previousValue = element[property];\n    element[property] = value;\n    return () => {\n      if (!exists) {\n        delete element[property];\n      } else {\n        element[property] = previousValue;\n      }\n    };\n  };\n  return set(element, property, setup);\n}\nfunction setStyle(element, style) {\n  if (!element) return () => {\n  };\n  const setup = () => {\n    const prevStyle = element.style.cssText;\n    Object.assign(element.style, style);\n    return () => {\n      element.style.cssText = prevStyle;\n    };\n  };\n  return set(element, \"style\", setup);\n}\n\n// src/typeahead.ts\nfunction getByTypeaheadImpl(baseItems, options) {\n  const { state: state2, activeId, key, timeout = 350, itemToId } = options;\n  const search = state2.keysSoFar + key;\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const query2 = isRepeated ? search[0] : search;\n  let items = baseItems.slice();\n  const next = getByText(items, query2, activeId, itemToId);\n  function cleanup() {\n    clearTimeout(state2.timer);\n    state2.timer = -1;\n  }\n  function update(value) {\n    state2.keysSoFar = value;\n    cleanup();\n    if (value !== \"\") {\n      state2.timer = +setTimeout(() => {\n        update(\"\");\n        cleanup();\n      }, timeout);\n    }\n  }\n  update(search);\n  return next;\n}\nvar getByTypeahead = /* @__PURE__ */ Object.assign(getByTypeaheadImpl, {\n  defaultOptions: { keysSoFar: \"\", timer: -1 },\n  isValidEvent: isValidTypeaheadEvent\n});\nfunction isValidTypeaheadEvent(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\n\n// src/visual-viewport.ts\nfunction trackVisualViewport(doc, fn) {\n  const win = doc?.defaultView || window;\n  const onResize = () => {\n    fn?.(getViewportSize(win));\n  };\n  onResize();\n  return addDomEvent(win.visualViewport ?? win, \"resize\", onResize);\n}\nfunction getViewportSize(win) {\n  return {\n    width: win.visualViewport?.width || win.innerWidth,\n    height: win.visualViewport?.height || win.innerHeight\n  };\n}\n\n// src/visually-hidden.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0 0 0 0)\",\n  height: \"1px\",\n  margin: \"-1px\",\n  overflow: \"hidden\",\n  padding: \"0\",\n  position: \"absolute\",\n  width: \"1px\",\n  whiteSpace: \"nowrap\",\n  wordWrap: \"normal\"\n};\nfunction setVisuallyHidden(el) {\n  Object.assign(el.style, visuallyHiddenStyle);\n}\n\n// src/wait-for.ts\nvar fps = 1e3 / 60;\nfunction waitForElement(query2, cb) {\n  const el = query2();\n  if (isHTMLElement(el) && el.isConnected) {\n    cb(el);\n    return () => void 0;\n  } else {\n    const timerId = setInterval(() => {\n      const el2 = query2();\n      if (isHTMLElement(el2) && el2.isConnected) {\n        cb(el2);\n        clearInterval(timerId);\n      }\n    }, fps);\n    return () => clearInterval(timerId);\n  }\n}\nfunction waitForElements(queries, cb) {\n  const cleanups2 = [];\n  queries?.forEach((query2) => {\n    const clean = waitForElement(query2, cb);\n    cleanups2.push(clean);\n  });\n  return () => {\n    cleanups2.forEach((fn) => fn());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/editable/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/editable/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/interact-outside */ \"(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/editable.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"editable\").parts(\n  \"root\",\n  \"area\",\n  \"label\",\n  \"preview\",\n  \"input\",\n  \"editTrigger\",\n  \"submitTrigger\",\n  \"cancelTrigger\",\n  \"control\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `editable:${ctx.id}`,\n  getAreaId: (ctx) => ctx.ids?.area ?? `editable:${ctx.id}:area`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `editable:${ctx.id}:label`,\n  getPreviewId: (ctx) => ctx.ids?.preview ?? `editable:${ctx.id}:preview`,\n  getInputId: (ctx) => ctx.ids?.input ?? `editable:${ctx.id}:input`,\n  getControlId: (ctx) => ctx.ids?.control ?? `editable:${ctx.id}:control`,\n  getSubmitTriggerId: (ctx) => ctx.ids?.submitTrigger ?? `editable:${ctx.id}:submit`,\n  getCancelTriggerId: (ctx) => ctx.ids?.cancelTrigger ?? `editable:${ctx.id}:cancel`,\n  getEditTriggerId: (ctx) => ctx.ids?.editTrigger ?? `editable:${ctx.id}:edit`,\n  getInputEl: (ctx) => dom.getById(ctx, dom.getInputId(ctx)),\n  getPreviewEl: (ctx) => dom.getById(ctx, dom.getPreviewId(ctx)),\n  getSubmitTriggerEl: (ctx) => dom.getById(ctx, dom.getSubmitTriggerId(ctx)),\n  getCancelTriggerEl: (ctx) => dom.getById(ctx, dom.getCancelTriggerId(ctx)),\n  getEditTriggerEl: (ctx) => dom.getById(ctx, dom.getEditTriggerId(ctx))\n});\n\n// src/editable.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.disabled;\n  const interactive = state.context.isInteractive;\n  const readOnly = state.context.readOnly;\n  const invalid = state.context.invalid;\n  const autoResize = state.context.autoResize;\n  const translations = state.context.translations;\n  const editing = state.matches(\"edit\");\n  const placeholderProp = state.context.placeholder;\n  const placeholder = typeof placeholderProp === \"string\" ? { edit: placeholderProp, preview: placeholderProp } : placeholderProp;\n  const value = state.context.value;\n  const empty = value.trim() === \"\";\n  const valueText = empty ? placeholder?.preview ?? \"\" : value;\n  return {\n    editing,\n    empty,\n    value,\n    valueText,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2, src: \"setValue\" });\n    },\n    clearValue() {\n      send({ type: \"VALUE.SET\", value: \"\", src: \"clearValue\" });\n    },\n    edit() {\n      if (!interactive) return;\n      send(\"EDIT\");\n    },\n    cancel() {\n      if (!interactive) return;\n      send(\"CANCEL\");\n    },\n    submit() {\n      if (!interactive) return;\n      send(\"SUBMIT\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getAreaProps() {\n      return normalize.element({\n        ...parts.area.attrs,\n        id: dom.getAreaId(state.context),\n        dir: state.context.dir,\n        style: autoResize ? { display: \"inline-grid\" } : void 0,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(editing),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(empty)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: dom.getLabelId(state.context),\n        dir: state.context.dir,\n        htmlFor: dom.getInputId(state.context),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(editing),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        onClick() {\n          if (editing) return;\n          const previewEl = dom.getPreviewEl(state.context);\n          previewEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.input,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        hidden: autoResize ? void 0 : !editing,\n        placeholder: placeholder?.edit,\n        maxLength: state.context.maxLength,\n        required: state.context.required,\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        readOnly,\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-autoresize\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(autoResize),\n        defaultValue: value,\n        size: autoResize ? 1 : void 0,\n        onChange(event) {\n          send({ type: \"VALUE.SET\", src: \"input.change\", value: event.currentTarget.value });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const keyMap = {\n            Escape() {\n              send(\"CANCEL\");\n              event.preventDefault();\n            },\n            Enter(event2) {\n              if (!state.context.submitOnEnter) return;\n              const { localName } = event2.currentTarget;\n              if (localName === \"textarea\") {\n                const submitMod = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isApple)() ? event2.metaKey : event2.ctrlKey;\n                if (!submitMod) return;\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" });\n                return;\n              }\n              if (localName === \"input\" && !event2.shiftKey && !event2.metaKey) {\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" });\n                event2.preventDefault();\n              }\n            }\n          };\n          const exec = keyMap[event.key];\n          if (exec) {\n            exec(event);\n          }\n        },\n        style: autoResize ? {\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: !editing ? \"hidden\" : void 0\n        } : void 0\n      });\n    },\n    getPreviewProps() {\n      return normalize.element({\n        id: dom.getPreviewId(state.context),\n        ...parts.preview.attrs,\n        dir: state.context.dir,\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(empty),\n        \"aria-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(readOnly),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(disabled),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"aria-label\": translations.edit,\n        \"data-autoresize\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(autoResize),\n        children: valueText,\n        hidden: autoResize ? void 0 : editing,\n        tabIndex: interactive ? 0 : void 0,\n        onClick() {\n          if (!interactive) return;\n          if (state.context.activationMode !== \"click\") return;\n          send({ type: \"EDIT\", src: \"click\" });\n        },\n        onFocus() {\n          if (!interactive) return;\n          if (state.context.activationMode !== \"focus\") return;\n          send({ type: \"EDIT\", src: \"focus\" });\n        },\n        onDoubleClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (state.context.activationMode !== \"dblclick\") return;\n          send({ type: \"EDIT\", src: \"dblclick\" });\n        },\n        style: autoResize ? {\n          whiteSpace: \"pre\",\n          userSelect: \"none\",\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: editing ? \"hidden\" : void 0,\n          // in event the preview overflow's the parent element\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        } : void 0\n      });\n    },\n    getEditTriggerProps() {\n      return normalize.button({\n        ...parts.editTrigger.attrs,\n        id: dom.getEditTriggerId(state.context),\n        dir: state.context.dir,\n        \"aria-label\": translations.edit,\n        hidden: editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"EDIT\", src: \"edit.click\" });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir\n      });\n    },\n    getSubmitTriggerProps() {\n      return normalize.button({\n        ...parts.submitTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getSubmitTriggerId(state.context),\n        \"aria-label\": translations.submit,\n        hidden: !editing,\n        disabled,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"SUBMIT\", src: \"submit.click\" });\n        }\n      });\n    },\n    getCancelTriggerProps() {\n      return normalize.button({\n        ...parts.cancelTrigger.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.cancel,\n        id: dom.getCancelTriggerId(state.context),\n        hidden: !editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"CANCEL\", src: \"cancel.click\" });\n        }\n      });\n    }\n  };\n}\nvar submitOnEnter = (ctx) => [\"both\", \"enter\"].includes(ctx.submitMode);\nvar submitOnBlur = (ctx) => [\"both\", \"blur\"].includes(ctx.submitMode);\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"editable\",\n      initial: ctx.edit ? \"edit\" : \"preview\",\n      entry: ctx.edit ? [\"focusInput\"] : void 0,\n      context: {\n        activationMode: \"focus\",\n        submitMode: \"both\",\n        value: \"\",\n        previousValue: \"\",\n        selectOnFocus: true,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        translations: {\n          input: \"editable input\",\n          edit: \"edit\",\n          submit: \"submit\",\n          cancel: \"cancel\",\n          ...ctx.translations\n        }\n      },\n      watch: {\n        value: [\"syncInputValue\"],\n        edit: [\"toggleEditing\"]\n      },\n      computed: {\n        submitOnEnter,\n        submitOnBlur,\n        isInteractive: (ctx2) => !(ctx2.disabled || ctx2.readOnly)\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: \"setValue\"\n        }\n      },\n      states: {\n        preview: {\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=559561\n          entry: [\"blurInputIfNeeded\"],\n          on: {\n            \"CONTROLLED.EDIT\": {\n              target: \"edit\",\n              actions: [\"setPreviousValue\", \"focusInput\"]\n            },\n            EDIT: [\n              {\n                guard: \"isEditControlled\",\n                actions: [\"invokeOnEdit\"]\n              },\n              {\n                target: \"edit\",\n                actions: [\"setPreviousValue\", \"focusInput\", \"invokeOnEdit\"]\n              }\n            ]\n          }\n        },\n        edit: {\n          activities: [\"trackInteractOutside\"],\n          on: {\n            \"CONTROLLED.PREVIEW\": [\n              {\n                guard: \"isSubmitEvent\",\n                target: \"preview\",\n                actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\"]\n              },\n              {\n                target: \"preview\",\n                actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\"]\n              }\n            ],\n            CANCEL: [\n              {\n                guard: \"isEditControlled\",\n                actions: [\"invokeOnPreview\"]\n              },\n              {\n                target: \"preview\",\n                actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\", \"invokeOnPreview\"]\n              }\n            ],\n            SUBMIT: [\n              {\n                guard: \"isEditControlled\",\n                actions: [\"invokeOnPreview\"]\n              },\n              {\n                target: \"preview\",\n                actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\", \"invokeOnPreview\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isEditControlled: (ctx2) => !!ctx2[\"edit.controlled\"],\n        isSubmitEvent: (_ctx, evt) => evt.previousEvent?.type === \"SUBMIT\"\n      },\n      activities: {\n        trackInteractOutside(ctx2, _evt, { send }) {\n          return (0,_zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_4__.trackInteractOutside)(dom.getInputEl(ctx2), {\n            exclude(target) {\n              const ignore = [dom.getCancelTriggerEl(ctx2), dom.getSubmitTriggerEl(ctx2)];\n              return ignore.some((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(el, target));\n            },\n            onFocusOutside: ctx2.onFocusOutside,\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (event.defaultPrevented) return;\n              const { focusable } = event.detail;\n              send({ type: submitOnBlur(ctx2) ? \"SUBMIT\" : \"CANCEL\", src: \"interact-outside\", focusable });\n            }\n          });\n        }\n      },\n      actions: {\n        restoreFocus(ctx2, evt) {\n          if (evt.focusable) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const finalEl = ctx2.finalFocusEl?.() ?? dom.getEditTriggerEl(ctx2);\n            finalEl?.focus({ preventScroll: true });\n          });\n        },\n        focusInput(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const inputEl = dom.getInputEl(ctx2);\n            if (!inputEl) return;\n            if (ctx2.selectOnFocus) {\n              inputEl.select();\n            } else {\n              inputEl.focus({ preventScroll: true });\n            }\n          });\n        },\n        invokeOnCancel(ctx2) {\n          ctx2.onValueRevert?.({ value: ctx2.previousValue });\n        },\n        invokeOnSubmit(ctx2) {\n          ctx2.onValueCommit?.({ value: ctx2.value });\n        },\n        invokeOnEdit(ctx2) {\n          ctx2.onEditChange?.({ edit: true });\n        },\n        invokeOnPreview(ctx2) {\n          ctx2.onEditChange?.({ edit: false });\n        },\n        toggleEditing(ctx2, evt, { send }) {\n          send({ type: ctx2.edit ? \"CONTROLLED.EDIT\" : \"CONTROLLED.PREVIEW\", previousEvent: evt });\n        },\n        syncInputValue(ctx2) {\n          sync.value(ctx2);\n        },\n        setValue(ctx2, evt) {\n          const value = ctx2.maxLength != null ? evt.value.slice(0, ctx2.maxLength) : evt.value;\n          set.value(ctx2, value);\n        },\n        setPreviousValue(ctx2) {\n          ctx2.previousValue = ctx2.value;\n        },\n        revertValue(ctx2) {\n          set.value(ctx2, ctx2.previousValue);\n        },\n        blurInputIfNeeded(ctx2) {\n          dom.getInputEl(ctx2)?.blur();\n        }\n      }\n    }\n  );\n}\nvar sync = {\n  value: (ctx) => {\n    const inputEl = dom.getInputEl(ctx);\n    dom.setValue(inputEl, ctx.value);\n  }\n};\nvar invoke = {\n  change(ctx) {\n    ctx.onValueChange?.({ value: ctx.value });\n    sync.value(ctx);\n  }\n};\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"activationMode\",\n  \"autoResize\",\n  \"dir\",\n  \"disabled\",\n  \"finalFocusEl\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"maxLength\",\n  \"name\",\n  \"onEditChange\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"onValueCommit\",\n  \"onValueRevert\",\n  \"placeholder\",\n  \"readOnly\",\n  \"required\",\n  \"selectOnFocus\",\n  \"edit\",\n  \"edit.controlled\",\n  \"submitMode\",\n  \"translations\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9lZGl0YWJsZS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFnRDtBQUM4RDtBQUNqRTtBQUNtQjtBQUNHO0FBQ3ZCOztBQUU1QztBQUNBLGNBQWMsOERBQWE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsOERBQVc7QUFDckIsbURBQW1ELE9BQU87QUFDMUQsbURBQW1ELE9BQU87QUFDMUQscURBQXFELE9BQU87QUFDNUQseURBQXlELE9BQU87QUFDaEUscURBQXFELE9BQU87QUFDNUQseURBQXlELE9BQU87QUFDaEUscUVBQXFFLE9BQU87QUFDNUUscUVBQXFFLE9BQU87QUFDNUUsaUVBQWlFLE9BQU87QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsa0RBQWtEO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbURBQW1EO0FBQ2hFLEtBQUs7QUFDTDtBQUNBLGFBQWEsaURBQWlEO0FBQzlELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlCQUF5QjtBQUN2RCxzQkFBc0IsMkRBQVE7QUFDOUIseUJBQXlCLDJEQUFRO0FBQ2pDLGtDQUFrQywyREFBUTtBQUMxQyxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBUTtBQUM5Qix3QkFBd0IsMkRBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHFCQUFxQjtBQUNsRDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakMsd0JBQXdCLDJEQUFRO0FBQ2hDLHdCQUF3QiwyREFBUTtBQUNoQywyQkFBMkIsMkRBQVE7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDBFQUEwRTtBQUMzRixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGNBQWMsbUVBQWdCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxzQkFBc0IsWUFBWTtBQUNsQztBQUNBLGtDQUFrQywwREFBTztBQUN6QztBQUNBLHVCQUF1QixzQ0FBc0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNDQUFzQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsMkRBQVE7QUFDMUMseUJBQXlCLDJEQUFRO0FBQ2pDLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakMseUJBQXlCLDJEQUFRO0FBQ2pDLHdCQUF3QiwyREFBUTtBQUNoQyx3QkFBd0IsMkRBQVE7QUFDaEM7QUFDQSwyQkFBMkIsMkRBQVE7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRCQUE0QjtBQUM3QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRCQUE0QjtBQUM3QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0JBQStCO0FBQ2hELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlDQUFpQztBQUNsRDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFDQUFxQztBQUN0RDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFDQUFxQztBQUN0RDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHNEQUFPO0FBQ3JCLFNBQVMsMkRBQWE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSwyQ0FBMkMsTUFBTTtBQUNqRCxpQkFBaUIsOEVBQW9CO0FBQ3JDO0FBQ0E7QUFDQSx5Q0FBeUMsMkRBQVE7QUFDakQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsWUFBWTtBQUNsQyxxQkFBcUIsb0ZBQW9GO0FBQ3pHO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFVBQVUsc0RBQUc7QUFDYjtBQUNBLDZCQUE2QixxQkFBcUI7QUFDbEQsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBLFVBQVUsc0RBQUc7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCw4QkFBOEIscUJBQXFCO0FBQ25EO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBLGlDQUFpQywyQkFBMkI7QUFDNUQsU0FBUztBQUNUO0FBQ0EsaUNBQWlDLG1CQUFtQjtBQUNwRCxTQUFTO0FBQ1Q7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QyxTQUFTO0FBQ1Q7QUFDQSxnQ0FBZ0MsYUFBYTtBQUM3QyxTQUFTO0FBQ1QsbUNBQW1DLE1BQU07QUFDekMsaUJBQWlCLGdGQUFnRjtBQUNqRyxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrQkFBa0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrREFBZ0I7O0FBRXVCIiwic291cmNlcyI6WyIvaG9tZS9zYWNoYS9FcGl0ZWNoL0ctRVBJLTMwMC1SRU4tMy0xLXByb2plY3R3ZWVrLW5hdGhhbi5qZWFubm90L2Zyb250L25vZGVfbW9kdWxlcy9AemFnLWpzL2VkaXRhYmxlL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFuYXRvbXkgfSBmcm9tICdAemFnLWpzL2FuYXRvbXknO1xuaW1wb3J0IHsgY3JlYXRlU2NvcGUsIGRhdGFBdHRyLCBhcmlhQXR0ciwgaXNDb21wb3NpbmdFdmVudCwgY29udGFpbnMsIHJhZiwgaXNBcHBsZSB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcbmltcG9ydCB7IGNyZWF0ZU1hY2hpbmUgfSBmcm9tICdAemFnLWpzL2NvcmUnO1xuaW1wb3J0IHsgdHJhY2tJbnRlcmFjdE91dHNpZGUgfSBmcm9tICdAemFnLWpzL2ludGVyYWN0LW91dHNpZGUnO1xuaW1wb3J0IHsgY3JlYXRlU3BsaXRQcm9wcywgY29tcGFjdCwgaXNFcXVhbCB9IGZyb20gJ0B6YWctanMvdXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlUHJvcHMgfSBmcm9tICdAemFnLWpzL3R5cGVzJztcblxuLy8gc3JjL2VkaXRhYmxlLmFuYXRvbXkudHNcbnZhciBhbmF0b215ID0gY3JlYXRlQW5hdG9teShcImVkaXRhYmxlXCIpLnBhcnRzKFxuICBcInJvb3RcIixcbiAgXCJhcmVhXCIsXG4gIFwibGFiZWxcIixcbiAgXCJwcmV2aWV3XCIsXG4gIFwiaW5wdXRcIixcbiAgXCJlZGl0VHJpZ2dlclwiLFxuICBcInN1Ym1pdFRyaWdnZXJcIixcbiAgXCJjYW5jZWxUcmlnZ2VyXCIsXG4gIFwiY29udHJvbFwiXG4pO1xudmFyIHBhcnRzID0gYW5hdG9teS5idWlsZCgpO1xudmFyIGRvbSA9IGNyZWF0ZVNjb3BlKHtcbiAgZ2V0Um9vdElkOiAoY3R4KSA9PiBjdHguaWRzPy5yb290ID8/IGBlZGl0YWJsZToke2N0eC5pZH1gLFxuICBnZXRBcmVhSWQ6IChjdHgpID0+IGN0eC5pZHM/LmFyZWEgPz8gYGVkaXRhYmxlOiR7Y3R4LmlkfTphcmVhYCxcbiAgZ2V0TGFiZWxJZDogKGN0eCkgPT4gY3R4Lmlkcz8ubGFiZWwgPz8gYGVkaXRhYmxlOiR7Y3R4LmlkfTpsYWJlbGAsXG4gIGdldFByZXZpZXdJZDogKGN0eCkgPT4gY3R4Lmlkcz8ucHJldmlldyA/PyBgZWRpdGFibGU6JHtjdHguaWR9OnByZXZpZXdgLFxuICBnZXRJbnB1dElkOiAoY3R4KSA9PiBjdHguaWRzPy5pbnB1dCA/PyBgZWRpdGFibGU6JHtjdHguaWR9OmlucHV0YCxcbiAgZ2V0Q29udHJvbElkOiAoY3R4KSA9PiBjdHguaWRzPy5jb250cm9sID8/IGBlZGl0YWJsZToke2N0eC5pZH06Y29udHJvbGAsXG4gIGdldFN1Ym1pdFRyaWdnZXJJZDogKGN0eCkgPT4gY3R4Lmlkcz8uc3VibWl0VHJpZ2dlciA/PyBgZWRpdGFibGU6JHtjdHguaWR9OnN1Ym1pdGAsXG4gIGdldENhbmNlbFRyaWdnZXJJZDogKGN0eCkgPT4gY3R4Lmlkcz8uY2FuY2VsVHJpZ2dlciA/PyBgZWRpdGFibGU6JHtjdHguaWR9OmNhbmNlbGAsXG4gIGdldEVkaXRUcmlnZ2VySWQ6IChjdHgpID0+IGN0eC5pZHM/LmVkaXRUcmlnZ2VyID8/IGBlZGl0YWJsZToke2N0eC5pZH06ZWRpdGAsXG4gIGdldElucHV0RWw6IChjdHgpID0+IGRvbS5nZXRCeUlkKGN0eCwgZG9tLmdldElucHV0SWQoY3R4KSksXG4gIGdldFByZXZpZXdFbDogKGN0eCkgPT4gZG9tLmdldEJ5SWQoY3R4LCBkb20uZ2V0UHJldmlld0lkKGN0eCkpLFxuICBnZXRTdWJtaXRUcmlnZ2VyRWw6IChjdHgpID0+IGRvbS5nZXRCeUlkKGN0eCwgZG9tLmdldFN1Ym1pdFRyaWdnZXJJZChjdHgpKSxcbiAgZ2V0Q2FuY2VsVHJpZ2dlckVsOiAoY3R4KSA9PiBkb20uZ2V0QnlJZChjdHgsIGRvbS5nZXRDYW5jZWxUcmlnZ2VySWQoY3R4KSksXG4gIGdldEVkaXRUcmlnZ2VyRWw6IChjdHgpID0+IGRvbS5nZXRCeUlkKGN0eCwgZG9tLmdldEVkaXRUcmlnZ2VySWQoY3R4KSlcbn0pO1xuXG4vLyBzcmMvZWRpdGFibGUuY29ubmVjdC50c1xuZnVuY3Rpb24gY29ubmVjdChzdGF0ZSwgc2VuZCwgbm9ybWFsaXplKSB7XG4gIGNvbnN0IGRpc2FibGVkID0gc3RhdGUuY29udGV4dC5kaXNhYmxlZDtcbiAgY29uc3QgaW50ZXJhY3RpdmUgPSBzdGF0ZS5jb250ZXh0LmlzSW50ZXJhY3RpdmU7XG4gIGNvbnN0IHJlYWRPbmx5ID0gc3RhdGUuY29udGV4dC5yZWFkT25seTtcbiAgY29uc3QgaW52YWxpZCA9IHN0YXRlLmNvbnRleHQuaW52YWxpZDtcbiAgY29uc3QgYXV0b1Jlc2l6ZSA9IHN0YXRlLmNvbnRleHQuYXV0b1Jlc2l6ZTtcbiAgY29uc3QgdHJhbnNsYXRpb25zID0gc3RhdGUuY29udGV4dC50cmFuc2xhdGlvbnM7XG4gIGNvbnN0IGVkaXRpbmcgPSBzdGF0ZS5tYXRjaGVzKFwiZWRpdFwiKTtcbiAgY29uc3QgcGxhY2Vob2xkZXJQcm9wID0gc3RhdGUuY29udGV4dC5wbGFjZWhvbGRlcjtcbiAgY29uc3QgcGxhY2Vob2xkZXIgPSB0eXBlb2YgcGxhY2Vob2xkZXJQcm9wID09PSBcInN0cmluZ1wiID8geyBlZGl0OiBwbGFjZWhvbGRlclByb3AsIHByZXZpZXc6IHBsYWNlaG9sZGVyUHJvcCB9IDogcGxhY2Vob2xkZXJQcm9wO1xuICBjb25zdCB2YWx1ZSA9IHN0YXRlLmNvbnRleHQudmFsdWU7XG4gIGNvbnN0IGVtcHR5ID0gdmFsdWUudHJpbSgpID09PSBcIlwiO1xuICBjb25zdCB2YWx1ZVRleHQgPSBlbXB0eSA/IHBsYWNlaG9sZGVyPy5wcmV2aWV3ID8/IFwiXCIgOiB2YWx1ZTtcbiAgcmV0dXJuIHtcbiAgICBlZGl0aW5nLFxuICAgIGVtcHR5LFxuICAgIHZhbHVlLFxuICAgIHZhbHVlVGV4dCxcbiAgICBzZXRWYWx1ZSh2YWx1ZTIpIHtcbiAgICAgIHNlbmQoeyB0eXBlOiBcIlZBTFVFLlNFVFwiLCB2YWx1ZTogdmFsdWUyLCBzcmM6IFwic2V0VmFsdWVcIiB9KTtcbiAgICB9LFxuICAgIGNsZWFyVmFsdWUoKSB7XG4gICAgICBzZW5kKHsgdHlwZTogXCJWQUxVRS5TRVRcIiwgdmFsdWU6IFwiXCIsIHNyYzogXCJjbGVhclZhbHVlXCIgfSk7XG4gICAgfSxcbiAgICBlZGl0KCkge1xuICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgc2VuZChcIkVESVRcIik7XG4gICAgfSxcbiAgICBjYW5jZWwoKSB7XG4gICAgICBpZiAoIWludGVyYWN0aXZlKSByZXR1cm47XG4gICAgICBzZW5kKFwiQ0FOQ0VMXCIpO1xuICAgIH0sXG4gICAgc3VibWl0KCkge1xuICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgc2VuZChcIlNVQk1JVFwiKTtcbiAgICB9LFxuICAgIGdldFJvb3RQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLnJvb3QuYXR0cnMsXG4gICAgICAgIGlkOiBkb20uZ2V0Um9vdElkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBkaXI6IHN0YXRlLmNvbnRleHQuZGlyXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEFyZWFQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmFyZWEuYXR0cnMsXG4gICAgICAgIGlkOiBkb20uZ2V0QXJlYUlkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBkaXI6IHN0YXRlLmNvbnRleHQuZGlyLFxuICAgICAgICBzdHlsZTogYXV0b1Jlc2l6ZSA/IHsgZGlzcGxheTogXCJpbmxpbmUtZ3JpZFwiIH0gOiB2b2lkIDAsXG4gICAgICAgIFwiZGF0YS1mb2N1c1wiOiBkYXRhQXR0cihlZGl0aW5nKSxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKGRpc2FibGVkKSxcbiAgICAgICAgXCJkYXRhLXBsYWNlaG9sZGVyLXNob3duXCI6IGRhdGFBdHRyKGVtcHR5KVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRMYWJlbFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5sYWJlbCh7XG4gICAgICAgIC4uLnBhcnRzLmxhYmVsLmF0dHJzLFxuICAgICAgICBpZDogZG9tLmdldExhYmVsSWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGh0bWxGb3I6IGRvbS5nZXRJbnB1dElkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBcImRhdGEtZm9jdXNcIjogZGF0YUF0dHIoZWRpdGluZyksXG4gICAgICAgIFwiZGF0YS1pbnZhbGlkXCI6IGRhdGFBdHRyKGludmFsaWQpLFxuICAgICAgICBvbkNsaWNrKCkge1xuICAgICAgICAgIGlmIChlZGl0aW5nKSByZXR1cm47XG4gICAgICAgICAgY29uc3QgcHJldmlld0VsID0gZG9tLmdldFByZXZpZXdFbChzdGF0ZS5jb250ZXh0KTtcbiAgICAgICAgICBwcmV2aWV3RWw/LmZvY3VzKHsgcHJldmVudFNjcm9sbDogdHJ1ZSB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRJbnB1dFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5pbnB1dCh7XG4gICAgICAgIC4uLnBhcnRzLmlucHV0LmF0dHJzLFxuICAgICAgICBkaXI6IHN0YXRlLmNvbnRleHQuZGlyLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogdHJhbnNsYXRpb25zLmlucHV0LFxuICAgICAgICBuYW1lOiBzdGF0ZS5jb250ZXh0Lm5hbWUsXG4gICAgICAgIGZvcm06IHN0YXRlLmNvbnRleHQuZm9ybSxcbiAgICAgICAgaWQ6IGRvbS5nZXRJbnB1dElkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBoaWRkZW46IGF1dG9SZXNpemUgPyB2b2lkIDAgOiAhZWRpdGluZyxcbiAgICAgICAgcGxhY2Vob2xkZXI6IHBsYWNlaG9sZGVyPy5lZGl0LFxuICAgICAgICBtYXhMZW5ndGg6IHN0YXRlLmNvbnRleHQubWF4TGVuZ3RoLFxuICAgICAgICByZXF1aXJlZDogc3RhdGUuY29udGV4dC5yZXF1aXJlZCxcbiAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgIFwiZGF0YS1kaXNhYmxlZFwiOiBkYXRhQXR0cihkaXNhYmxlZCksXG4gICAgICAgIHJlYWRPbmx5LFxuICAgICAgICBcImRhdGEtcmVhZG9ubHlcIjogZGF0YUF0dHIocmVhZE9ubHkpLFxuICAgICAgICBcImFyaWEtaW52YWxpZFwiOiBhcmlhQXR0cihpbnZhbGlkKSxcbiAgICAgICAgXCJkYXRhLWludmFsaWRcIjogZGF0YUF0dHIoaW52YWxpZCksXG4gICAgICAgIFwiZGF0YS1hdXRvcmVzaXplXCI6IGRhdGFBdHRyKGF1dG9SZXNpemUpLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IHZhbHVlLFxuICAgICAgICBzaXplOiBhdXRvUmVzaXplID8gMSA6IHZvaWQgMCxcbiAgICAgICAgb25DaGFuZ2UoZXZlbnQpIHtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJWQUxVRS5TRVRcIiwgc3JjOiBcImlucHV0LmNoYW5nZVwiLCB2YWx1ZTogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25LZXlEb3duKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoaXNDb21wb3NpbmdFdmVudChldmVudCkpIHJldHVybjtcbiAgICAgICAgICBjb25zdCBrZXlNYXAgPSB7XG4gICAgICAgICAgICBFc2NhcGUoKSB7XG4gICAgICAgICAgICAgIHNlbmQoXCJDQU5DRUxcIik7XG4gICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgRW50ZXIoZXZlbnQyKSB7XG4gICAgICAgICAgICAgIGlmICghc3RhdGUuY29udGV4dC5zdWJtaXRPbkVudGVyKSByZXR1cm47XG4gICAgICAgICAgICAgIGNvbnN0IHsgbG9jYWxOYW1lIH0gPSBldmVudDIuY3VycmVudFRhcmdldDtcbiAgICAgICAgICAgICAgaWYgKGxvY2FsTmFtZSA9PT0gXCJ0ZXh0YXJlYVwiKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3VibWl0TW9kID0gaXNBcHBsZSgpID8gZXZlbnQyLm1ldGFLZXkgOiBldmVudDIuY3RybEtleTtcbiAgICAgICAgICAgICAgICBpZiAoIXN1Ym1pdE1vZCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNVQk1JVFwiLCBzcmM6IFwia2V5ZG93bi5lbnRlclwiIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBpZiAobG9jYWxOYW1lID09PSBcImlucHV0XCIgJiYgIWV2ZW50Mi5zaGlmdEtleSAmJiAhZXZlbnQyLm1ldGFLZXkpIHtcbiAgICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTVUJNSVRcIiwgc3JjOiBcImtleWRvd24uZW50ZXJcIiB9KTtcbiAgICAgICAgICAgICAgICBldmVudDIucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgICAgY29uc3QgZXhlYyA9IGtleU1hcFtldmVudC5rZXldO1xuICAgICAgICAgIGlmIChleGVjKSB7XG4gICAgICAgICAgICBleGVjKGV2ZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN0eWxlOiBhdXRvUmVzaXplID8ge1xuICAgICAgICAgIGdyaWRBcmVhOiBcIjEgLyAxIC8gYXV0byAvIGF1dG9cIixcbiAgICAgICAgICB2aXNpYmlsaXR5OiAhZWRpdGluZyA/IFwiaGlkZGVuXCIgOiB2b2lkIDBcbiAgICAgICAgfSA6IHZvaWQgMFxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRQcmV2aWV3UHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICBpZDogZG9tLmdldFByZXZpZXdJZChzdGF0ZS5jb250ZXh0KSxcbiAgICAgICAgLi4ucGFydHMucHJldmlldy5hdHRycyxcbiAgICAgICAgZGlyOiBzdGF0ZS5jb250ZXh0LmRpcixcbiAgICAgICAgXCJkYXRhLXBsYWNlaG9sZGVyLXNob3duXCI6IGRhdGFBdHRyKGVtcHR5KSxcbiAgICAgICAgXCJhcmlhLXJlYWRvbmx5XCI6IGFyaWFBdHRyKHJlYWRPbmx5KSxcbiAgICAgICAgXCJkYXRhLXJlYWRvbmx5XCI6IGRhdGFBdHRyKGRpc2FibGVkKSxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKGRpc2FibGVkKSxcbiAgICAgICAgXCJhcmlhLWRpc2FibGVkXCI6IGFyaWFBdHRyKGRpc2FibGVkKSxcbiAgICAgICAgXCJhcmlhLWludmFsaWRcIjogYXJpYUF0dHIoaW52YWxpZCksXG4gICAgICAgIFwiZGF0YS1pbnZhbGlkXCI6IGRhdGFBdHRyKGludmFsaWQpLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogdHJhbnNsYXRpb25zLmVkaXQsXG4gICAgICAgIFwiZGF0YS1hdXRvcmVzaXplXCI6IGRhdGFBdHRyKGF1dG9SZXNpemUpLFxuICAgICAgICBjaGlsZHJlbjogdmFsdWVUZXh0LFxuICAgICAgICBoaWRkZW46IGF1dG9SZXNpemUgPyB2b2lkIDAgOiBlZGl0aW5nLFxuICAgICAgICB0YWJJbmRleDogaW50ZXJhY3RpdmUgPyAwIDogdm9pZCAwLFxuICAgICAgICBvbkNsaWNrKCkge1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBpZiAoc3RhdGUuY29udGV4dC5hY3RpdmF0aW9uTW9kZSAhPT0gXCJjbGlja1wiKSByZXR1cm47XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiRURJVFwiLCBzcmM6IFwiY2xpY2tcIiB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Gb2N1cygpIHtcbiAgICAgICAgICBpZiAoIWludGVyYWN0aXZlKSByZXR1cm47XG4gICAgICAgICAgaWYgKHN0YXRlLmNvbnRleHQuYWN0aXZhdGlvbk1vZGUgIT09IFwiZm9jdXNcIikgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIkVESVRcIiwgc3JjOiBcImZvY3VzXCIgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRG91YmxlQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBpZiAoc3RhdGUuY29udGV4dC5hY3RpdmF0aW9uTW9kZSAhPT0gXCJkYmxjbGlja1wiKSByZXR1cm47XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiRURJVFwiLCBzcmM6IFwiZGJsY2xpY2tcIiB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgc3R5bGU6IGF1dG9SZXNpemUgPyB7XG4gICAgICAgICAgd2hpdGVTcGFjZTogXCJwcmVcIixcbiAgICAgICAgICB1c2VyU2VsZWN0OiBcIm5vbmVcIixcbiAgICAgICAgICBncmlkQXJlYTogXCIxIC8gMSAvIGF1dG8gLyBhdXRvXCIsXG4gICAgICAgICAgdmlzaWJpbGl0eTogZWRpdGluZyA/IFwiaGlkZGVuXCIgOiB2b2lkIDAsXG4gICAgICAgICAgLy8gaW4gZXZlbnQgdGhlIHByZXZpZXcgb3ZlcmZsb3cncyB0aGUgcGFyZW50IGVsZW1lbnRcbiAgICAgICAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbiAgICAgICAgICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIlxuICAgICAgICB9IDogdm9pZCAwXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEVkaXRUcmlnZ2VyUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmJ1dHRvbih7XG4gICAgICAgIC4uLnBhcnRzLmVkaXRUcmlnZ2VyLmF0dHJzLFxuICAgICAgICBpZDogZG9tLmdldEVkaXRUcmlnZ2VySWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiB0cmFuc2xhdGlvbnMuZWRpdCxcbiAgICAgICAgaGlkZGVuOiBlZGl0aW5nLFxuICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgICBkaXNhYmxlZCxcbiAgICAgICAgb25DbGljayhldmVudCkge1xuICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIkVESVRcIiwgc3JjOiBcImVkaXQuY2xpY2tcIiB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRDb250cm9sUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICBpZDogZG9tLmdldENvbnRyb2xJZChzdGF0ZS5jb250ZXh0KSxcbiAgICAgICAgLi4ucGFydHMuY29udHJvbC5hdHRycyxcbiAgICAgICAgZGlyOiBzdGF0ZS5jb250ZXh0LmRpclxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRTdWJtaXRUcmlnZ2VyUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmJ1dHRvbih7XG4gICAgICAgIC4uLnBhcnRzLnN1Ym1pdFRyaWdnZXIuYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGlkOiBkb20uZ2V0U3VibWl0VHJpZ2dlcklkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogdHJhbnNsYXRpb25zLnN1Ym1pdCxcbiAgICAgICAgaGlkZGVuOiAhZWRpdGluZyxcbiAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgIHR5cGU6IFwiYnV0dG9uXCIsXG4gICAgICAgIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTVUJNSVRcIiwgc3JjOiBcInN1Ym1pdC5jbGlja1wiIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldENhbmNlbFRyaWdnZXJQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuYnV0dG9uKHtcbiAgICAgICAgLi4ucGFydHMuY2FuY2VsVHJpZ2dlci5hdHRycyxcbiAgICAgICAgZGlyOiBzdGF0ZS5jb250ZXh0LmRpcixcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRyYW5zbGF0aW9ucy5jYW5jZWwsXG4gICAgICAgIGlkOiBkb20uZ2V0Q2FuY2VsVHJpZ2dlcklkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBoaWRkZW46ICFlZGl0aW5nLFxuICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgICBkaXNhYmxlZCxcbiAgICAgICAgb25DbGljayhldmVudCkge1xuICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIkNBTkNFTFwiLCBzcmM6IFwiY2FuY2VsLmNsaWNrXCIgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cbnZhciBzdWJtaXRPbkVudGVyID0gKGN0eCkgPT4gW1wiYm90aFwiLCBcImVudGVyXCJdLmluY2x1ZGVzKGN0eC5zdWJtaXRNb2RlKTtcbnZhciBzdWJtaXRPbkJsdXIgPSAoY3R4KSA9PiBbXCJib3RoXCIsIFwiYmx1clwiXS5pbmNsdWRlcyhjdHguc3VibWl0TW9kZSk7XG5mdW5jdGlvbiBtYWNoaW5lKHVzZXJDb250ZXh0KSB7XG4gIGNvbnN0IGN0eCA9IGNvbXBhY3QodXNlckNvbnRleHQpO1xuICByZXR1cm4gY3JlYXRlTWFjaGluZShcbiAgICB7XG4gICAgICBpZDogXCJlZGl0YWJsZVwiLFxuICAgICAgaW5pdGlhbDogY3R4LmVkaXQgPyBcImVkaXRcIiA6IFwicHJldmlld1wiLFxuICAgICAgZW50cnk6IGN0eC5lZGl0ID8gW1wiZm9jdXNJbnB1dFwiXSA6IHZvaWQgMCxcbiAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgYWN0aXZhdGlvbk1vZGU6IFwiZm9jdXNcIixcbiAgICAgICAgc3VibWl0TW9kZTogXCJib3RoXCIsXG4gICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICBwcmV2aW91c1ZhbHVlOiBcIlwiLFxuICAgICAgICBzZWxlY3RPbkZvY3VzOiB0cnVlLFxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIHJlYWRPbmx5OiBmYWxzZSxcbiAgICAgICAgLi4uY3R4LFxuICAgICAgICB0cmFuc2xhdGlvbnM6IHtcbiAgICAgICAgICBpbnB1dDogXCJlZGl0YWJsZSBpbnB1dFwiLFxuICAgICAgICAgIGVkaXQ6IFwiZWRpdFwiLFxuICAgICAgICAgIHN1Ym1pdDogXCJzdWJtaXRcIixcbiAgICAgICAgICBjYW5jZWw6IFwiY2FuY2VsXCIsXG4gICAgICAgICAgLi4uY3R4LnRyYW5zbGF0aW9uc1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgd2F0Y2g6IHtcbiAgICAgICAgdmFsdWU6IFtcInN5bmNJbnB1dFZhbHVlXCJdLFxuICAgICAgICBlZGl0OiBbXCJ0b2dnbGVFZGl0aW5nXCJdXG4gICAgICB9LFxuICAgICAgY29tcHV0ZWQ6IHtcbiAgICAgICAgc3VibWl0T25FbnRlcixcbiAgICAgICAgc3VibWl0T25CbHVyLFxuICAgICAgICBpc0ludGVyYWN0aXZlOiAoY3R4MikgPT4gIShjdHgyLmRpc2FibGVkIHx8IGN0eDIucmVhZE9ubHkpXG4gICAgICB9LFxuICAgICAgb246IHtcbiAgICAgICAgXCJWQUxVRS5TRVRcIjoge1xuICAgICAgICAgIGFjdGlvbnM6IFwic2V0VmFsdWVcIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3RhdGVzOiB7XG4gICAgICAgIHByZXZpZXc6IHtcbiAgICAgICAgICAvLyBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD01NTk1NjFcbiAgICAgICAgICBlbnRyeTogW1wiYmx1cklucHV0SWZOZWVkZWRcIl0sXG4gICAgICAgICAgb246IHtcbiAgICAgICAgICAgIFwiQ09OVFJPTExFRC5FRElUXCI6IHtcbiAgICAgICAgICAgICAgdGFyZ2V0OiBcImVkaXRcIixcbiAgICAgICAgICAgICAgYWN0aW9uczogW1wic2V0UHJldmlvdXNWYWx1ZVwiLCBcImZvY3VzSW5wdXRcIl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBFRElUOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBndWFyZDogXCJpc0VkaXRDb250cm9sbGVkXCIsXG4gICAgICAgICAgICAgICAgYWN0aW9uczogW1wiaW52b2tlT25FZGl0XCJdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiZWRpdFwiLFxuICAgICAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldFByZXZpb3VzVmFsdWVcIiwgXCJmb2N1c0lucHV0XCIsIFwiaW52b2tlT25FZGl0XCJdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVkaXQ6IHtcbiAgICAgICAgICBhY3Rpdml0aWVzOiBbXCJ0cmFja0ludGVyYWN0T3V0c2lkZVwiXSxcbiAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgXCJDT05UUk9MTEVELlBSRVZJRVdcIjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZ3VhcmQ6IFwiaXNTdWJtaXRFdmVudFwiLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJwcmV2aWV3XCIsXG4gICAgICAgICAgICAgICAgYWN0aW9uczogW1wic2V0UHJldmlvdXNWYWx1ZVwiLCBcInJlc3RvcmVGb2N1c1wiLCBcImludm9rZU9uU3VibWl0XCJdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwicHJldmlld1wiLFxuICAgICAgICAgICAgICAgIGFjdGlvbnM6IFtcInJldmVydFZhbHVlXCIsIFwicmVzdG9yZUZvY3VzXCIsIFwiaW52b2tlT25DYW5jZWxcIl1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIENBTkNFTDogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZ3VhcmQ6IFwiaXNFZGl0Q29udHJvbGxlZFwiLFxuICAgICAgICAgICAgICAgIGFjdGlvbnM6IFtcImludm9rZU9uUHJldmlld1wiXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBcInByZXZpZXdcIixcbiAgICAgICAgICAgICAgICBhY3Rpb25zOiBbXCJyZXZlcnRWYWx1ZVwiLCBcInJlc3RvcmVGb2N1c1wiLCBcImludm9rZU9uQ2FuY2VsXCIsIFwiaW52b2tlT25QcmV2aWV3XCJdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBTVUJNSVQ6IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGd1YXJkOiBcImlzRWRpdENvbnRyb2xsZWRcIixcbiAgICAgICAgICAgICAgICBhY3Rpb25zOiBbXCJpbnZva2VPblByZXZpZXdcIl1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRhcmdldDogXCJwcmV2aWV3XCIsXG4gICAgICAgICAgICAgICAgYWN0aW9uczogW1wic2V0UHJldmlvdXNWYWx1ZVwiLCBcInJlc3RvcmVGb2N1c1wiLCBcImludm9rZU9uU3VibWl0XCIsIFwiaW52b2tlT25QcmV2aWV3XCJdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIGd1YXJkczoge1xuICAgICAgICBpc0VkaXRDb250cm9sbGVkOiAoY3R4MikgPT4gISFjdHgyW1wiZWRpdC5jb250cm9sbGVkXCJdLFxuICAgICAgICBpc1N1Ym1pdEV2ZW50OiAoX2N0eCwgZXZ0KSA9PiBldnQucHJldmlvdXNFdmVudD8udHlwZSA9PT0gXCJTVUJNSVRcIlxuICAgICAgfSxcbiAgICAgIGFjdGl2aXRpZXM6IHtcbiAgICAgICAgdHJhY2tJbnRlcmFjdE91dHNpZGUoY3R4MiwgX2V2dCwgeyBzZW5kIH0pIHtcbiAgICAgICAgICByZXR1cm4gdHJhY2tJbnRlcmFjdE91dHNpZGUoZG9tLmdldElucHV0RWwoY3R4MiksIHtcbiAgICAgICAgICAgIGV4Y2x1ZGUodGFyZ2V0KSB7XG4gICAgICAgICAgICAgIGNvbnN0IGlnbm9yZSA9IFtkb20uZ2V0Q2FuY2VsVHJpZ2dlckVsKGN0eDIpLCBkb20uZ2V0U3VibWl0VHJpZ2dlckVsKGN0eDIpXTtcbiAgICAgICAgICAgICAgcmV0dXJuIGlnbm9yZS5zb21lKChlbCkgPT4gY29udGFpbnMoZWwsIHRhcmdldCkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uRm9jdXNPdXRzaWRlOiBjdHgyLm9uRm9jdXNPdXRzaWRlLFxuICAgICAgICAgICAgb25Qb2ludGVyRG93bk91dHNpZGU6IGN0eDIub25Qb2ludGVyRG93bk91dHNpZGUsXG4gICAgICAgICAgICBvbkludGVyYWN0T3V0c2lkZShldmVudCkge1xuICAgICAgICAgICAgICBjdHgyLm9uSW50ZXJhY3RPdXRzaWRlPy4oZXZlbnQpO1xuICAgICAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgICAgICBjb25zdCB7IGZvY3VzYWJsZSB9ID0gZXZlbnQuZGV0YWlsO1xuICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogc3VibWl0T25CbHVyKGN0eDIpID8gXCJTVUJNSVRcIiA6IFwiQ0FOQ0VMXCIsIHNyYzogXCJpbnRlcmFjdC1vdXRzaWRlXCIsIGZvY3VzYWJsZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGFjdGlvbnM6IHtcbiAgICAgICAgcmVzdG9yZUZvY3VzKGN0eDIsIGV2dCkge1xuICAgICAgICAgIGlmIChldnQuZm9jdXNhYmxlKSByZXR1cm47XG4gICAgICAgICAgcmFmKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZpbmFsRWwgPSBjdHgyLmZpbmFsRm9jdXNFbD8uKCkgPz8gZG9tLmdldEVkaXRUcmlnZ2VyRWwoY3R4Mik7XG4gICAgICAgICAgICBmaW5hbEVsPy5mb2N1cyh7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGZvY3VzSW5wdXQoY3R4Mikge1xuICAgICAgICAgIHJhZigoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpbnB1dEVsID0gZG9tLmdldElucHV0RWwoY3R4Mik7XG4gICAgICAgICAgICBpZiAoIWlucHV0RWwpIHJldHVybjtcbiAgICAgICAgICAgIGlmIChjdHgyLnNlbGVjdE9uRm9jdXMpIHtcbiAgICAgICAgICAgICAgaW5wdXRFbC5zZWxlY3QoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlucHV0RWwuZm9jdXMoeyBwcmV2ZW50U2Nyb2xsOiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBpbnZva2VPbkNhbmNlbChjdHgyKSB7XG4gICAgICAgICAgY3R4Mi5vblZhbHVlUmV2ZXJ0Py4oeyB2YWx1ZTogY3R4Mi5wcmV2aW91c1ZhbHVlIH0pO1xuICAgICAgICB9LFxuICAgICAgICBpbnZva2VPblN1Ym1pdChjdHgyKSB7XG4gICAgICAgICAgY3R4Mi5vblZhbHVlQ29tbWl0Py4oeyB2YWx1ZTogY3R4Mi52YWx1ZSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgaW52b2tlT25FZGl0KGN0eDIpIHtcbiAgICAgICAgICBjdHgyLm9uRWRpdENoYW5nZT8uKHsgZWRpdDogdHJ1ZSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgaW52b2tlT25QcmV2aWV3KGN0eDIpIHtcbiAgICAgICAgICBjdHgyLm9uRWRpdENoYW5nZT8uKHsgZWRpdDogZmFsc2UgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHRvZ2dsZUVkaXRpbmcoY3R4MiwgZXZ0LCB7IHNlbmQgfSkge1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBjdHgyLmVkaXQgPyBcIkNPTlRST0xMRUQuRURJVFwiIDogXCJDT05UUk9MTEVELlBSRVZJRVdcIiwgcHJldmlvdXNFdmVudDogZXZ0IH0pO1xuICAgICAgICB9LFxuICAgICAgICBzeW5jSW5wdXRWYWx1ZShjdHgyKSB7XG4gICAgICAgICAgc3luYy52YWx1ZShjdHgyKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0VmFsdWUoY3R4MiwgZXZ0KSB7XG4gICAgICAgICAgY29uc3QgdmFsdWUgPSBjdHgyLm1heExlbmd0aCAhPSBudWxsID8gZXZ0LnZhbHVlLnNsaWNlKDAsIGN0eDIubWF4TGVuZ3RoKSA6IGV2dC52YWx1ZTtcbiAgICAgICAgICBzZXQudmFsdWUoY3R4MiwgdmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBzZXRQcmV2aW91c1ZhbHVlKGN0eDIpIHtcbiAgICAgICAgICBjdHgyLnByZXZpb3VzVmFsdWUgPSBjdHgyLnZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICByZXZlcnRWYWx1ZShjdHgyKSB7XG4gICAgICAgICAgc2V0LnZhbHVlKGN0eDIsIGN0eDIucHJldmlvdXNWYWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGJsdXJJbnB1dElmTmVlZGVkKGN0eDIpIHtcbiAgICAgICAgICBkb20uZ2V0SW5wdXRFbChjdHgyKT8uYmx1cigpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICApO1xufVxudmFyIHN5bmMgPSB7XG4gIHZhbHVlOiAoY3R4KSA9PiB7XG4gICAgY29uc3QgaW5wdXRFbCA9IGRvbS5nZXRJbnB1dEVsKGN0eCk7XG4gICAgZG9tLnNldFZhbHVlKGlucHV0RWwsIGN0eC52YWx1ZSk7XG4gIH1cbn07XG52YXIgaW52b2tlID0ge1xuICBjaGFuZ2UoY3R4KSB7XG4gICAgY3R4Lm9uVmFsdWVDaGFuZ2U/Lih7IHZhbHVlOiBjdHgudmFsdWUgfSk7XG4gICAgc3luYy52YWx1ZShjdHgpO1xuICB9XG59O1xudmFyIHNldCA9IHtcbiAgdmFsdWUoY3R4LCB2YWx1ZSkge1xuICAgIGlmIChpc0VxdWFsKGN0eC52YWx1ZSwgdmFsdWUpKSByZXR1cm47XG4gICAgY3R4LnZhbHVlID0gdmFsdWU7XG4gICAgaW52b2tlLmNoYW5nZShjdHgpO1xuICB9XG59O1xudmFyIHByb3BzID0gY3JlYXRlUHJvcHMoKShbXG4gIFwiYWN0aXZhdGlvbk1vZGVcIixcbiAgXCJhdXRvUmVzaXplXCIsXG4gIFwiZGlyXCIsXG4gIFwiZGlzYWJsZWRcIixcbiAgXCJmaW5hbEZvY3VzRWxcIixcbiAgXCJmb3JtXCIsXG4gIFwiZ2V0Um9vdE5vZGVcIixcbiAgXCJpZFwiLFxuICBcImlkc1wiLFxuICBcImludmFsaWRcIixcbiAgXCJtYXhMZW5ndGhcIixcbiAgXCJuYW1lXCIsXG4gIFwib25FZGl0Q2hhbmdlXCIsXG4gIFwib25Gb2N1c091dHNpZGVcIixcbiAgXCJvbkludGVyYWN0T3V0c2lkZVwiLFxuICBcIm9uUG9pbnRlckRvd25PdXRzaWRlXCIsXG4gIFwib25WYWx1ZUNoYW5nZVwiLFxuICBcIm9uVmFsdWVDb21taXRcIixcbiAgXCJvblZhbHVlUmV2ZXJ0XCIsXG4gIFwicGxhY2Vob2xkZXJcIixcbiAgXCJyZWFkT25seVwiLFxuICBcInJlcXVpcmVkXCIsXG4gIFwic2VsZWN0T25Gb2N1c1wiLFxuICBcImVkaXRcIixcbiAgXCJlZGl0LmNvbnRyb2xsZWRcIixcbiAgXCJzdWJtaXRNb2RlXCIsXG4gIFwidHJhbnNsYXRpb25zXCIsXG4gIFwidmFsdWVcIlxuXSk7XG52YXIgc3BsaXRQcm9wcyA9IGNyZWF0ZVNwbGl0UHJvcHMocHJvcHMpO1xuXG5leHBvcnQgeyBhbmF0b215LCBjb25uZWN0LCBtYWNoaW5lLCBwcm9wcywgc3BsaXRQcm9wcyB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/editable/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/element-rect/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/element-rect/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackElementRect: () => (/* binding */ trackElementRect)\n/* harmony export */ });\n// src/index.ts\nvar rafId;\nvar observedElements = /* @__PURE__ */ new Map();\nvar getRectFn = (el) => el.getBoundingClientRect();\nfunction trackElementRect(el, options) {\n  const { scope = \"rect\", getRect = getRectFn, onChange } = options;\n  const loop = getLoopFn({ scope, getRect });\n  const data = observedElements.get(el);\n  if (!data) {\n    observedElements.set(el, {\n      rect: {},\n      callbacks: [onChange]\n    });\n    if (observedElements.size === 1) {\n      rafId = requestAnimationFrame(loop);\n    }\n  } else {\n    data.callbacks.push(onChange);\n    onChange(getRect(el));\n  }\n  return function unobserve() {\n    const data2 = observedElements.get(el);\n    if (!data2) return;\n    const index = data2.callbacks.indexOf(onChange);\n    if (index > -1) {\n      data2.callbacks.splice(index, 1);\n    }\n    if (data2.callbacks.length === 0) {\n      observedElements.delete(el);\n      if (observedElements.size === 0) {\n        cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\nfunction getLoopFn(options) {\n  const { scope, getRect } = options;\n  const isEqual = getEqualityFn(scope);\n  return function loop() {\n    const changedRectsData = [];\n    observedElements.forEach((data, element) => {\n      const newRect = getRect(element);\n      if (!isEqual(data.rect, newRect)) {\n        data.rect = newRect;\n        changedRectsData.push(data);\n      }\n    });\n    changedRectsData.forEach((data) => {\n      data.callbacks.forEach((callback) => callback(data.rect));\n    });\n    rafId = requestAnimationFrame(loop);\n  };\n}\nvar isEqualSize = (a, b) => a.width === b.width && a.height === b.height;\nvar isEqualPosition = (a, b) => a.top === b.top && a.left === b.left;\nvar isEqualRect = (a, b) => isEqualSize(a, b) && isEqualPosition(a, b);\nfunction getEqualityFn(scope) {\n  if (scope === \"size\") return isEqualSize;\n  if (scope === \"position\") return isEqualPosition;\n  return isEqualRect;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9lbGVtZW50LXJlY3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGdEQUFnRDtBQUMxRCwyQkFBMkIsZ0JBQWdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGlCQUFpQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QiIsInNvdXJjZXMiOlsiL2hvbWUvc2FjaGEvRXBpdGVjaC9HLUVQSS0zMDAtUkVOLTMtMS1wcm9qZWN0d2Vlay1uYXRoYW4uamVhbm5vdC9mcm9udC9ub2RlX21vZHVsZXMvQHphZy1qcy9lbGVtZW50LXJlY3QvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZGV4LnRzXG52YXIgcmFmSWQ7XG52YXIgb2JzZXJ2ZWRFbGVtZW50cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG52YXIgZ2V0UmVjdEZuID0gKGVsKSA9PiBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbmZ1bmN0aW9uIHRyYWNrRWxlbWVudFJlY3QoZWwsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBzY29wZSA9IFwicmVjdFwiLCBnZXRSZWN0ID0gZ2V0UmVjdEZuLCBvbkNoYW5nZSB9ID0gb3B0aW9ucztcbiAgY29uc3QgbG9vcCA9IGdldExvb3BGbih7IHNjb3BlLCBnZXRSZWN0IH0pO1xuICBjb25zdCBkYXRhID0gb2JzZXJ2ZWRFbGVtZW50cy5nZXQoZWwpO1xuICBpZiAoIWRhdGEpIHtcbiAgICBvYnNlcnZlZEVsZW1lbnRzLnNldChlbCwge1xuICAgICAgcmVjdDoge30sXG4gICAgICBjYWxsYmFja3M6IFtvbkNoYW5nZV1cbiAgICB9KTtcbiAgICBpZiAob2JzZXJ2ZWRFbGVtZW50cy5zaXplID09PSAxKSB7XG4gICAgICByYWZJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShsb29wKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZGF0YS5jYWxsYmFja3MucHVzaChvbkNoYW5nZSk7XG4gICAgb25DaGFuZ2UoZ2V0UmVjdChlbCkpO1xuICB9XG4gIHJldHVybiBmdW5jdGlvbiB1bm9ic2VydmUoKSB7XG4gICAgY29uc3QgZGF0YTIgPSBvYnNlcnZlZEVsZW1lbnRzLmdldChlbCk7XG4gICAgaWYgKCFkYXRhMikgcmV0dXJuO1xuICAgIGNvbnN0IGluZGV4ID0gZGF0YTIuY2FsbGJhY2tzLmluZGV4T2Yob25DaGFuZ2UpO1xuICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICBkYXRhMi5jYWxsYmFja3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG4gICAgaWYgKGRhdGEyLmNhbGxiYWNrcy5sZW5ndGggPT09IDApIHtcbiAgICAgIG9ic2VydmVkRWxlbWVudHMuZGVsZXRlKGVsKTtcbiAgICAgIGlmIChvYnNlcnZlZEVsZW1lbnRzLnNpemUgPT09IDApIHtcbiAgICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUocmFmSWQpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIGdldExvb3BGbihvcHRpb25zKSB7XG4gIGNvbnN0IHsgc2NvcGUsIGdldFJlY3QgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGlzRXF1YWwgPSBnZXRFcXVhbGl0eUZuKHNjb3BlKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIGxvb3AoKSB7XG4gICAgY29uc3QgY2hhbmdlZFJlY3RzRGF0YSA9IFtdO1xuICAgIG9ic2VydmVkRWxlbWVudHMuZm9yRWFjaCgoZGF0YSwgZWxlbWVudCkgPT4ge1xuICAgICAgY29uc3QgbmV3UmVjdCA9IGdldFJlY3QoZWxlbWVudCk7XG4gICAgICBpZiAoIWlzRXF1YWwoZGF0YS5yZWN0LCBuZXdSZWN0KSkge1xuICAgICAgICBkYXRhLnJlY3QgPSBuZXdSZWN0O1xuICAgICAgICBjaGFuZ2VkUmVjdHNEYXRhLnB1c2goZGF0YSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgY2hhbmdlZFJlY3RzRGF0YS5mb3JFYWNoKChkYXRhKSA9PiB7XG4gICAgICBkYXRhLmNhbGxiYWNrcy5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2soZGF0YS5yZWN0KSk7XG4gICAgfSk7XG4gICAgcmFmSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XG4gIH07XG59XG52YXIgaXNFcXVhbFNpemUgPSAoYSwgYikgPT4gYS53aWR0aCA9PT0gYi53aWR0aCAmJiBhLmhlaWdodCA9PT0gYi5oZWlnaHQ7XG52YXIgaXNFcXVhbFBvc2l0aW9uID0gKGEsIGIpID0+IGEudG9wID09PSBiLnRvcCAmJiBhLmxlZnQgPT09IGIubGVmdDtcbnZhciBpc0VxdWFsUmVjdCA9IChhLCBiKSA9PiBpc0VxdWFsU2l6ZShhLCBiKSAmJiBpc0VxdWFsUG9zaXRpb24oYSwgYik7XG5mdW5jdGlvbiBnZXRFcXVhbGl0eUZuKHNjb3BlKSB7XG4gIGlmIChzY29wZSA9PT0gXCJzaXplXCIpIHJldHVybiBpc0VxdWFsU2l6ZTtcbiAgaWYgKHNjb3BlID09PSBcInBvc2l0aW9uXCIpIHJldHVybiBpc0VxdWFsUG9zaXRpb247XG4gIHJldHVybiBpc0VxdWFsUmVjdDtcbn1cblxuZXhwb3J0IHsgdHJhY2tFbGVtZW50UmVjdCB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/element-rect/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/element-size/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/element-size/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackElementSize: () => (/* binding */ trackElementSize),\n/* harmony export */   trackElementsSize: () => (/* binding */ trackElementsSize)\n/* harmony export */ });\n// src/track-size.ts\nfunction trackElementSize(element, callback) {\n  if (!element) {\n    callback(void 0);\n    return;\n  }\n  callback({ width: element.offsetWidth, height: element.offsetHeight });\n  const win = element.ownerDocument.defaultView ?? window;\n  const observer = new win.ResizeObserver((entries) => {\n    if (!Array.isArray(entries) || !entries.length) return;\n    const [entry] = entries;\n    let width;\n    let height;\n    if (\"borderBoxSize\" in entry) {\n      const borderSizeEntry = entry[\"borderBoxSize\"];\n      const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n      width = borderSize[\"inlineSize\"];\n      height = borderSize[\"blockSize\"];\n    } else {\n      width = element.offsetWidth;\n      height = element.offsetHeight;\n    }\n    callback({ width, height });\n  });\n  observer.observe(element, { box: \"border-box\" });\n  return () => observer.unobserve(element);\n}\n\n// src/track-sizes.ts\nfunction trackElementsSize(options) {\n  const { getNodes, observeMutation = true, callback } = options;\n  const cleanups = [];\n  let firstNode = null;\n  function trigger() {\n    const elements = getNodes();\n    firstNode = elements[0];\n    const fns = elements.map(\n      (element, index) => trackElementSize(element, (size) => {\n        callback(size, index);\n      })\n    );\n    cleanups.push(...fns);\n  }\n  trigger();\n  if (observeMutation) {\n    const fn = trackMutation(firstNode, trigger);\n    cleanups.push(fn);\n  }\n  return () => {\n    cleanups.forEach((cleanup) => {\n      cleanup?.();\n    });\n  };\n}\nfunction trackMutation(el, cb) {\n  if (!el || !el.parentElement) return;\n  const win = el.ownerDocument?.defaultView ?? window;\n  const observer = new win.MutationObserver(() => {\n    cb();\n  });\n  observer.observe(el.parentElement, { childList: true });\n  return () => {\n    observer.disconnect();\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9lbGVtZW50LXNpemUvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDBEQUEwRDtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QixHQUFHO0FBQ0gsOEJBQThCLG1CQUFtQjtBQUNqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVLDZDQUE2QztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsdUNBQXVDLGlCQUFpQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTs7QUFFK0MiLCJzb3VyY2VzIjpbIi9ob21lL3NhY2hhL0VwaXRlY2gvRy1FUEktMzAwLVJFTi0zLTEtcHJvamVjdHdlZWstbmF0aGFuLmplYW5ub3QvZnJvbnQvbm9kZV9tb2R1bGVzL0B6YWctanMvZWxlbWVudC1zaXplL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy90cmFjay1zaXplLnRzXG5mdW5jdGlvbiB0cmFja0VsZW1lbnRTaXplKGVsZW1lbnQsIGNhbGxiYWNrKSB7XG4gIGlmICghZWxlbWVudCkge1xuICAgIGNhbGxiYWNrKHZvaWQgMCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNhbGxiYWNrKHsgd2lkdGg6IGVsZW1lbnQub2Zmc2V0V2lkdGgsIGhlaWdodDogZWxlbWVudC5vZmZzZXRIZWlnaHQgfSk7XG4gIGNvbnN0IHdpbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldyA/PyB3aW5kb3c7XG4gIGNvbnN0IG9ic2VydmVyID0gbmV3IHdpbi5SZXNpemVPYnNlcnZlcigoZW50cmllcykgPT4ge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShlbnRyaWVzKSB8fCAhZW50cmllcy5sZW5ndGgpIHJldHVybjtcbiAgICBjb25zdCBbZW50cnldID0gZW50cmllcztcbiAgICBsZXQgd2lkdGg7XG4gICAgbGV0IGhlaWdodDtcbiAgICBpZiAoXCJib3JkZXJCb3hTaXplXCIgaW4gZW50cnkpIHtcbiAgICAgIGNvbnN0IGJvcmRlclNpemVFbnRyeSA9IGVudHJ5W1wiYm9yZGVyQm94U2l6ZVwiXTtcbiAgICAgIGNvbnN0IGJvcmRlclNpemUgPSBBcnJheS5pc0FycmF5KGJvcmRlclNpemVFbnRyeSkgPyBib3JkZXJTaXplRW50cnlbMF0gOiBib3JkZXJTaXplRW50cnk7XG4gICAgICB3aWR0aCA9IGJvcmRlclNpemVbXCJpbmxpbmVTaXplXCJdO1xuICAgICAgaGVpZ2h0ID0gYm9yZGVyU2l6ZVtcImJsb2NrU2l6ZVwiXTtcbiAgICB9IGVsc2Uge1xuICAgICAgd2lkdGggPSBlbGVtZW50Lm9mZnNldFdpZHRoO1xuICAgICAgaGVpZ2h0ID0gZWxlbWVudC5vZmZzZXRIZWlnaHQ7XG4gICAgfVxuICAgIGNhbGxiYWNrKHsgd2lkdGgsIGhlaWdodCB9KTtcbiAgfSk7XG4gIG9ic2VydmVyLm9ic2VydmUoZWxlbWVudCwgeyBib3g6IFwiYm9yZGVyLWJveFwiIH0pO1xuICByZXR1cm4gKCkgPT4gb2JzZXJ2ZXIudW5vYnNlcnZlKGVsZW1lbnQpO1xufVxuXG4vLyBzcmMvdHJhY2stc2l6ZXMudHNcbmZ1bmN0aW9uIHRyYWNrRWxlbWVudHNTaXplKG9wdGlvbnMpIHtcbiAgY29uc3QgeyBnZXROb2Rlcywgb2JzZXJ2ZU11dGF0aW9uID0gdHJ1ZSwgY2FsbGJhY2sgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGNsZWFudXBzID0gW107XG4gIGxldCBmaXJzdE5vZGUgPSBudWxsO1xuICBmdW5jdGlvbiB0cmlnZ2VyKCkge1xuICAgIGNvbnN0IGVsZW1lbnRzID0gZ2V0Tm9kZXMoKTtcbiAgICBmaXJzdE5vZGUgPSBlbGVtZW50c1swXTtcbiAgICBjb25zdCBmbnMgPSBlbGVtZW50cy5tYXAoXG4gICAgICAoZWxlbWVudCwgaW5kZXgpID0+IHRyYWNrRWxlbWVudFNpemUoZWxlbWVudCwgKHNpemUpID0+IHtcbiAgICAgICAgY2FsbGJhY2soc2l6ZSwgaW5kZXgpO1xuICAgICAgfSlcbiAgICApO1xuICAgIGNsZWFudXBzLnB1c2goLi4uZm5zKTtcbiAgfVxuICB0cmlnZ2VyKCk7XG4gIGlmIChvYnNlcnZlTXV0YXRpb24pIHtcbiAgICBjb25zdCBmbiA9IHRyYWNrTXV0YXRpb24oZmlyc3ROb2RlLCB0cmlnZ2VyKTtcbiAgICBjbGVhbnVwcy5wdXNoKGZuKTtcbiAgfVxuICByZXR1cm4gKCkgPT4ge1xuICAgIGNsZWFudXBzLmZvckVhY2goKGNsZWFudXApID0+IHtcbiAgICAgIGNsZWFudXA/LigpO1xuICAgIH0pO1xuICB9O1xufVxuZnVuY3Rpb24gdHJhY2tNdXRhdGlvbihlbCwgY2IpIHtcbiAgaWYgKCFlbCB8fCAhZWwucGFyZW50RWxlbWVudCkgcmV0dXJuO1xuICBjb25zdCB3aW4gPSBlbC5vd25lckRvY3VtZW50Py5kZWZhdWx0VmlldyA/PyB3aW5kb3c7XG4gIGNvbnN0IG9ic2VydmVyID0gbmV3IHdpbi5NdXRhdGlvbk9ic2VydmVyKCgpID0+IHtcbiAgICBjYigpO1xuICB9KTtcbiAgb2JzZXJ2ZXIub2JzZXJ2ZShlbC5wYXJlbnRFbGVtZW50LCB7IGNoaWxkTGlzdDogdHJ1ZSB9KTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gIH07XG59XG5cbmV4cG9ydCB7IHRyYWNrRWxlbWVudFNpemUsIHRyYWNrRWxlbWVudHNTaXplIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/element-size/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/file-upload/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/file-upload/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/i18n-utils */ \"(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/file-utils */ \"(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/file-upload.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"file-upload\").parts(\n  \"root\",\n  \"dropzone\",\n  \"item\",\n  \"itemDeleteTrigger\",\n  \"itemGroup\",\n  \"itemName\",\n  \"itemPreview\",\n  \"itemPreviewImage\",\n  \"itemSizeText\",\n  \"label\",\n  \"trigger\",\n  \"clearTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `file:${ctx.id}`,\n  getDropzoneId: (ctx) => ctx.ids?.dropzone ?? `file:${ctx.id}:dropzone`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `file:${ctx.id}:input`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `file:${ctx.id}:trigger`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `file:${ctx.id}:label`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `file:${ctx.id}:item:${id}`,\n  getItemNameId: (ctx, id) => ctx.ids?.itemName?.(id) ?? `file:${ctx.id}:item-name:${id}`,\n  getItemSizeTextId: (ctx, id) => ctx.ids?.itemSizeText?.(id) ?? `file:${ctx.id}:item-size:${id}`,\n  getItemPreviewId: (ctx, id) => ctx.ids?.itemPreview?.(id) ?? `file:${ctx.id}:item-preview:${id}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  getDropzoneEl: (ctx) => dom.getById(ctx, dom.getDropzoneId(ctx))\n});\nfunction isEventWithFiles(event) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n  if (!event.dataTransfer) return !!target && \"files\" in target;\n  return event.dataTransfer.types.some((type) => {\n    return type === \"Files\" || type === \"application/x-moz-file\";\n  });\n}\nfunction isFilesWithinRange(ctx, incomingCount) {\n  if (!ctx.multiple && incomingCount > 1) return false;\n  if (!ctx.multiple && incomingCount + ctx.acceptedFiles.length === 2) return true;\n  if (incomingCount + ctx.acceptedFiles.length > ctx.maxFiles) return false;\n  return true;\n}\nfunction getFilesFromEvent(ctx, files) {\n  const acceptedFiles = [];\n  const rejectedFiles = [];\n  files.forEach((file) => {\n    const [accepted, acceptError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileType)(file, ctx.acceptAttr);\n    const [sizeMatch, sizeError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileSize)(file, ctx.minFileSize, ctx.maxFileSize);\n    const validateErrors = ctx.validate?.(file, {\n      acceptedFiles: ctx.acceptedFiles,\n      rejectedFiles: ctx.rejectedFiles\n    });\n    const valid = validateErrors ? validateErrors.length === 0 : true;\n    if (accepted && sizeMatch && valid) {\n      acceptedFiles.push(file);\n    } else {\n      const errors = [acceptError, sizeError];\n      if (!valid) errors.push(...validateErrors ?? []);\n      rejectedFiles.push({ file, errors: errors.filter(Boolean) });\n    }\n  });\n  if (!isFilesWithinRange(ctx, acceptedFiles.length)) {\n    acceptedFiles.forEach((file) => {\n      rejectedFiles.push({ file, errors: [\"TOO_MANY_FILES\"] });\n    });\n    acceptedFiles.splice(0);\n  }\n  return {\n    acceptedFiles,\n    rejectedFiles\n  };\n}\n\n// src/file-upload.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.disabled;\n  const allowDrop = state.context.allowDrop;\n  const translations = state.context.translations;\n  const dragging = state.matches(\"dragging\");\n  const focused = state.matches(\"focused\") && !disabled;\n  return {\n    dragging,\n    focused,\n    openFilePicker() {\n      send(\"OPEN\");\n    },\n    deleteFile(file) {\n      send({ type: \"FILE.DELETE\", file });\n    },\n    acceptedFiles: state.context.acceptedFiles,\n    rejectedFiles: state.context.rejectedFiles,\n    setFiles(files) {\n      const count = files.length;\n      send({ type: \"FILES.SET\", files, count });\n    },\n    clearRejectedFiles() {\n      send({ type: \"REJECTED_FILES.CLEAR\" });\n    },\n    clearFiles() {\n      send({ type: \"FILES.CLEAR\" });\n    },\n    getFileSize(file) {\n      return (0,_zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__.formatBytes)(file.size, state.context.locale);\n    },\n    createFileUrl(file, cb) {\n      const win = dom.getWin(state.context);\n      const url = win.URL.createObjectURL(file);\n      cb(url);\n      return () => win.URL.revokeObjectURL(url);\n    },\n    setClipboardFiles(dt) {\n      const items = Array.from(dt?.items ?? []);\n      const files = items.reduce((acc, item) => {\n        if (item.kind !== \"file\") return acc;\n        const file = item.getAsFile();\n        if (!file) return acc;\n        return [...acc, file];\n      }, []);\n      if (!files.length) return false;\n      send({ type: \"FILES.SET\", files });\n      return true;\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging)\n      });\n    },\n    getDropzoneProps() {\n      return normalize.element({\n        ...parts.dropzone.attrs,\n        dir: state.context.dir,\n        id: dom.getDropzoneId(state.context),\n        tabIndex: disabled ? void 0 : 0,\n        role: \"button\",\n        \"aria-label\": translations.dropzone,\n        \"aria-disabled\": disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (event.key !== \"Enter\" && event.key !== \" \") return;\n          send({ type: \"DROPZONE.CLICK\", src: \"keydown\" });\n        },\n        onClick(event) {\n          const isLabel = event.currentTarget.localName === \"label\";\n          if (isLabel) event.preventDefault();\n          send(\"DROPZONE.CLICK\");\n        },\n        onDragOver(event) {\n          if (!allowDrop) return;\n          event.preventDefault();\n          event.stopPropagation();\n          try {\n            event.dataTransfer.dropEffect = \"copy\";\n          } catch {\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (!hasFiles) return;\n          const count = event.dataTransfer.items.length;\n          send({ type: \"DROPZONE.DRAG_OVER\", count });\n        },\n        onDragLeave(event) {\n          if (!allowDrop || disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, event.relatedTarget)) return;\n          send({ type: \"DROPZONE.DRAG_LEAVE\" });\n        },\n        onDrop(event) {\n          if (allowDrop) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (disabled || !hasFiles) return;\n          send({ type: \"DROPZONE.DROP\", files: Array.from(event.dataTransfer.files) });\n        },\n        onFocus() {\n          send(\"DROPZONE.FOCUS\");\n        },\n        onBlur() {\n          send(\"DROPZONE.BLUR\");\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        type: \"button\",\n        onClick(event) {\n          if (disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(dom.getDropzoneEl(state.context), event.currentTarget)) {\n            event.stopPropagation();\n          }\n          send(\"OPEN\");\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        tabIndex: -1,\n        disabled,\n        type: \"file\",\n        required: state.context.required,\n        capture: state.context.capture,\n        name: state.context.name,\n        accept: state.context.acceptAttr,\n        webkitdirectory: state.context.directory ? \"\" : void 0,\n        multiple: state.context.multiple || state.context.maxFiles > 1,\n        onClick(event) {\n          event.stopPropagation();\n          event.currentTarget.value = \"\";\n        },\n        onChange(event) {\n          if (disabled) return;\n          const { files } = event.currentTarget;\n          send({ type: \"FILES.SET\", files: files ? Array.from(files) : [] });\n        },\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getItemGroupProps() {\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemNameProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemName.attrs,\n        dir: state.context.dir,\n        id: dom.getItemNameId(state.context, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemSizeTextProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemSizeText.attrs,\n        dir: state.context.dir,\n        id: dom.getItemSizeTextId(state.context, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemPreview.attrs,\n        dir: state.context.dir,\n        id: dom.getItemPreviewId(state.context, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewImageProps(props2) {\n      const { file, url } = props2;\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        throw new Error(\"Preview Image is only supported for image files\");\n      }\n      return normalize.img({\n        ...parts.itemPreviewImage.attrs,\n        alt: translations.itemPreview?.(file),\n        src: url,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemDeleteTriggerProps(props2) {\n      const { file } = props2;\n      return normalize.button({\n        ...parts.itemDeleteTrigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-label\": translations.deleteFile?.(file),\n        onClick() {\n          if (disabled) return;\n          send({ type: \"FILE.DELETE\", file });\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        disabled,\n        hidden: state.context.acceptedFiles.length === 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: \"FILES.CLEAR\" });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)(\n    {\n      id: \"fileupload\",\n      initial: \"idle\",\n      context: {\n        minFileSize: 0,\n        maxFileSize: Number.POSITIVE_INFINITY,\n        maxFiles: 1,\n        allowDrop: true,\n        accept: ctx.accept,\n        preventDocumentDrop: true,\n        ...ctx,\n        acceptedFiles: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]),\n        rejectedFiles: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]),\n        translations: {\n          dropzone: \"dropzone\",\n          itemPreview: (file) => `preview of ${file.name}`,\n          deleteFile: (file) => `delete file ${file.name}`,\n          ...ctx.translations\n        }\n      },\n      computed: {\n        acceptAttr: (ctx2) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.getAcceptAttrString)(ctx2.accept),\n        multiple: (ctx2) => ctx2.maxFiles > 1\n      },\n      watch: {\n        acceptedFiles: [\"syncInputElement\"]\n      },\n      on: {\n        \"FILES.SET\": {\n          actions: [\"setFilesFromEvent\"]\n        },\n        \"FILE.DELETE\": {\n          actions: [\"removeFile\"]\n        },\n        \"FILES.CLEAR\": {\n          actions: [\"clearFiles\"]\n        },\n        \"REJECTED_FILES.CLEAR\": {\n          actions: [\"clearRejectedFiles\"]\n        }\n      },\n      activities: [\"preventDocumentDrop\"],\n      states: {\n        idle: {\n          on: {\n            OPEN: {\n              actions: [\"openFilePicker\"]\n            },\n            \"DROPZONE.CLICK\": {\n              actions: [\"openFilePicker\"]\n            },\n            \"DROPZONE.FOCUS\": \"focused\",\n            \"DROPZONE.DRAG_OVER\": \"dragging\"\n          }\n        },\n        focused: {\n          on: {\n            \"DROPZONE.BLUR\": \"idle\",\n            OPEN: {\n              actions: [\"openFilePicker\"]\n            },\n            \"DROPZONE.CLICK\": {\n              actions: [\"openFilePicker\"]\n            },\n            \"DROPZONE.DRAG_OVER\": \"dragging\"\n          }\n        },\n        dragging: {\n          on: {\n            \"DROPZONE.DROP\": {\n              target: \"idle\",\n              actions: [\"setFilesFromEvent\"]\n            },\n            \"DROPZONE.DRAG_LEAVE\": \"idle\"\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        preventDocumentDrop(ctx2) {\n          if (!ctx2.preventDocumentDrop) return;\n          if (!ctx2.allowDrop) return;\n          if (ctx2.disabled) return;\n          const doc = dom.getDoc(ctx2);\n          const onDragOver = (event) => {\n            event?.preventDefault();\n          };\n          const onDrop = (event) => {\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(dom.getRootEl(ctx2), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event))) return;\n            event.preventDefault();\n          };\n          return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.callAll)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"dragover\", onDragOver, false), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"drop\", onDrop, false));\n        }\n      },\n      actions: {\n        syncInputElement(ctx2) {\n          queueMicrotask(() => {\n            const inputEl = dom.getHiddenInputEl(ctx2);\n            if (!inputEl) return;\n            const win = dom.getWin(ctx2);\n            const dataTransfer = new win.DataTransfer();\n            ctx2.acceptedFiles.forEach((v) => {\n              dataTransfer.items.add(v);\n            });\n            inputEl.files = dataTransfer.files;\n          });\n        },\n        openFilePicker(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getHiddenInputEl(ctx2)?.click();\n          });\n        },\n        setFilesFromEvent(ctx2, evt) {\n          const result = getFilesFromEvent(ctx2, evt.files);\n          const { acceptedFiles, rejectedFiles } = result;\n          if (ctx2.multiple) {\n            const files = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([...ctx2.acceptedFiles, ...acceptedFiles]);\n            set.files(ctx2, files, rejectedFiles);\n            return;\n          }\n          if (acceptedFiles.length) {\n            const files = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([acceptedFiles[0]]);\n            set.files(ctx2, files, rejectedFiles);\n          } else if (rejectedFiles.length) {\n            set.files(ctx2, ctx2.acceptedFiles, rejectedFiles);\n          }\n        },\n        removeFile(ctx2, evt) {\n          const nextFiles = ctx2.acceptedFiles.filter((file) => file !== evt.file);\n          ctx2.acceptedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)(nextFiles);\n          invoke.change(ctx2);\n        },\n        clearRejectedFiles(ctx2) {\n          ctx2.rejectedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]);\n          invoke.change(ctx2);\n        },\n        clearFiles(ctx2) {\n          ctx2.acceptedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]);\n          ctx2.rejectedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]);\n          invoke.change(ctx2);\n        }\n      },\n      compareFns: {\n        acceptedFiles: (a, b) => a.length === b.length && a.every((file, i) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file, b[i]))\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onFileChange?.({\n      acceptedFiles: ctx.acceptedFiles,\n      rejectedFiles: ctx.rejectedFiles\n    });\n  },\n  accept: (ctx) => {\n    ctx.onFileAccept?.({ files: ctx.acceptedFiles });\n  },\n  reject: (ctx) => {\n    ctx.onFileReject?.({ files: ctx.rejectedFiles });\n  }\n};\nvar set = {\n  files: (ctx, acceptedFiles, rejectedFiles) => {\n    ctx.acceptedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)(acceptedFiles);\n    invoke.accept(ctx);\n    if (rejectedFiles) {\n      ctx.rejectedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)(rejectedFiles);\n      invoke.reject(ctx);\n    }\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"accept\",\n  \"allowDrop\",\n  \"capture\",\n  \"dir\",\n  \"directory\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"locale\",\n  \"maxFiles\",\n  \"maxFileSize\",\n  \"minFileSize\",\n  \"name\",\n  \"invalid\",\n  \"onFileAccept\",\n  \"onFileReject\",\n  \"onFileChange\",\n  \"preventDocumentDrop\",\n  \"required\",\n  \"translations\",\n  \"validate\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"file\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/file-upload/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/file-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataURItoBlob: () => (/* binding */ dataURItoBlob),\n/* harmony export */   downloadFile: () => (/* binding */ downloadFile),\n/* harmony export */   getAcceptAttrString: () => (/* binding */ getAcceptAttrString),\n/* harmony export */   getFileDataUrl: () => (/* binding */ getFileDataUrl),\n/* harmony export */   getTotalFileSize: () => (/* binding */ getTotalFileSize),\n/* harmony export */   isFileEqual: () => (/* binding */ isFileEqual),\n/* harmony export */   isMSEdge: () => (/* binding */ isMSEdge),\n/* harmony export */   isValidFileSize: () => (/* binding */ isValidFileSize),\n/* harmony export */   isValidFileType: () => (/* binding */ isValidFileType)\n/* harmony export */ });\n// src/data-url-to-blob.ts\nfunction dataURItoBlob(uri) {\n  const binary = atob(uri.split(\",\")[1]);\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const buffer = new ArrayBuffer(binary.length);\n  const intArray = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i);\n  }\n  return new Blob([buffer], { type: mimeString });\n}\n\n// src/download-file.ts\nfunction isMSEdge(win) {\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob);\n}\nfunction downloadFile(options) {\n  const { file, win, type, name } = options;\n  const doc = win.document;\n  const obj = typeof file === \"string\" ? new Blob([file], { type }) : file;\n  const fileName = typeof file === \"string\" ? name : file instanceof File ? file.name : void 0;\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(obj, fileName || \"file-download\");\n    return;\n  }\n  const url = win.URL.createObjectURL(obj);\n  const anchor = doc.createElement(\"a\");\n  anchor.style.display = \"none\";\n  anchor.href = url;\n  anchor.rel = \"noopener\";\n  anchor.download = fileName || \"file-download\";\n  doc.documentElement.appendChild(anchor);\n  anchor.click();\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n    anchor.remove();\n  }, 0);\n}\n\n// src/get-accept-attr.ts\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\nvar isValidMIME = (v) => isMIMEType(v) || isExt(v);\nfunction getAcceptAttrString(accept) {\n  if (!accept) return;\n  if (typeof accept === \"string\") {\n    return accept;\n  }\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\");\n  }\n  return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter(isValidMIME).join(\",\");\n}\n\n// src/get-file-data-url.ts\nvar getFileDataUrl = async (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new Error(\"There was an error reading a file\"));\n    };\n    reader.onloadend = () => {\n      const { result } = reader;\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"));\n      } else {\n        resolve(result || void 0);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// src/get-total-file-size.ts\nvar getTotalFileSize = (files) => {\n  return files.reduce((acc, file) => acc + file.size, 0);\n};\n\n// src/is-file-equal.ts\nvar isFileEqual = (file1, file2) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type;\n};\n\n// src/is-valid-file-size.ts\nvar isDefined = (v) => v !== void 0 && v !== null;\nfunction isValidFileSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"];\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"];\n    }\n  }\n  return [true, null];\n}\n\n// src/is-valid-file-type.ts\nfunction isFileAccepted(file, accept) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : accept.split(\",\");\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return types.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      }\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isValidFileType(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept);\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9maWxlLXV0aWxzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0EsOEJBQThCLGtCQUFrQjtBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx3QkFBd0I7QUFDbEM7QUFDQSw0REFBNEQsTUFBTTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUoiLCJzb3VyY2VzIjpbIi9ob21lL3NhY2hhL0VwaXRlY2gvRy1FUEktMzAwLVJFTi0zLTEtcHJvamVjdHdlZWstbmF0aGFuLmplYW5ub3QvZnJvbnQvbm9kZV9tb2R1bGVzL0B6YWctanMvZmlsZS11dGlscy9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZGF0YS11cmwtdG8tYmxvYi50c1xuZnVuY3Rpb24gZGF0YVVSSXRvQmxvYih1cmkpIHtcbiAgY29uc3QgYmluYXJ5ID0gYXRvYih1cmkuc3BsaXQoXCIsXCIpWzFdKTtcbiAgY29uc3QgbWltZVN0cmluZyA9IHVyaS5zcGxpdChcIixcIilbMF0uc3BsaXQoXCI6XCIpWzFdLnNwbGl0KFwiO1wiKVswXTtcbiAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGJpbmFyeS5sZW5ndGgpO1xuICBjb25zdCBpbnRBcnJheSA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcik7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYmluYXJ5Lmxlbmd0aDsgaSsrKSB7XG4gICAgaW50QXJyYXlbaV0gPSBiaW5hcnkuY2hhckNvZGVBdChpKTtcbiAgfVxuICByZXR1cm4gbmV3IEJsb2IoW2J1ZmZlcl0sIHsgdHlwZTogbWltZVN0cmluZyB9KTtcbn1cblxuLy8gc3JjL2Rvd25sb2FkLWZpbGUudHNcbmZ1bmN0aW9uIGlzTVNFZGdlKHdpbikge1xuICByZXR1cm4gQm9vbGVhbih3aW4ubmF2aWdhdG9yICYmIHdpbi5uYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYik7XG59XG5mdW5jdGlvbiBkb3dubG9hZEZpbGUob3B0aW9ucykge1xuICBjb25zdCB7IGZpbGUsIHdpbiwgdHlwZSwgbmFtZSB9ID0gb3B0aW9ucztcbiAgY29uc3QgZG9jID0gd2luLmRvY3VtZW50O1xuICBjb25zdCBvYmogPSB0eXBlb2YgZmlsZSA9PT0gXCJzdHJpbmdcIiA/IG5ldyBCbG9iKFtmaWxlXSwgeyB0eXBlIH0pIDogZmlsZTtcbiAgY29uc3QgZmlsZU5hbWUgPSB0eXBlb2YgZmlsZSA9PT0gXCJzdHJpbmdcIiA/IG5hbWUgOiBmaWxlIGluc3RhbmNlb2YgRmlsZSA/IGZpbGUubmFtZSA6IHZvaWQgMDtcbiAgaWYgKGlzTVNFZGdlKHdpbikpIHtcbiAgICB3aW4ubmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2Iob2JqLCBmaWxlTmFtZSB8fCBcImZpbGUtZG93bmxvYWRcIik7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IHVybCA9IHdpbi5VUkwuY3JlYXRlT2JqZWN0VVJMKG9iaik7XG4gIGNvbnN0IGFuY2hvciA9IGRvYy5jcmVhdGVFbGVtZW50KFwiYVwiKTtcbiAgYW5jaG9yLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgYW5jaG9yLmhyZWYgPSB1cmw7XG4gIGFuY2hvci5yZWwgPSBcIm5vb3BlbmVyXCI7XG4gIGFuY2hvci5kb3dubG9hZCA9IGZpbGVOYW1lIHx8IFwiZmlsZS1kb3dubG9hZFwiO1xuICBkb2MuZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKGFuY2hvcik7XG4gIGFuY2hvci5jbGljaygpO1xuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICB3aW4uVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgIGFuY2hvci5yZW1vdmUoKTtcbiAgfSwgMCk7XG59XG5cbi8vIHNyYy9nZXQtYWNjZXB0LWF0dHIudHNcbmZ1bmN0aW9uIGlzTUlNRVR5cGUodikge1xuICByZXR1cm4gdiA9PT0gXCJhdWRpby8qXCIgfHwgdiA9PT0gXCJ2aWRlby8qXCIgfHwgdiA9PT0gXCJpbWFnZS8qXCIgfHwgdiA9PT0gXCJ0ZXh0LypcIiB8fCAvXFx3K1xcL1stKy5cXHddKy9nLnRlc3Qodik7XG59XG5mdW5jdGlvbiBpc0V4dCh2KSB7XG4gIHJldHVybiAvXi4qXFwuW1xcd10rJC8udGVzdCh2KTtcbn1cbnZhciBpc1ZhbGlkTUlNRSA9ICh2KSA9PiBpc01JTUVUeXBlKHYpIHx8IGlzRXh0KHYpO1xuZnVuY3Rpb24gZ2V0QWNjZXB0QXR0clN0cmluZyhhY2NlcHQpIHtcbiAgaWYgKCFhY2NlcHQpIHJldHVybjtcbiAgaWYgKHR5cGVvZiBhY2NlcHQgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gYWNjZXB0O1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KGFjY2VwdCkpIHtcbiAgICByZXR1cm4gYWNjZXB0LmZpbHRlcihpc1ZhbGlkTUlNRSkuam9pbihcIixcIik7XG4gIH1cbiAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGFjY2VwdCkucmVkdWNlKChhLCBbbWltZVR5cGUsIGV4dF0pID0+IFsuLi5hLCBtaW1lVHlwZSwgLi4uZXh0XSwgW10pLmZpbHRlcihpc1ZhbGlkTUlNRSkuam9pbihcIixcIik7XG59XG5cbi8vIHNyYy9nZXQtZmlsZS1kYXRhLXVybC50c1xudmFyIGdldEZpbGVEYXRhVXJsID0gYXN5bmMgKGZpbGUpID0+IHtcbiAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICByZWFkZXIub25lcnJvciA9ICgpID0+IHtcbiAgICAgIHJlYWRlci5hYm9ydCgpO1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIlRoZXJlIHdhcyBhbiBlcnJvciByZWFkaW5nIGEgZmlsZVwiKSk7XG4gICAgfTtcbiAgICByZWFkZXIub25sb2FkZW5kID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyByZXN1bHQgfSA9IHJlYWRlcjtcbiAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgICAgICByZWplY3QobmV3IEVycm9yKFwiRXhwZWN0ZWQgRGF0YVVSTCBhcyBzdHJpbmcgZnJvbSBCbG9iL0ZpbGUsIGdvdCBBcnJheUJ1ZmZlclwiKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXNvbHZlKHJlc3VsdCB8fCB2b2lkIDApO1xuICAgICAgfVxuICAgIH07XG4gICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gIH0pO1xufTtcblxuLy8gc3JjL2dldC10b3RhbC1maWxlLXNpemUudHNcbnZhciBnZXRUb3RhbEZpbGVTaXplID0gKGZpbGVzKSA9PiB7XG4gIHJldHVybiBmaWxlcy5yZWR1Y2UoKGFjYywgZmlsZSkgPT4gYWNjICsgZmlsZS5zaXplLCAwKTtcbn07XG5cbi8vIHNyYy9pcy1maWxlLWVxdWFsLnRzXG52YXIgaXNGaWxlRXF1YWwgPSAoZmlsZTEsIGZpbGUyKSA9PiB7XG4gIHJldHVybiBmaWxlMS5uYW1lID09PSBmaWxlMi5uYW1lICYmIGZpbGUxLnNpemUgPT09IGZpbGUyLnNpemUgJiYgZmlsZTEudHlwZSA9PT0gZmlsZTIudHlwZTtcbn07XG5cbi8vIHNyYy9pcy12YWxpZC1maWxlLXNpemUudHNcbnZhciBpc0RlZmluZWQgPSAodikgPT4gdiAhPT0gdm9pZCAwICYmIHYgIT09IG51bGw7XG5mdW5jdGlvbiBpc1ZhbGlkRmlsZVNpemUoZmlsZSwgbWluU2l6ZSwgbWF4U2l6ZSkge1xuICBpZiAoaXNEZWZpbmVkKGZpbGUuc2l6ZSkpIHtcbiAgICBpZiAoaXNEZWZpbmVkKG1pblNpemUpICYmIGlzRGVmaW5lZChtYXhTaXplKSkge1xuICAgICAgaWYgKGZpbGUuc2l6ZSA+IG1heFNpemUpIHJldHVybiBbZmFsc2UsIFwiRklMRV9UT09fTEFSR0VcIl07XG4gICAgICBpZiAoZmlsZS5zaXplIDwgbWluU2l6ZSkgcmV0dXJuIFtmYWxzZSwgXCJGSUxFX1RPT19TTUFMTFwiXTtcbiAgICB9IGVsc2UgaWYgKGlzRGVmaW5lZChtaW5TaXplKSAmJiBmaWxlLnNpemUgPCBtaW5TaXplKSB7XG4gICAgICByZXR1cm4gW2ZhbHNlLCBcIkZJTEVfVE9PX1NNQUxMXCJdO1xuICAgIH0gZWxzZSBpZiAoaXNEZWZpbmVkKG1heFNpemUpICYmIGZpbGUuc2l6ZSA+IG1heFNpemUpIHtcbiAgICAgIHJldHVybiBbZmFsc2UsIFwiRklMRV9UT09fTEFSR0VcIl07XG4gICAgfVxuICB9XG4gIHJldHVybiBbdHJ1ZSwgbnVsbF07XG59XG5cbi8vIHNyYy9pcy12YWxpZC1maWxlLXR5cGUudHNcbmZ1bmN0aW9uIGlzRmlsZUFjY2VwdGVkKGZpbGUsIGFjY2VwdCkge1xuICBpZiAoZmlsZSAmJiBhY2NlcHQpIHtcbiAgICBjb25zdCB0eXBlcyA9IEFycmF5LmlzQXJyYXkoYWNjZXB0KSA/IGFjY2VwdCA6IGFjY2VwdC5zcGxpdChcIixcIik7XG4gICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlLm5hbWUgfHwgXCJcIjtcbiAgICBjb25zdCBtaW1lVHlwZSA9IChmaWxlLnR5cGUgfHwgXCJcIikudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCBiYXNlTWltZVR5cGUgPSBtaW1lVHlwZS5yZXBsYWNlKC9cXC8uKiQvLCBcIlwiKTtcbiAgICByZXR1cm4gdHlwZXMuc29tZSgodHlwZSkgPT4ge1xuICAgICAgY29uc3QgdmFsaWRUeXBlID0gdHlwZS50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmICh2YWxpZFR5cGUuY2hhckF0KDApID09PSBcIi5cIikge1xuICAgICAgICByZXR1cm4gZmlsZU5hbWUudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCh2YWxpZFR5cGUpO1xuICAgICAgfVxuICAgICAgaWYgKHZhbGlkVHlwZS5lbmRzV2l0aChcIi8qXCIpKSB7XG4gICAgICAgIHJldHVybiBiYXNlTWltZVR5cGUgPT09IHZhbGlkVHlwZS5yZXBsYWNlKC9cXC8uKiQvLCBcIlwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtaW1lVHlwZSA9PT0gdmFsaWRUeXBlO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaXNWYWxpZEZpbGVUeXBlKGZpbGUsIGFjY2VwdCkge1xuICBjb25zdCBpc0FjY2VwdGFibGUgPSBmaWxlLnR5cGUgPT09IFwiYXBwbGljYXRpb24veC1tb3otZmlsZVwiIHx8IGlzRmlsZUFjY2VwdGVkKGZpbGUsIGFjY2VwdCk7XG4gIHJldHVybiBbaXNBY2NlcHRhYmxlLCBpc0FjY2VwdGFibGUgPyBudWxsIDogXCJGSUxFX0lOVkFMSURfVFlQRVwiXTtcbn1cblxuZXhwb3J0IHsgZGF0YVVSSXRvQmxvYiwgZG93bmxvYWRGaWxlLCBnZXRBY2NlcHRBdHRyU3RyaW5nLCBnZXRGaWxlRGF0YVVybCwgZ2V0VG90YWxGaWxlU2l6ZSwgaXNGaWxlRXF1YWwsIGlzTVNFZGdlLCBpc1ZhbGlkRmlsZVNpemUsIGlzVmFsaWRGaWxlVHlwZSB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/focus-trap/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusTrap: () => (/* binding */ FocusTrap),\n/* harmony export */   trapFocus: () => (/* binding */ trapFocus)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar activeFocusTraps = {\n  activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      const activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap(trapStack, trap) {\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar sharedTrapStack = [];\nvar FocusTrap = class {\n  constructor(elements, options) {\n    __publicField(this, \"trapStack\");\n    __publicField(this, \"config\");\n    __publicField(this, \"doc\");\n    __publicField(this, \"state\", {\n      containers: [],\n      containerGroups: [],\n      tabbableGroups: [],\n      nodeFocusedBeforeActivation: null,\n      mostRecentlyFocusedNode: null,\n      active: false,\n      paused: false,\n      delayInitialFocusTimer: void 0,\n      recentNavEvent: void 0\n    });\n    __publicField(this, \"listenerCleanups\", []);\n    __publicField(this, \"handleFocus\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      const targetContained = this.findContainerIndex(target, event) >= 0;\n      if (targetContained || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isDocument)(target)) {\n        if (targetContained) {\n          this.state.mostRecentlyFocusedNode = target;\n        }\n      } else {\n        event.stopImmediatePropagation();\n        let nextNode;\n        let navAcrossContainers = true;\n        if (this.state.mostRecentlyFocusedNode) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(this.state.mostRecentlyFocusedNode) > 0) {\n            const mruContainerIdx = this.findContainerIndex(this.state.mostRecentlyFocusedNode);\n            const { tabbableNodes } = this.state.containerGroups[mruContainerIdx];\n            if (tabbableNodes.length > 0) {\n              const mruTabIdx = tabbableNodes.findIndex((node) => node === this.state.mostRecentlyFocusedNode);\n              if (mruTabIdx >= 0) {\n                if (this.config.isKeyForward(this.state.recentNavEvent)) {\n                  if (mruTabIdx + 1 < tabbableNodes.length) {\n                    nextNode = tabbableNodes[mruTabIdx + 1];\n                    navAcrossContainers = false;\n                  }\n                } else {\n                  if (mruTabIdx - 1 >= 0) {\n                    nextNode = tabbableNodes[mruTabIdx - 1];\n                    navAcrossContainers = false;\n                  }\n                }\n              }\n            }\n          } else {\n            if (!this.state.containerGroups.some((g) => g.tabbableNodes.some((n) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(n) > 0))) {\n              navAcrossContainers = false;\n            }\n          }\n        } else {\n          navAcrossContainers = false;\n        }\n        if (navAcrossContainers) {\n          nextNode = this.findNextNavNode({\n            // move FROM the MRU node, not event-related node (which will be the node that is\n            //  outside the trap causing the focus escape we're trying to fix)\n            target: this.state.mostRecentlyFocusedNode,\n            isBackward: this.config.isKeyBackward(this.state.recentNavEvent)\n          });\n        }\n        if (nextNode) {\n          this.tryFocus(nextNode);\n        } else {\n          this.tryFocus(this.state.mostRecentlyFocusedNode || this.getInitialFocusNode());\n        }\n      }\n      this.state.recentNavEvent = void 0;\n    });\n    __publicField(this, \"handlePointerDown\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (this.findContainerIndex(target, event) >= 0) {\n        return;\n      }\n      if (valueOrHandler(this.config.clickOutsideDeactivates, event)) {\n        this.deactivate({ returnFocus: this.config.returnFocusOnDeactivate });\n        return;\n      }\n      if (valueOrHandler(this.config.allowOutsideClick, event)) {\n        return;\n      }\n      event.preventDefault();\n    });\n    __publicField(this, \"handleClick\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (this.findContainerIndex(target, event) >= 0) {\n        return;\n      }\n      if (valueOrHandler(this.config.clickOutsideDeactivates, event)) {\n        return;\n      }\n      if (valueOrHandler(this.config.allowOutsideClick, event)) {\n        return;\n      }\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    __publicField(this, \"handleTabKey\", (event) => {\n      if (this.config.isKeyForward(event) || this.config.isKeyBackward(event)) {\n        this.state.recentNavEvent = event;\n        const isBackward = this.config.isKeyBackward(event);\n        const destinationNode = this.findNextNavNode({ event, isBackward });\n        if (!destinationNode) return;\n        if (isTabEvent(event)) {\n          event.preventDefault();\n        }\n        this.tryFocus(destinationNode);\n      }\n    });\n    __publicField(this, \"handleEscapeKey\", (event) => {\n      if (isEscapeEvent(event) && valueOrHandler(this.config.escapeDeactivates, event) !== false) {\n        event.preventDefault();\n        this.deactivate();\n      }\n    });\n    __publicField(this, \"_mutationObserver\");\n    __publicField(this, \"setupMutationObserver\", () => {\n      const win = this.doc.defaultView || window;\n      this._mutationObserver = new win.MutationObserver((mutations) => {\n        const isFocusedNodeRemoved = mutations.some((mutation) => {\n          const removedNodes = Array.from(mutation.removedNodes);\n          return removedNodes.some((node) => node === this.state.mostRecentlyFocusedNode);\n        });\n        if (isFocusedNodeRemoved) {\n          this.tryFocus(this.getInitialFocusNode());\n        }\n      });\n    });\n    __publicField(this, \"updateObservedNodes\", () => {\n      this._mutationObserver?.disconnect();\n      if (this.state.active && !this.state.paused) {\n        this.state.containers.map((container) => {\n          this._mutationObserver?.observe(container, { subtree: true, childList: true });\n        });\n      }\n    });\n    __publicField(this, \"getInitialFocusNode\", () => {\n      let node = this.getNodeForOption(\"initialFocus\", { hasFallback: true });\n      if (node === false) {\n        return false;\n      }\n      if (node === void 0 || node && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(node)) {\n        if (this.findContainerIndex(this.doc.activeElement) >= 0) {\n          node = this.doc.activeElement;\n        } else {\n          const firstTabbableGroup = this.state.tabbableGroups[0];\n          const firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n          node = firstTabbableNode || this.getNodeForOption(\"fallbackFocus\");\n        }\n      } else if (node === null) {\n        node = this.getNodeForOption(\"fallbackFocus\");\n      }\n      if (!node) {\n        throw new Error(\"Your focus-trap needs to have at least one focusable element\");\n      }\n      if (!node.isConnected) {\n        node = this.getNodeForOption(\"fallbackFocus\");\n      }\n      return node;\n    });\n    __publicField(this, \"tryFocus\", (node) => {\n      if (node === false) return;\n      if (node === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getActiveElement)(this.doc)) return;\n      if (!node || !node.focus) {\n        this.tryFocus(this.getInitialFocusNode());\n        return;\n      }\n      node.focus({ preventScroll: !!this.config.preventScroll });\n      this.state.mostRecentlyFocusedNode = node;\n      if (isSelectableInput(node)) {\n        node.select();\n      }\n    });\n    __publicField(this, \"deactivate\", (deactivateOptions) => {\n      if (!this.state.active) return this;\n      const options = {\n        onDeactivate: this.config.onDeactivate,\n        onPostDeactivate: this.config.onPostDeactivate,\n        checkCanReturnFocus: this.config.checkCanReturnFocus,\n        ...deactivateOptions\n      };\n      clearTimeout(this.state.delayInitialFocusTimer);\n      this.state.delayInitialFocusTimer = void 0;\n      this.removeListeners();\n      this.state.active = false;\n      this.state.paused = false;\n      this.updateObservedNodes();\n      activeFocusTraps.deactivateTrap(this.trapStack, this);\n      const onDeactivate = this.getOption(options, \"onDeactivate\");\n      const onPostDeactivate = this.getOption(options, \"onPostDeactivate\");\n      const checkCanReturnFocus = this.getOption(options, \"checkCanReturnFocus\");\n      const returnFocus = this.getOption(options, \"returnFocus\", \"returnFocusOnDeactivate\");\n      onDeactivate?.();\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            const returnFocusNode = this.getReturnFocusNode(this.state.nodeFocusedBeforeActivation);\n            this.tryFocus(returnFocusNode);\n          }\n          onPostDeactivate?.();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        const returnFocusNode = this.getReturnFocusNode(this.state.nodeFocusedBeforeActivation);\n        checkCanReturnFocus(returnFocusNode).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    });\n    __publicField(this, \"pause\", (pauseOptions) => {\n      if (this.state.paused || !this.state.active) {\n        return this;\n      }\n      const onPause = this.getOption(pauseOptions, \"onPause\");\n      const onPostPause = this.getOption(pauseOptions, \"onPostPause\");\n      this.state.paused = true;\n      onPause?.();\n      this.removeListeners();\n      this.updateObservedNodes();\n      onPostPause?.();\n      return this;\n    });\n    __publicField(this, \"unpause\", (unpauseOptions) => {\n      if (!this.state.paused || !this.state.active) {\n        return this;\n      }\n      const onUnpause = this.getOption(unpauseOptions, \"onUnpause\");\n      const onPostUnpause = this.getOption(unpauseOptions, \"onPostUnpause\");\n      this.state.paused = false;\n      onUnpause?.();\n      this.updateTabbableNodes();\n      this.addListeners();\n      this.updateObservedNodes();\n      onPostUnpause?.();\n      return this;\n    });\n    __publicField(this, \"updateContainerElements\", (containerElements) => {\n      this.state.containers = Array.isArray(containerElements) ? containerElements.filter(Boolean) : [containerElements].filter(Boolean);\n      if (this.state.active) {\n        this.updateTabbableNodes();\n      }\n      this.updateObservedNodes();\n      return this;\n    });\n    __publicField(this, \"getReturnFocusNode\", (previousActiveElement) => {\n      const node = this.getNodeForOption(\"setReturnFocus\", {\n        params: [previousActiveElement]\n      });\n      return node ? node : node === false ? false : previousActiveElement;\n    });\n    __publicField(this, \"getOption\", (configOverrideOptions, optionName, configOptionName) => {\n      return configOverrideOptions && configOverrideOptions[optionName] !== void 0 ? configOverrideOptions[optionName] : (\n        // @ts-expect-error\n        this.config[configOptionName || optionName]\n      );\n    });\n    __publicField(this, \"getNodeForOption\", (optionName, { hasFallback = false, params = [] } = {}) => {\n      let optionValue = this.config[optionName];\n      if (typeof optionValue === \"function\") optionValue = optionValue(...params);\n      if (optionValue === true) optionValue = void 0;\n      if (!optionValue) {\n        if (optionValue === void 0 || optionValue === false) {\n          return optionValue;\n        }\n        throw new Error(`\\`${optionName}\\` was specified but was not a node, or did not return a node`);\n      }\n      let node = optionValue;\n      if (typeof optionValue === \"string\") {\n        try {\n          node = this.doc.querySelector(optionValue);\n        } catch (err) {\n          throw new Error(`\\`${optionName}\\` appears to be an invalid selector; error=\"${err.message}\"`);\n        }\n        if (!node) {\n          if (!hasFallback) {\n            throw new Error(`\\`${optionName}\\` as selector refers to no known node`);\n          }\n        }\n      }\n      return node;\n    });\n    __publicField(this, \"findNextNavNode\", (opts) => {\n      const { event, isBackward = false } = opts;\n      const target = opts.target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      this.updateTabbableNodes();\n      let destinationNode = null;\n      if (this.state.tabbableGroups.length > 0) {\n        const containerIndex = this.findContainerIndex(target, event);\n        const containerGroup = containerIndex >= 0 ? this.state.containerGroups[containerIndex] : void 0;\n        if (containerIndex < 0) {\n          if (isBackward) {\n            destinationNode = this.state.tabbableGroups[this.state.tabbableGroups.length - 1].lastTabbableNode;\n          } else {\n            destinationNode = this.state.tabbableGroups[0].firstTabbableNode;\n          }\n        } else if (isBackward) {\n          let startOfGroupIndex = this.state.tabbableGroups.findIndex(\n            ({ firstTabbableNode }) => target === firstTabbableNode\n          );\n          if (startOfGroupIndex < 0 && (containerGroup?.container === target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target) && !containerGroup?.nextTabbableNode(target, false))) {\n            startOfGroupIndex = containerIndex;\n          }\n          if (startOfGroupIndex >= 0) {\n            const destinationGroupIndex = startOfGroupIndex === 0 ? this.state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n            const destinationGroup = this.state.tabbableGroups[destinationGroupIndex];\n            destinationNode = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n          } else if (!isTabEvent(event)) {\n            destinationNode = containerGroup?.nextTabbableNode(target, false);\n          }\n        } else {\n          let lastOfGroupIndex = this.state.tabbableGroups.findIndex(\n            ({ lastTabbableNode }) => target === lastTabbableNode\n          );\n          if (lastOfGroupIndex < 0 && (containerGroup?.container === target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target) && !containerGroup?.nextTabbableNode(target))) {\n            lastOfGroupIndex = containerIndex;\n          }\n          if (lastOfGroupIndex >= 0) {\n            const destinationGroupIndex = lastOfGroupIndex === this.state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n            const destinationGroup = this.state.tabbableGroups[destinationGroupIndex];\n            destinationNode = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(target) >= 0 ? destinationGroup.firstTabbableNode : destinationGroup.firstDomTabbableNode;\n          } else if (!isTabEvent(event)) {\n            destinationNode = containerGroup?.nextTabbableNode(target);\n          }\n        }\n      } else {\n        destinationNode = this.getNodeForOption(\"fallbackFocus\");\n      }\n      return destinationNode;\n    });\n    this.trapStack = options.trapStack || sharedTrapStack;\n    const config = {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true,\n      delayInitialFocus: true,\n      isKeyForward(e) {\n        return isTabEvent(e) && !e.shiftKey;\n      },\n      isKeyBackward(e) {\n        return isTabEvent(e) && e.shiftKey;\n      },\n      ...options\n    };\n    this.doc = config.document || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(Array.isArray(elements) ? elements[0] : elements);\n    this.config = config;\n    this.updateContainerElements(elements);\n    this.setupMutationObserver();\n  }\n  get active() {\n    return this.state.active;\n  }\n  get paused() {\n    return this.state.paused;\n  }\n  findContainerIndex(element, event) {\n    const composedPath = typeof event?.composedPath === \"function\" ? event.composedPath() : void 0;\n    return this.state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) => container.contains(element) || composedPath?.includes(container) || tabbableNodes.find((node) => node === element)\n    );\n  }\n  updateTabbableNodes() {\n    this.state.containerGroups = this.state.containers.map((container) => {\n      const tabbableNodes = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabbables)(container);\n      const focusableNodes = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getFocusables)(container);\n      const firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : void 0;\n      const lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : void 0;\n      const firstDomTabbableNode = focusableNodes.find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(node));\n      const lastDomTabbableNode = focusableNodes.slice().reverse().find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(node));\n      const posTabIndexesFound = !!tabbableNodes.find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(node) > 0);\n      function nextTabbableNode(node, forward = true) {\n        const nodeIdx = tabbableNodes.indexOf(node);\n        if (nodeIdx < 0) {\n          if (forward) {\n            return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(el));\n          }\n          return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(el));\n        }\n        return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n      }\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n        posTabIndexesFound,\n        firstTabbableNode,\n        lastTabbableNode,\n        firstDomTabbableNode,\n        lastDomTabbableNode,\n        nextTabbableNode\n      };\n    });\n    this.state.tabbableGroups = this.state.containerGroups.filter((group) => group.tabbableNodes.length > 0);\n    if (this.state.tabbableGroups.length <= 0 && !this.getNodeForOption(\"fallbackFocus\")) {\n      throw new Error(\n        \"Your focus-trap must have at least one container with at least one tabbable node in it at all times\"\n      );\n    }\n    if (this.state.containerGroups.find((g) => g.posTabIndexesFound) && this.state.containerGroups.length > 1) {\n      throw new Error(\n        \"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\"\n      );\n    }\n  }\n  addListeners() {\n    if (!this.state.active) return;\n    activeFocusTraps.activateTrap(this.trapStack, this);\n    this.state.delayInitialFocusTimer = this.config.delayInitialFocus ? delay(() => {\n      this.tryFocus(this.getInitialFocusNode());\n    }) : this.tryFocus(this.getInitialFocusNode());\n    this.listenerCleanups.push(\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"focusin\", this.handleFocus, true),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"mousedown\", this.handlePointerDown, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"touchstart\", this.handlePointerDown, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"click\", this.handleClick, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"keydown\", this.handleTabKey, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"keydown\", this.handleEscapeKey)\n    );\n    return this;\n  }\n  removeListeners() {\n    if (!this.state.active) return;\n    this.listenerCleanups.forEach((cleanup) => cleanup());\n    this.listenerCleanups = [];\n    return this;\n  }\n  activate(activateOptions) {\n    if (this.state.active) {\n      return this;\n    }\n    const onActivate = this.getOption(activateOptions, \"onActivate\");\n    const onPostActivate = this.getOption(activateOptions, \"onPostActivate\");\n    const checkCanFocusTrap = this.getOption(activateOptions, \"checkCanFocusTrap\");\n    if (!checkCanFocusTrap) {\n      this.updateTabbableNodes();\n    }\n    this.state.active = true;\n    this.state.paused = false;\n    this.state.nodeFocusedBeforeActivation = this.doc.activeElement || null;\n    onActivate?.();\n    const finishActivation = () => {\n      if (checkCanFocusTrap) {\n        this.updateTabbableNodes();\n      }\n      this.addListeners();\n      this.updateObservedNodes();\n      onPostActivate?.();\n    };\n    if (checkCanFocusTrap) {\n      checkCanFocusTrap(this.state.containers.concat()).then(finishActivation, finishActivation);\n      return this;\n    }\n    finishActivation();\n    return this;\n  }\n};\nvar isTabEvent = (event) => event.key === \"Tab\";\nvar valueOrHandler = (value, ...params) => typeof value === \"function\" ? value(...params) : value;\nvar isEscapeEvent = (event) => !event.isComposing && event.key === \"Escape\";\nvar delay = (fn) => setTimeout(fn, 0);\nvar isSelectableInput = (node) => node.localName === \"input\" && \"select\" in node && typeof node.select === \"function\";\n\n// src/index.ts\nfunction trapFocus(el, options = {}) {\n  let trap;\n  const cleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf)(() => {\n    const contentEl = typeof el === \"function\" ? el() : el;\n    if (!contentEl) return;\n    trap = new FocusTrap(contentEl, {\n      escapeDeactivates: false,\n      allowOutsideClick: true,\n      preventScroll: true,\n      returnFocusOnDeactivate: true,\n      delayInitialFocus: false,\n      fallbackFocus: contentEl,\n      ...options,\n      document: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(contentEl)\n    });\n    try {\n      trap.activate();\n    } catch {\n    }\n  });\n  return function destroy() {\n    trap?.deactivate();\n    cleanup();\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/focus-visible/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInteractionModality: () => (/* binding */ getInteractionModality),\n/* harmony export */   isFocusVisible: () => (/* binding */ isFocusVisible),\n/* harmony export */   listenerMap: () => (/* binding */ listenerMap),\n/* harmony export */   setInteractionModality: () => (/* binding */ setInteractionModality),\n/* harmony export */   trackFocusVisible: () => (/* binding */ trackFocusVisible),\n/* harmony export */   trackInteractionModality: () => (/* binding */ trackInteractionModality)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/index.ts\nfunction isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted) return true;\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isValidKey(e) {\n  return !(e.metaKey || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isMac)() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nvar nonTextInputTypes = /* @__PURE__ */ new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction isKeyboardFocusEvent(isTextInput, modality, e) {\n  const target = e ? (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(e) : null;\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(target);\n  isTextInput = isTextInput || target instanceof win.HTMLInputElement && !nonTextInputTypes.has(target?.type) || target instanceof win.HTMLTextAreaElement || target instanceof win.HTMLElement && target.isContentEditable;\n  return !(isTextInput && modality === \"keyboard\" && e instanceof win.KeyboardEvent && !Reflect.has(FOCUS_VISIBLE_INPUT_KEYS, e.key));\n}\nvar currentModality = null;\nvar changeHandlers = /* @__PURE__ */ new Set();\nvar listenerMap = /* @__PURE__ */ new Map();\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction triggerChangeHandlers(modality, e) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\nfunction handleKeyboardEvent(e) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = \"keyboard\";\n    triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction handlePointerEvent(e) {\n  currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction handleClickEvent(e) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = \"virtual\";\n  }\n}\nfunction handleFocusEvent(e) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(e);\n  if (target === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(target) || target === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(target)) {\n    return;\n  }\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", e);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\nfunction handleWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\nfunction setupGlobalFocusEvents(root) {\n  if (typeof window === \"undefined\" || listenerMap.get((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root))) {\n    return;\n  }\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(root);\n  let focus = win.HTMLElement.prototype.focus;\n  win.HTMLElement.prototype.focus = function() {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", null);\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n  doc.addEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.addEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.addEventListener(\"click\", handleClickEvent, true);\n  win.addEventListener(\"focus\", handleFocusEvent, true);\n  win.addEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.addEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.addEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.addEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.addEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.addEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.addEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  win.addEventListener(\n    \"beforeunload\",\n    () => {\n      tearDownWindowFocusTracking(root);\n    },\n    { once: true }\n  );\n  listenerMap.set(win, { focus });\n}\nvar tearDownWindowFocusTracking = (root, loadListener) => {\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(root);\n  if (!listenerMap.has(win)) {\n    return;\n  }\n  win.HTMLElement.prototype.focus = listenerMap.get(win).focus;\n  doc.removeEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"click\", handleClickEvent, true);\n  win.removeEventListener(\"focus\", handleFocusEvent, true);\n  win.removeEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.removeEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.removeEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.removeEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.removeEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  listenerMap.delete(win);\n};\nfunction getInteractionModality() {\n  return currentModality;\n}\nfunction setInteractionModality(modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\nfunction trackInteractionModality(props) {\n  const { onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange({ modality: currentModality });\n  const handler = () => onChange({ modality: currentModality });\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\nfunction isFocusVisible() {\n  return currentModality === \"keyboard\";\n}\nfunction trackFocusVisible(props = {}) {\n  const { isTextInput, autoFocus, onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange?.({ isFocusVisible: autoFocus || isFocusVisible(), modality: currentModality });\n  const handler = (modality, e) => {\n    if (!isKeyboardFocusEvent(!!isTextInput, modality, e)) return;\n    onChange?.({ isFocusVisible: isFocusVisible(), modality });\n  };\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/form-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dispatchInputCheckedEvent: () => (/* binding */ dispatchInputCheckedEvent),\n/* harmony export */   dispatchInputValueEvent: () => (/* binding */ dispatchInputValueEvent),\n/* harmony export */   getClosestForm: () => (/* binding */ getClosestForm),\n/* harmony export */   isNativeDisabled: () => (/* binding */ isNativeDisabled),\n/* harmony export */   setElementChecked: () => (/* binding */ setElementChecked),\n/* harmony export */   setElementValue: () => (/* binding */ setElementValue),\n/* harmony export */   trackFormControl: () => (/* binding */ trackFormControl)\n/* harmony export */ });\n// src/input-event.ts\nvar getWindow = (el) => el.ownerDocument.defaultView || window;\nfunction getDescriptor(el, options) {\n  const { type = \"HTMLInputElement\", property = \"value\" } = options;\n  const proto = getWindow(el)[type].prototype;\n  return Object.getOwnPropertyDescriptor(proto, property) ?? {};\n}\nfunction setElementValue(el, value, option = {}) {\n  const descriptor = getDescriptor(el, option);\n  descriptor.set?.call(el, value);\n  el.setAttribute(\"value\", value);\n}\nfunction setElementChecked(el, checked) {\n  const descriptor = getDescriptor(el, { type: \"HTMLInputElement\", property: \"checked\" });\n  descriptor.set?.call(el, checked);\n  if (checked) el.setAttribute(\"checked\", \"\");\n  else el.removeAttribute(\"checked\");\n}\nfunction dispatchInputValueEvent(el, options) {\n  const { value, bubbles = true } = options;\n  if (!el) return;\n  const win = getWindow(el);\n  if (!(el instanceof win.HTMLInputElement)) return;\n  setElementValue(el, `${value}`);\n  el.dispatchEvent(new win.Event(\"input\", { bubbles }));\n}\nfunction dispatchInputCheckedEvent(el, options) {\n  const { checked, bubbles = true } = options;\n  if (!el) return;\n  const win = getWindow(el);\n  if (!(el instanceof win.HTMLInputElement)) return;\n  setElementChecked(el, checked);\n  el.dispatchEvent(new win.Event(\"click\", { bubbles }));\n}\n\n// src/form.ts\nfunction getClosestForm(el) {\n  if (isFormElement(el)) return el.form;\n  else return el.closest(\"form\");\n}\nfunction isFormElement(el) {\n  return el.matches(\"textarea, input, select, button\");\n}\nfunction trackFormReset(el, callback) {\n  if (!el) return;\n  const form = getClosestForm(el);\n  form?.addEventListener(\"reset\", callback, { passive: true });\n  return () => {\n    form?.removeEventListener(\"reset\", callback);\n  };\n}\nfunction trackFieldsetDisabled(el, callback) {\n  const fieldset = el?.closest(\"fieldset\");\n  if (!fieldset) return;\n  callback(fieldset.disabled);\n  const win = fieldset.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver(() => callback(fieldset.disabled));\n  obs.observe(fieldset, {\n    attributes: true,\n    attributeFilter: [\"disabled\"]\n  });\n  return () => obs.disconnect();\n}\nfunction isNativeDisabled(el) {\n  return el.matches(\":disabled\");\n}\nfunction trackFormControl(el, options) {\n  if (!el) return;\n  const { onFieldsetDisabledChange, onFormReset } = options;\n  const cleanups = [trackFormReset(el, onFormReset), trackFieldsetDisabled(el, onFieldsetDisabledChange)];\n  return () => {\n    cleanups.forEach((cleanup) => cleanup?.());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9mb3JtLXV0aWxzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGdEQUFnRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywrQ0FBK0M7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0JBQXdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixNQUFNO0FBQy9CLDRDQUE0QyxTQUFTO0FBQ3JEO0FBQ0E7QUFDQSxVQUFVLDBCQUEwQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxTQUFTO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsZUFBZTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0NBQXdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNKIiwic291cmNlcyI6WyIvaG9tZS9zYWNoYS9FcGl0ZWNoL0ctRVBJLTMwMC1SRU4tMy0xLXByb2plY3R3ZWVrLW5hdGhhbi5qZWFubm90L2Zyb250L25vZGVfbW9kdWxlcy9AemFnLWpzL2Zvcm0tdXRpbHMvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2lucHV0LWV2ZW50LnRzXG52YXIgZ2V0V2luZG93ID0gKGVsKSA9PiBlbC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IHx8IHdpbmRvdztcbmZ1bmN0aW9uIGdldERlc2NyaXB0b3IoZWwsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyB0eXBlID0gXCJIVE1MSW5wdXRFbGVtZW50XCIsIHByb3BlcnR5ID0gXCJ2YWx1ZVwiIH0gPSBvcHRpb25zO1xuICBjb25zdCBwcm90byA9IGdldFdpbmRvdyhlbClbdHlwZV0ucHJvdG90eXBlO1xuICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihwcm90bywgcHJvcGVydHkpID8/IHt9O1xufVxuZnVuY3Rpb24gc2V0RWxlbWVudFZhbHVlKGVsLCB2YWx1ZSwgb3B0aW9uID0ge30pIHtcbiAgY29uc3QgZGVzY3JpcHRvciA9IGdldERlc2NyaXB0b3IoZWwsIG9wdGlvbik7XG4gIGRlc2NyaXB0b3Iuc2V0Py5jYWxsKGVsLCB2YWx1ZSk7XG4gIGVsLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIHZhbHVlKTtcbn1cbmZ1bmN0aW9uIHNldEVsZW1lbnRDaGVja2VkKGVsLCBjaGVja2VkKSB7XG4gIGNvbnN0IGRlc2NyaXB0b3IgPSBnZXREZXNjcmlwdG9yKGVsLCB7IHR5cGU6IFwiSFRNTElucHV0RWxlbWVudFwiLCBwcm9wZXJ0eTogXCJjaGVja2VkXCIgfSk7XG4gIGRlc2NyaXB0b3Iuc2V0Py5jYWxsKGVsLCBjaGVja2VkKTtcbiAgaWYgKGNoZWNrZWQpIGVsLnNldEF0dHJpYnV0ZShcImNoZWNrZWRcIiwgXCJcIik7XG4gIGVsc2UgZWwucmVtb3ZlQXR0cmlidXRlKFwiY2hlY2tlZFwiKTtcbn1cbmZ1bmN0aW9uIGRpc3BhdGNoSW5wdXRWYWx1ZUV2ZW50KGVsLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgdmFsdWUsIGJ1YmJsZXMgPSB0cnVlIH0gPSBvcHRpb25zO1xuICBpZiAoIWVsKSByZXR1cm47XG4gIGNvbnN0IHdpbiA9IGdldFdpbmRvdyhlbCk7XG4gIGlmICghKGVsIGluc3RhbmNlb2Ygd2luLkhUTUxJbnB1dEVsZW1lbnQpKSByZXR1cm47XG4gIHNldEVsZW1lbnRWYWx1ZShlbCwgYCR7dmFsdWV9YCk7XG4gIGVsLmRpc3BhdGNoRXZlbnQobmV3IHdpbi5FdmVudChcImlucHV0XCIsIHsgYnViYmxlcyB9KSk7XG59XG5mdW5jdGlvbiBkaXNwYXRjaElucHV0Q2hlY2tlZEV2ZW50KGVsLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgY2hlY2tlZCwgYnViYmxlcyA9IHRydWUgfSA9IG9wdGlvbnM7XG4gIGlmICghZWwpIHJldHVybjtcbiAgY29uc3Qgd2luID0gZ2V0V2luZG93KGVsKTtcbiAgaWYgKCEoZWwgaW5zdGFuY2VvZiB3aW4uSFRNTElucHV0RWxlbWVudCkpIHJldHVybjtcbiAgc2V0RWxlbWVudENoZWNrZWQoZWwsIGNoZWNrZWQpO1xuICBlbC5kaXNwYXRjaEV2ZW50KG5ldyB3aW4uRXZlbnQoXCJjbGlja1wiLCB7IGJ1YmJsZXMgfSkpO1xufVxuXG4vLyBzcmMvZm9ybS50c1xuZnVuY3Rpb24gZ2V0Q2xvc2VzdEZvcm0oZWwpIHtcbiAgaWYgKGlzRm9ybUVsZW1lbnQoZWwpKSByZXR1cm4gZWwuZm9ybTtcbiAgZWxzZSByZXR1cm4gZWwuY2xvc2VzdChcImZvcm1cIik7XG59XG5mdW5jdGlvbiBpc0Zvcm1FbGVtZW50KGVsKSB7XG4gIHJldHVybiBlbC5tYXRjaGVzKFwidGV4dGFyZWEsIGlucHV0LCBzZWxlY3QsIGJ1dHRvblwiKTtcbn1cbmZ1bmN0aW9uIHRyYWNrRm9ybVJlc2V0KGVsLCBjYWxsYmFjaykge1xuICBpZiAoIWVsKSByZXR1cm47XG4gIGNvbnN0IGZvcm0gPSBnZXRDbG9zZXN0Rm9ybShlbCk7XG4gIGZvcm0/LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNldFwiLCBjYWxsYmFjaywgeyBwYXNzaXZlOiB0cnVlIH0pO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGZvcm0/LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNldFwiLCBjYWxsYmFjayk7XG4gIH07XG59XG5mdW5jdGlvbiB0cmFja0ZpZWxkc2V0RGlzYWJsZWQoZWwsIGNhbGxiYWNrKSB7XG4gIGNvbnN0IGZpZWxkc2V0ID0gZWw/LmNsb3Nlc3QoXCJmaWVsZHNldFwiKTtcbiAgaWYgKCFmaWVsZHNldCkgcmV0dXJuO1xuICBjYWxsYmFjayhmaWVsZHNldC5kaXNhYmxlZCk7XG4gIGNvbnN0IHdpbiA9IGZpZWxkc2V0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICBjb25zdCBvYnMgPSBuZXcgd2luLk11dGF0aW9uT2JzZXJ2ZXIoKCkgPT4gY2FsbGJhY2soZmllbGRzZXQuZGlzYWJsZWQpKTtcbiAgb2JzLm9ic2VydmUoZmllbGRzZXQsIHtcbiAgICBhdHRyaWJ1dGVzOiB0cnVlLFxuICAgIGF0dHJpYnV0ZUZpbHRlcjogW1wiZGlzYWJsZWRcIl1cbiAgfSk7XG4gIHJldHVybiAoKSA9PiBvYnMuZGlzY29ubmVjdCgpO1xufVxuZnVuY3Rpb24gaXNOYXRpdmVEaXNhYmxlZChlbCkge1xuICByZXR1cm4gZWwubWF0Y2hlcyhcIjpkaXNhYmxlZFwiKTtcbn1cbmZ1bmN0aW9uIHRyYWNrRm9ybUNvbnRyb2woZWwsIG9wdGlvbnMpIHtcbiAgaWYgKCFlbCkgcmV0dXJuO1xuICBjb25zdCB7IG9uRmllbGRzZXREaXNhYmxlZENoYW5nZSwgb25Gb3JtUmVzZXQgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGNsZWFudXBzID0gW3RyYWNrRm9ybVJlc2V0KGVsLCBvbkZvcm1SZXNldCksIHRyYWNrRmllbGRzZXREaXNhYmxlZChlbCwgb25GaWVsZHNldERpc2FibGVkQ2hhbmdlKV07XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY2xlYW51cHMuZm9yRWFjaCgoY2xlYW51cCkgPT4gY2xlYW51cD8uKCkpO1xuICB9O1xufVxuXG5leHBvcnQgeyBkaXNwYXRjaElucHV0Q2hlY2tlZEV2ZW50LCBkaXNwYXRjaElucHV0VmFsdWVFdmVudCwgZ2V0Q2xvc2VzdEZvcm0sIGlzTmF0aXZlRGlzYWJsZWQsIHNldEVsZW1lbnRDaGVja2VkLCBzZXRFbGVtZW50VmFsdWUsIHRyYWNrRm9ybUNvbnRyb2wgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/hover-card/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/hover-card/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/hover-card.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"hoverCard\").parts(\"arrow\", \"arrowTip\", \"trigger\", \"positioner\", \"content\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `hover-card:${ctx.id}:trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `hover-card:${ctx.id}:content`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `hover-card:${ctx.id}:popper`,\n  getArrowId: (ctx) => ctx.ids?.arrow ?? `hover-card:${ctx.id}:arrow`,\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx))\n});\n\n// src/hover-card.connect.ts\nfunction connect(state, send, normalize) {\n  const open = state.hasTag(\"open\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getTriggerProps() {\n      return normalize.element({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        \"data-placement\": state.context.currentPlacement,\n        id: dom.getTriggerId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerEnter(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_ENTER\", src: \"trigger\" });\n        },\n        onPointerLeave(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_LEAVE\", src: \"trigger\" });\n        },\n        onFocus() {\n          send(\"TRIGGER_FOCUS\");\n        },\n        onBlur() {\n          send(\"TRIGGER_BLUR\");\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: dom.getPositionerId(state.context),\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": state.context.currentPlacement,\n        onPointerEnter(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_ENTER\", src: \"content\" });\n        },\n        onPointerLeave(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_LEAVE\", src: \"content\" });\n        }\n      });\n    }\n  };\n}\nvar { not, and } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"hover-card\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        openDelay: 700,\n        closeDelay: 300,\n        currentPlacement: void 0,\n        ...ctx,\n        positioning: {\n          placement: \"bottom\",\n          ...ctx.positioning\n        }\n      },\n      watch: {\n        open: [\"toggleVisibility\"]\n      },\n      states: {\n        closed: {\n          tags: [\"closed\"],\n          entry: [\"clearIsPointer\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            POINTER_ENTER: {\n              target: \"opening\",\n              actions: [\"setIsPointer\"]\n            },\n            TRIGGER_FOCUS: \"opening\",\n            OPEN: \"opening\"\n          }\n        },\n        opening: {\n          tags: [\"closed\"],\n          after: {\n            OPEN_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            POINTER_LEAVE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            TRIGGER_BLUR: [\n              {\n                guard: and(\"isOpenControlled\", not(\"isPointer\")),\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                guard: not(\"isPointer\"),\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackDismissableElement\", \"trackPositioning\"],\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            POINTER_ENTER: {\n              actions: [\"setIsPointer\"]\n            },\n            POINTER_LEAVE: \"closing\",\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            TRIGGER_BLUR: [\n              {\n                guard: and(\"isOpenControlled\", not(\"isPointer\")),\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                guard: not(\"isPointer\"),\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        },\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackPositioning\"],\n          after: {\n            CLOSE_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            \"CONTROLLED.OPEN\": \"open\",\n            POINTER_ENTER: {\n              target: \"open\",\n              // no need to invokeOnOpen here because it's still open (but about to close)\n              actions: [\"setIsPointer\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      delays: {\n        OPEN_DELAY: (ctx2) => ctx2.openDelay,\n        CLOSE_DELAY: (ctx2) => ctx2.closeDelay\n      },\n      guards: {\n        isPointer: (ctx2) => !!ctx2.isPointer,\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackPositioning(ctx2) {\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__.trackDismissableElement)(getContentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx2)],\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\" });\n            },\n            onFocusOutside(event) {\n              event.preventDefault();\n            }\n          });\n        }\n      },\n      actions: {\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        setIsPointer(ctx2) {\n          ctx2.isPointer = true;\n        },\n        clearIsPointer(ctx2) {\n          ctx2.isPointer = false;\n        },\n        reposition(ctx2, evt) {\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          queueMicrotask(() => {\n            send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n          });\n        }\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"closeDelay\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"onOpenChange\",\n  \"open.controlled\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/hover-card/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/i18n-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filter: () => (/* binding */ filter),\n/* harmony export */   formatBytes: () => (/* binding */ formatBytes),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatList: () => (/* binding */ formatList),\n/* harmony export */   formatNumber: () => (/* binding */ formatNumber),\n/* harmony export */   formatRelativeTime: () => (/* binding */ formatRelativeTime),\n/* harmony export */   getDefaultLocale: () => (/* binding */ getDefaultLocale),\n/* harmony export */   getLocaleDir: () => (/* binding */ getLocaleDir),\n/* harmony export */   isRTL: () => (/* binding */ isRTL),\n/* harmony export */   trackLocale: () => (/* binding */ trackLocale)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/cache.ts\nfunction i18nCache(Ins) {\n  const formatterCache = /* @__PURE__ */ new Map();\n  return function create(locale, options) {\n    const cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : \"\");\n    if (formatterCache.has(cacheKey)) {\n      return formatterCache.get(cacheKey);\n    }\n    let formatter = new Ins(locale, options);\n    formatterCache.set(cacheKey, formatter);\n    return formatter;\n  };\n}\n\n// src/filter.ts\nvar collatorCache = i18nCache(Intl.Collator);\nfunction filter(options) {\n  const { locale, ...rest } = options || {};\n  const collator = collatorCache(locale || \"en-US\", { usage: \"search\", ...rest });\n  function normalize(string) {\n    string = string.normalize(\"NFC\");\n    if (collator.resolvedOptions().ignorePunctuation) {\n      string = string.replace(/\\p{P}/gu, \"\");\n    }\n    return string;\n  }\n  function startsWith(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    return collator.compare(string.slice(0, substring.length), substring) === 0;\n  }\n  function endsWith(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    return collator.compare(string.slice(-substring.length), substring) === 0;\n  }\n  function contains(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    let scan = 0;\n    let sliceLen = substring.length;\n    for (; scan + sliceLen <= string.length; scan++) {\n      let slice = string.slice(scan, scan + sliceLen);\n      if (collator.compare(substring, slice) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return {\n    startsWith,\n    endsWith,\n    contains\n  };\n}\n\n// src/format-number.ts\nvar getNumberFormatter = i18nCache(Intl.NumberFormat);\nfunction formatNumber(v, locale, options = {}) {\n  const formatter = getNumberFormatter(locale, options);\n  return formatter.format(v);\n}\n\n// src/format-bytes.ts\nvar bitPrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\"];\nvar bytePrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\"];\nvar formatBytes = (bytes, locale = \"en-US\", options = {}) => {\n  if (isNaN(bytes)) return \"\";\n  if (bytes === 0) return \"0 B\";\n  const { unit = \"byte\", unitDisplay = \"short\" } = options;\n  const prefix = unit === \"bit\" ? bitPrefixes : bytePrefixes;\n  const index = Math.max(0, Math.min(Math.floor(Math.log10(bytes) / 3), prefix.length - 1));\n  const _unit = prefix[index] + unit;\n  const _unitDisplay = unitDisplay || \"short\";\n  const v = parseFloat((bytes / Math.pow(1e3, index)).toPrecision(3));\n  return formatNumber(v, locale, {\n    style: \"unit\",\n    unit: _unit,\n    unitDisplay: _unitDisplay\n  });\n};\n\n// src/format-date.ts\nvar symbols = \"\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;\";\nfunction createRegEx(sign) {\n  return new RegExp(\"(^|>|\" + symbols + \")(\" + sign + \")($|<|\" + symbols + \")\", \"g\");\n}\nvar FORMATS = [\n  \"G\",\n  \"GG\",\n  \"GGG\",\n  \"GGGG\",\n  \"GGGGG\",\n  \"y\",\n  \"yo\",\n  \"yy\",\n  \"yyy\",\n  \"yyyy\",\n  \"Y\",\n  \"Yo\",\n  \"YY\",\n  \"YYY\",\n  \"YYYY\",\n  \"Q\",\n  \"Qo\",\n  \"QQ\",\n  \"QQQ\",\n  \"QQQQ\",\n  \"QQQQQ\",\n  \"M\",\n  \"Mo\",\n  \"MM\",\n  \"MMM\",\n  \"MMMM\",\n  \"MMMMM\",\n  \"E\",\n  \"EE\",\n  \"EEE\",\n  \"EEEE\",\n  \"EEEEE\",\n  \"EEEEEE\",\n  \"a\",\n  \"aa\",\n  \"aaa\",\n  \"aaaa\",\n  \"aaaaa\",\n  \"d\",\n  \"do\",\n  \"dd\",\n  \"D\",\n  \"Do\",\n  \"DD\",\n  \"DDD\",\n  \"w\",\n  \"wo\",\n  \"ww\",\n  \"s\",\n  \"so\",\n  \"ss\",\n  \"m\",\n  \"mo\",\n  \"mm\",\n  \"h\",\n  \"ho\",\n  \"hh\",\n  \"H\",\n  \"Ho\",\n  \"HH\",\n  \"z\",\n  \"zz\",\n  \"zzz\",\n  \"zzzz\",\n  \"T\"\n];\nfunction ordinal(num) {\n  const n = typeof num === \"string\" ? parseFloat(num) : num;\n  let suffix = \"th\";\n  if (n % 10 === 1 && n % 100 !== 11) {\n    suffix = \"st\";\n  } else if (n % 10 === 2 && n % 100 !== 12) {\n    suffix = \"nd\";\n  } else if (n % 10 === 3 && n % 100 !== 13) {\n    suffix = \"rd\";\n  }\n  return `${n}${suffix}`;\n}\nfunction pad(num, length) {\n  return String(num).padStart(length, \"0\");\n}\nfunction zone(str) {\n  return str.split(/AM|PM/)[1].trim();\n}\nfunction getFormat(date, options) {\n  const { locale, format, timeZone } = options;\n  switch (format) {\n    // era\n    case \"G\":\n    case \"GG\":\n    case \"GGG\":\n      return date.toLocaleString(locale, { era: \"short\" });\n    case \"GGGG\":\n      return date.toLocaleString(locale, { era: \"long\" });\n    case \"GGGGG\":\n      return date.toLocaleString(locale, { era: \"narrow\" });\n    // year\n    case \"y\":\n    case \"Y\":\n      return date.getFullYear();\n    case \"yo\":\n    case \"Yo\":\n      return ordinal(date.toLocaleString(locale, { year: \"numeric\" }));\n    case \"yy\":\n    case \"YY\":\n      return date.toLocaleString(locale, { year: \"2-digit\" });\n    case \"yyy\":\n    case \"YYY\":\n      return date.toLocaleString(locale, { year: \"numeric\" }).padStart(3, \"0\");\n    case \"yyyy\":\n    case \"YYYY\":\n      return date.toLocaleString(locale, { year: \"numeric\" }).padStart(4, \"0\");\n    // quarter\n    case \"Q\":\n    case \"QQQQQ\":\n      return Math.ceil((date.getMonth() + 1) / 3);\n    case \"Qo\":\n      return ordinal(Math.ceil((date.getMonth() + 1) / 3));\n    case \"QQ\":\n      return pad(Math.ceil((date.getMonth() + 1) / 3), 2);\n    case \"QQQ\":\n      return `Q${Math.ceil((date.getMonth() + 1) / 3)}`;\n    case \"QQQQ\": {\n      const base = ordinal(String(Math.ceil((date.getMonth() + 1) / 3)));\n      return `${base} quarter`;\n    }\n    // month\n    case \"M\":\n      return date.getMonth() + 1;\n    case \"Mo\":\n      return ordinal(date.getMonth() + 1);\n    case \"MM\":\n      return date.toLocaleString(locale, { month: \"2-digit\" });\n    case \"MMM\":\n      return date.toLocaleString(locale, { month: \"short\" });\n    case \"MMMM\":\n      return date.toLocaleString(locale, { month: \"long\" });\n    case \"MMMMM\":\n      return date.toLocaleString(locale, { month: \"narrow\" });\n    // week\n    case \"w\":\n      return Math.ceil(date.getDate() / 7);\n    case \"wo\":\n      return ordinal(Math.ceil(date.getDate() / 7));\n    case \"ww\":\n      return pad(Math.ceil(date.getDate() / 7), 2);\n    // day\n    case \"d\":\n    case \"D\":\n      return date.getDate();\n    case \"do\":\n    case \"Do\":\n      return ordinal(date.getDate());\n    case \"dd\":\n    case \"DD\":\n      return date.toLocaleString(locale, { day: \"2-digit\" });\n    case \"DDD\":\n      return pad(date.getDate(), 3);\n    // weekday\n    case \"E\":\n    case \"EE\":\n    case \"EEE\":\n      return date.toLocaleString(locale, { weekday: \"short\" });\n    case \"EEEE\":\n      return date.toLocaleString(locale, { weekday: \"long\" });\n    case \"EEEEE\":\n      return date.toLocaleString(locale, { weekday: \"narrow\" });\n    case \"EEEEEE\":\n      return date.toLocaleString(locale, { weekday: \"short\" }).slice(0, 2);\n    // hour\n    case \"h\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true });\n    case \"ho\":\n      return ordinal(date.toLocaleString(locale, { hour: \"2-digit\", hour12: true }));\n    case \"hh\":\n      return date.toLocaleString(locale, { hour: \"2-digit\", hour12: true });\n    case \"H\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: false });\n    case \"Ho\":\n      return ordinal(+date.toLocaleString(locale, { hour: \"numeric\", hour12: false }));\n    case \"HH\":\n      return date.toLocaleString(locale, { hour: \"2-digit\", hour12: false });\n    // minute\n    case \"m\":\n      return date.toLocaleString(locale, { minute: \"numeric\" });\n    case \"mo\":\n      return ordinal(date.toLocaleString(locale, { minute: \"numeric\" }));\n    case \"mm\":\n      return date.toLocaleString(locale, { minute: \"2-digit\" });\n    // second\n    case \"s\":\n      return date.toLocaleString(locale, { second: \"numeric\" });\n    case \"so\":\n      return ordinal(date.toLocaleString(locale, { second: \"numeric\" }));\n    case \"ss\":\n      return date.toLocaleString(locale, { second: \"2-digit\" });\n    // timestamp\n    case \"T\":\n      return date.getTime();\n    // day period\n    case \"a\":\n    case \"aa\":\n    case \"aaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).toLocaleUpperCase();\n    case \"aaaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).toLocaleLowerCase();\n    case \"aaaaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).charAt(0);\n    // TODO:Revise this\n    case \"z\":\n    case \"zz\":\n    case \"zzz\": {\n      return zone(date.toLocaleString(locale, { timeZone, timeZoneName: \"shortOffset\" }));\n    }\n    case \"zzzz\":\n      return zone(date.toLocaleString(locale, { timeZone, timeZoneName: \"longOffset\" }));\n    default:\n      throw new Error(`Unknown format: ${format}`);\n  }\n}\nfunction formatDate(date, format, locale, timeZone) {\n  let result = format;\n  for (const key of FORMATS) {\n    const res = getFormat(date, { locale, format: key, timeZone });\n    result = result.replace(createRegEx(key), \"$1\" + res + \"$3\");\n  }\n  return result;\n}\n\n// src/format-list.ts\nvar getListFormatter = i18nCache(Intl.ListFormat);\nfunction formatList(list, locale, options = {}) {\n  const formatter = getListFormatter(locale, options);\n  return formatter.format(list);\n}\n\n// src/format-relative-time.ts\nvar getRelativeTimeFormatter = i18nCache(Intl.RelativeTimeFormat);\nfunction formatRelativeTime(value, locale, options = {}) {\n  const rtf = getRelativeTimeFormatter(locale, options);\n  const now = /* @__PURE__ */ new Date();\n  const diff = getDistance(now, value);\n  if (diff.years > 0) return rtf.format(diff.years * diff.sign, \"year\");\n  if (diff.months > 0) return rtf.format(diff.months * diff.sign, \"month\");\n  if (diff.weeks > 0) return rtf.format(diff.weeks * diff.sign, \"week\");\n  if (diff.days > 0) return rtf.format(diff.days * diff.sign, \"day\");\n  if (diff.hours > 0) return rtf.format(diff.hours * diff.sign, \"hour\");\n  if (diff.minutes > 0) return rtf.format(diff.minutes * diff.sign, \"minute\");\n  return rtf.format(diff.seconds * diff.sign, \"second\");\n}\nvar SECOND_TO_MS = 1e3;\nvar MINUTE_TO_MS = 1e3 * 60;\nvar HOUR_TO_MS = 1e3 * 60 * 60;\nvar DAY_TO_MS = 1e3 * 60 * 60 * 24;\nvar WEEK_TO_MS = 1e3 * 60 * 60 * 24 * 7;\nvar MONTH_TO_MS = 1e3 * 60 * 60 * 24 * 30;\nvar YEAR_TO_MS = 1e3 * 60 * 60 * 24 * 365;\nfunction getDistance(startDate, endDate) {\n  const endTime = endDate.getTime();\n  const startTime = startDate.getTime();\n  const distance = Math.abs(endTime - startTime);\n  return {\n    sign: Math.sign(endTime - startTime),\n    days: Math.floor(distance / DAY_TO_MS),\n    hours: Math.floor(distance % DAY_TO_MS / HOUR_TO_MS),\n    minutes: Math.floor(distance % HOUR_TO_MS / MINUTE_TO_MS),\n    seconds: Math.floor(distance % MINUTE_TO_MS / SECOND_TO_MS),\n    weeks: Math.floor(distance / WEEK_TO_MS),\n    months: Math.floor(distance / MONTH_TO_MS),\n    years: Math.floor(distance / YEAR_TO_MS)\n  };\n}\n\n// src/is-rtl.ts\nvar RTL_SCRIPTS = /* @__PURE__ */ new Set([\n  \"Avst\",\n  \"Arab\",\n  \"Armi\",\n  \"Syrc\",\n  \"Samr\",\n  \"Mand\",\n  \"Thaa\",\n  \"Mend\",\n  \"Nkoo\",\n  \"Adlm\",\n  \"Rohg\",\n  \"Hebr\"\n]);\nvar RTL_LANGS = /* @__PURE__ */ new Set([\n  \"ae\",\n  \"ar\",\n  \"arc\",\n  \"bcc\",\n  \"bqi\",\n  \"ckb\",\n  \"dv\",\n  \"fa\",\n  \"glk\",\n  \"he\",\n  \"ku\",\n  \"mzn\",\n  \"nqo\",\n  \"pnb\",\n  \"ps\",\n  \"sd\",\n  \"ug\",\n  \"ur\",\n  \"yi\"\n]);\nfunction isRTL(locale) {\n  if (Intl.Locale) {\n    const script = new Intl.Locale(locale).maximize().script ?? \"\";\n    return RTL_SCRIPTS.has(script);\n  }\n  const lang = locale.split(\"-\")[0];\n  return RTL_LANGS.has(lang);\n}\nfunction getLocaleDir(locale) {\n  return isRTL(locale) ? \"rtl\" : \"ltr\";\n}\n\n// src/locale.ts\nfunction getDefaultLocale() {\n  let locale = typeof navigator !== \"undefined\" && (navigator.language || navigator.userLanguage) || \"en-US\";\n  return {\n    locale,\n    dir: isRTL(locale) ? \"rtl\" : \"ltr\"\n  };\n}\nfunction trackLocale(options = {}) {\n  const { getRootNode, onLocaleChange } = options;\n  onLocaleChange?.(getDefaultLocale());\n  const handleLocaleChange = () => {\n    onLocaleChange?.(getDefaultLocale());\n  };\n  const win = getRootNode ? (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(getRootNode()) : window;\n  win.addEventListener(\"languagechange\", handleLocaleChange);\n  return () => {\n    win.removeEventListener(\"languagechange\", handleLocaleChange);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@zag-js/interact-outside/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackInteractOutside: () => (/* binding */ trackInteractOutside)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n// src/index.ts\n\n// src/frame-utils.ts\nfunction getWindowFrames(win) {\n  const frames = {\n    each(cb) {\n      for (let i = 0; i < win.frames?.length; i += 1) {\n        const frame = win.frames[i];\n        if (frame) cb(frame);\n      }\n    },\n    addEventListener(event, listener, options) {\n      frames.each((frame) => {\n        try {\n          frame.document.addEventListener(event, listener, options);\n        } catch {\n        }\n      });\n      return () => {\n        try {\n          frames.removeEventListener(event, listener, options);\n        } catch {\n        }\n      };\n    },\n    removeEventListener(event, listener, options) {\n      frames.each((frame) => {\n        try {\n          frame.document.removeEventListener(event, listener, options);\n        } catch {\n        }\n      });\n    }\n  };\n  return frames;\n}\nfunction getParentWindow(win) {\n  const parent = win.frameElement != null ? win.parent : null;\n  return {\n    addEventListener: (event, listener, options) => {\n      try {\n        parent?.addEventListener(event, listener, options);\n      } catch {\n      }\n      return () => {\n        try {\n          parent?.removeEventListener(event, listener, options);\n        } catch {\n        }\n      };\n    },\n    removeEventListener: (event, listener, options) => {\n      try {\n        parent?.removeEventListener(event, listener, options);\n      } catch {\n      }\n    }\n  };\n}\n\n// src/index.ts\nvar POINTER_OUTSIDE_EVENT = \"pointerdown.outside\";\nvar FOCUS_OUTSIDE_EVENT = \"focus.outside\";\nfunction isComposedPathFocusable(composedPath) {\n  for (const node of composedPath) {\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(node) && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(node)) return true;\n  }\n  return false;\n}\nvar isPointerEvent = (event) => \"clientY\" in event;\nfunction isEventPointWithin(node, event) {\n  if (!isPointerEvent(event) || !node) return false;\n  const rect = node.getBoundingClientRect();\n  if (rect.width === 0 || rect.height === 0) return false;\n  return rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width;\n}\nfunction isPointInRect(rect, point) {\n  return rect.y <= point.y && point.y <= rect.y + rect.height && rect.x <= point.x && point.x <= rect.x + rect.width;\n}\nfunction isEventWithinScrollbar(event, ancestor) {\n  if (!ancestor || !isPointerEvent(event)) return false;\n  const isScrollableY = ancestor.scrollHeight > ancestor.clientHeight;\n  const onScrollbarY = isScrollableY && event.clientX > ancestor.offsetLeft + ancestor.clientWidth;\n  const isScrollableX = ancestor.scrollWidth > ancestor.clientWidth;\n  const onScrollbarX = isScrollableX && event.clientY > ancestor.offsetTop + ancestor.clientHeight;\n  const rect = {\n    x: ancestor.offsetLeft,\n    y: ancestor.offsetTop,\n    width: ancestor.clientWidth + (isScrollableY ? 16 : 0),\n    height: ancestor.clientHeight + (isScrollableX ? 16 : 0)\n  };\n  const point = {\n    x: event.clientX,\n    y: event.clientY\n  };\n  if (!isPointInRect(rect, point)) return false;\n  return onScrollbarY || onScrollbarX;\n}\nfunction trackInteractOutsideImpl(node, options) {\n  const { exclude, onFocusOutside, onPointerDownOutside, onInteractOutside, defer } = options;\n  if (!node) return;\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node);\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(node);\n  const frames = getWindowFrames(win);\n  const parentWin = getParentWindow(win);\n  function isEventOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n    if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(target)) return false;\n    if (!target.isConnected) return false;\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(node, target)) return false;\n    if (isEventPointWithin(node, event)) return false;\n    const triggerEl = doc.querySelector(`[aria-controls=\"${node.id}\"]`);\n    if (triggerEl) {\n      const triggerAncestor = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getNearestOverflowAncestor)(triggerEl);\n      if (isEventWithinScrollbar(event, triggerAncestor)) return false;\n    }\n    const nodeAncestor = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getNearestOverflowAncestor)(node);\n    if (isEventWithinScrollbar(event, nodeAncestor)) return false;\n    return !exclude?.(target);\n  }\n  const pointerdownCleanups = /* @__PURE__ */ new Set();\n  function onPointerDown(event) {\n    function handler() {\n      const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n      const composedPath = event.composedPath?.() ?? [event.target];\n      func(() => {\n        if (!node || !isEventOutside(event)) return;\n        if (onPointerDownOutside || onInteractOutside) {\n          const handler2 = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(onPointerDownOutside, onInteractOutside);\n          node.addEventListener(POINTER_OUTSIDE_EVENT, handler2, { once: true });\n        }\n        fireCustomEvent(node, POINTER_OUTSIDE_EVENT, {\n          bubbles: false,\n          cancelable: true,\n          detail: {\n            originalEvent: event,\n            contextmenu: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isContextMenuEvent)(event),\n            focusable: isComposedPathFocusable(composedPath)\n          }\n        });\n      });\n    }\n    if (event.pointerType === \"touch\") {\n      pointerdownCleanups.forEach((fn) => fn());\n      pointerdownCleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"click\", handler, { once: true }));\n      pointerdownCleanups.add(parentWin.addEventListener(\"click\", handler, { once: true }));\n      pointerdownCleanups.add(frames.addEventListener(\"click\", handler, { once: true }));\n    } else {\n      handler();\n    }\n  }\n  const cleanups = /* @__PURE__ */ new Set();\n  const timer = setTimeout(() => {\n    cleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"pointerdown\", onPointerDown, true));\n    cleanups.add(parentWin.addEventListener(\"pointerdown\", onPointerDown, true));\n    cleanups.add(frames.addEventListener(\"pointerdown\", onPointerDown, true));\n  }, 0);\n  function onFocusin(event) {\n    const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n    func(() => {\n      if (!node || !isEventOutside(event)) return;\n      if (onFocusOutside || onInteractOutside) {\n        const handler = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(onFocusOutside, onInteractOutside);\n        node.addEventListener(FOCUS_OUTSIDE_EVENT, handler, { once: true });\n      }\n      fireCustomEvent(node, FOCUS_OUTSIDE_EVENT, {\n        bubbles: false,\n        cancelable: true,\n        detail: {\n          originalEvent: event,\n          contextmenu: false,\n          focusable: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event))\n        }\n      });\n    });\n  }\n  cleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"focusin\", onFocusin, true));\n  cleanups.add(parentWin.addEventListener(\"focusin\", onFocusin, true));\n  cleanups.add(frames.addEventListener(\"focusin\", onFocusin, true));\n  return () => {\n    clearTimeout(timer);\n    pointerdownCleanups.forEach((fn) => fn());\n    cleanups.forEach((fn) => fn());\n  };\n}\nfunction trackInteractOutside(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups.push(trackInteractOutsideImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction fireCustomEvent(el, type, init) {\n  const win = el.ownerDocument.defaultView || window;\n  const event = new win.CustomEvent(type, init);\n  return el.dispatchEvent(event);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/menu/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/menu/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   optionItemProps: () => (/* binding */ optionItemProps),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitOptionItemProps: () => (/* binding */ splitOptionItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/rect-utils */ \"(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/menu.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"menu\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"content\",\n  \"contextTrigger\",\n  \"indicator\",\n  \"item\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"itemIndicator\",\n  \"itemText\",\n  \"positioner\",\n  \"separator\",\n  \"trigger\",\n  \"triggerItem\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `menu:${ctx.id}:trigger`,\n  getContextTriggerId: (ctx) => ctx.ids?.contextTrigger ?? `menu:${ctx.id}:ctx-trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `menu:${ctx.id}:content`,\n  getArrowId: (ctx) => ctx.ids?.arrow ?? `menu:${ctx.id}:arrow`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `menu:${ctx.id}:popper`,\n  getGroupId: (ctx, id) => ctx.ids?.group?.(id) ?? `menu:${ctx.id}:group:${id}`,\n  getGroupLabelId: (ctx, id) => ctx.ids?.groupLabel?.(id) ?? `menu:${ctx.id}:group-label:${id}`,\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getHighlightedItemEl: (ctx) => ctx.highlightedValue ? dom.getById(ctx, ctx.highlightedValue) : null,\n  getArrowEl: (ctx) => dom.getById(ctx, dom.getArrowId(ctx)),\n  getElements: (ctx) => {\n    const ownerId = CSS.escape(dom.getContentId(ctx));\n    const selector = `[role^=\"menuitem\"][data-ownedby=${ownerId}]:not([data-disabled])`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getContentEl(ctx), selector);\n  },\n  getFirstEl: (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(dom.getElements(ctx)),\n  getLastEl: (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(dom.getElements(ctx)),\n  getNextEl: (ctx, loop) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextById)(dom.getElements(ctx), ctx.highlightedValue, loop ?? ctx.loopFocus),\n  getPrevEl: (ctx, loop) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.prevById)(dom.getElements(ctx), ctx.highlightedValue, loop ?? ctx.loopFocus),\n  getElemByKey: (ctx, key) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getByTypeahead)(dom.getElements(ctx), { state: ctx.typeaheadState, key, activeId: ctx.highlightedValue }),\n  isTargetDisabled: (v) => {\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(v) && (v.dataset.disabled === \"\" || v.hasAttribute(\"disabled\"));\n  },\n  isTriggerItem: (el) => {\n    return !!el?.getAttribute(\"role\")?.startsWith(\"menuitem\") && !!el?.hasAttribute(\"aria-controls\");\n  },\n  getOptionFromItemEl(el) {\n    return {\n      id: el.id,\n      name: el.dataset.name,\n      value: el.dataset.value,\n      valueText: el.dataset.valueText,\n      type: el.dataset.type\n    };\n  }\n});\n\n// src/menu.connect.ts\nfunction connect(state, send, normalize) {\n  const isSubmenu = state.context.isSubmenu;\n  const isTypingAhead = state.context.isTypingAhead;\n  const composite = state.context.composite;\n  const open = state.hasTag(\"open\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: state.context.anchorPoint ? \"bottom\" : state.context.currentPlacement\n  });\n  function getItemState(props2) {\n    return {\n      disabled: !!props2.disabled,\n      highlighted: state.context.highlightedValue === props2.value\n    };\n  }\n  function getOptionItemProps(props2) {\n    const valueText = props2.valueText ?? props2.value;\n    return { ...props2, id: props2.value, valueText };\n  }\n  function getOptionItemState(props2) {\n    const itemState = getItemState(getOptionItemProps(props2));\n    return {\n      ...itemState,\n      checked: !!props2.checked\n    };\n  }\n  function getItemProps(props2) {\n    const { value: id, closeOnSelect, valueText } = props2;\n    const itemState = getItemState(props2);\n    return normalize.element({\n      ...parts.item.attrs,\n      id,\n      role: \"menuitem\",\n      \"aria-disabled\": itemState.disabled,\n      \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n      \"data-ownedby\": dom.getContentId(state.context),\n      \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n      \"data-valuetext\": valueText,\n      onDragStart(event) {\n        const isLink = event.currentTarget.matches(\"a[href]\");\n        if (isLink) event.preventDefault();\n      },\n      onPointerMove(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const target = event.currentTarget;\n        if (itemState.highlighted) return;\n        send({ type: \"ITEM_POINTERMOVE\", id, target, closeOnSelect });\n      },\n      onPointerLeave(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const pointerMoved = state.previousEvent.type.includes(\"POINTER\");\n        if (!pointerMoved) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_POINTERLEAVE\", id, target, closeOnSelect });\n      },\n      onPointerDown(event) {\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_POINTERDOWN\", target, id, closeOnSelect });\n      },\n      onClick(event) {\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isDownloadingEvent)(event)) return;\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_CLICK\", target, id, closeOnSelect });\n      }\n    });\n  }\n  return {\n    highlightedValue: state.context.highlightedValue,\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    setHighlightedValue(value) {\n      send({ type: \"HIGHLIGHTED.SET\", id: value });\n    },\n    setParent(parent) {\n      send({ type: \"PARENT.SET\", value: parent, id: parent.state.context.id });\n    },\n    setChild(child) {\n      send({ type: \"CHILD.SET\", value: child, id: child.state.context.id });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getContextTriggerProps() {\n      return normalize.element({\n        ...parts.contextTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getContextTriggerId(state.context),\n        onPointerDown(event) {\n          if (event.pointerType === \"mouse\") return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CONTEXT_MENU_START\", point });\n        },\n        onPointerCancel(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onPointerMove(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onPointerUp(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onContextMenu(event) {\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CONTEXT_MENU\", point });\n          event.preventDefault();\n        },\n        style: {\n          WebkitTouchCallout: \"none\",\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\"\n        }\n      });\n    },\n    getTriggerItemProps(childApi) {\n      return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.mergeProps)(\n        getItemProps({ value: childApi.getTriggerProps().id }),\n        childApi.getTriggerProps()\n      );\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...isSubmenu ? parts.triggerItem.attrs : parts.trigger.attrs,\n        \"data-placement\": state.context.currentPlacement,\n        type: \"button\",\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"data-uid\": state.context.id,\n        \"aria-haspopup\": composite ? \"menu\" : \"dialog\",\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": open || void 0,\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerMove(event) {\n          if (event.pointerType !== \"mouse\") return;\n          const disabled = dom.isTargetDisabled(event.currentTarget);\n          if (disabled || !isSubmenu) return;\n          send({ type: \"TRIGGER_POINTERMOVE\", target: event.currentTarget });\n        },\n        onPointerLeave(event) {\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          if (event.pointerType !== \"mouse\") return;\n          if (!isSubmenu) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"TRIGGER_POINTERLEAVE\", target: event.currentTarget, point });\n        },\n        onPointerDown(event) {\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isContextMenuEvent)(event)) return;\n          event.preventDefault();\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          send({ type: \"TRIGGER_CLICK\", target: event.currentTarget });\n        },\n        onBlur() {\n          send(\"TRIGGER_BLUR\");\n        },\n        onFocus() {\n          send(\"TRIGGER_FOCUS\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          const keyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\");\n            },\n            ArrowUp() {\n              send(\"ARROW_UP\");\n            },\n            Enter() {\n              send({ type: \"ARROW_DOWN\", src: \"enter\" });\n            },\n            Space() {\n              send({ type: \"ARROW_DOWN\", src: \"space\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: popperStyles.floating\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: dom.getContentId(state.context),\n        \"aria-label\": state.context[\"aria-label\"],\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: composite ? \"menu\" : \"dialog\",\n        tabIndex: 0,\n        dir: state.context.dir,\n        \"aria-activedescendant\": state.context.highlightedValue ?? void 0,\n        \"aria-labelledby\": dom.getTriggerId(state.context),\n        \"data-placement\": state.context.currentPlacement,\n        onPointerEnter(event) {\n          if (event.pointerType !== \"mouse\") return;\n          send(\"MENU_POINTERENTER\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          const sameMenu = target?.closest(\"[role=menu]\") === event.currentTarget || target === event.currentTarget;\n          if (!sameMenu) return;\n          if (event.key === \"Tab\") {\n            const valid = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isValidTabEvent)(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const item = dom.getHighlightedItemEl(state.context);\n          const keyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\");\n            },\n            ArrowUp() {\n              send(\"ARROW_UP\");\n            },\n            ArrowLeft() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"ARROW_RIGHT\");\n            },\n            Enter() {\n              send(\"ENTER\");\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isAnchorElement)(item)) {\n                state.context.navigate({ value: state.context.highlightedValue, node: item });\n              }\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, { dir: state.context.dir });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.stopPropagation();\n            event.preventDefault();\n            return;\n          }\n          if (!state.context.typeahead) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isPrintableKey)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isEditableElement)(target)) return;\n          send({ type: \"TYPEAHEAD\", key: event.key });\n          event.preventDefault();\n        }\n      });\n    },\n    getSeparatorProps() {\n      return normalize.element({\n        ...parts.separator.attrs,\n        role: \"separator\",\n        dir: state.context.dir,\n        \"aria-orientation\": \"horizontal\"\n      });\n    },\n    getItemState,\n    getItemProps,\n    getOptionItemState,\n    getOptionItemProps(props2) {\n      const { type, disabled, onCheckedChange, closeOnSelect } = props2;\n      const option = getOptionItemProps(props2);\n      const itemState = getOptionItemState(props2);\n      return {\n        ...getItemProps(option),\n        ...normalize.element({\n          \"data-type\": type,\n          ...parts.item.attrs,\n          dir: state.context.dir,\n          \"data-value\": option.value,\n          role: `menuitem${type}`,\n          \"aria-checked\": !!itemState.checked,\n          \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n          onClick(event) {\n            if (disabled) return;\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isDownloadingEvent)(event)) return;\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n            const target = event.currentTarget;\n            send({ type: \"ITEM_CLICK\", target, option, closeOnSelect });\n            onCheckedChange?.(!itemState.checked);\n          }\n        })\n      };\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getOptionItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n        hidden: !itemState.checked\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getOptionItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\"\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      return normalize.element({\n        id: dom.getGroupLabelId(state.context, props2.htmlFor),\n        dir: state.context.dir,\n        ...parts.itemGroupLabel.attrs\n      });\n    },\n    getItemGroupProps(props2) {\n      return normalize.element({\n        id: dom.getGroupId(state.context, props2.id),\n        ...parts.itemGroup.attrs,\n        dir: state.context.dir,\n        \"aria-labelledby\": dom.getGroupLabelId(state.context, props2.id),\n        role: \"group\"\n      });\n    }\n  };\n}\nvar { not, and, or } = _zag_js_core__WEBPACK_IMPORTED_MODULE_4__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)(\n    {\n      id: \"menu\",\n      initial: ctx.open ? \"open\" : \"idle\",\n      context: {\n        highlightedValue: null,\n        loopFocus: false,\n        anchorPoint: null,\n        closeOnSelect: true,\n        typeahead: true,\n        composite: true,\n        navigate(details) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.clickIfLink)(details.node);\n        },\n        ...ctx,\n        positioning: {\n          placement: \"bottom-start\",\n          gutter: 8,\n          ...ctx.positioning\n        },\n        intentPolygon: null,\n        parent: null,\n        lastHighlightedValue: null,\n        children: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.cast)((0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.ref)({})),\n        suspendPointer: false,\n        typeaheadState: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getByTypeahead.defaultOptions\n      },\n      computed: {\n        isSubmenu: (ctx2) => ctx2.parent !== null,\n        isRtl: (ctx2) => ctx2.dir === \"rtl\",\n        isTypingAhead: (ctx2) => ctx2.typeaheadState.keysSoFar !== \"\"\n      },\n      watch: {\n        isSubmenu: \"setSubmenuPlacement\",\n        anchorPoint: \"reposition\",\n        open: \"toggleVisibility\"\n      },\n      on: {\n        \"PARENT.SET\": {\n          actions: \"setParentMenu\"\n        },\n        \"CHILD.SET\": {\n          actions: \"setChildMenu\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\"\n          },\n          {\n            target: \"open\",\n            actions: \"invokeOnOpen\"\n          }\n        ],\n        OPEN_AUTOFOCUS: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            internal: true,\n            target: \"open\",\n            actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnClose\"\n          },\n          {\n            target: \"closed\",\n            actions: \"invokeOnClose\"\n          }\n        ],\n        \"HIGHLIGHTED.RESTORE\": {\n          actions: \"restoreHighlightedItem\"\n        },\n        \"HIGHLIGHTED.SET\": {\n          actions: \"setHighlightedItem\"\n        }\n      },\n      states: {\n        idle: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            CONTEXT_MENU_START: {\n              target: \"opening:contextmenu\",\n              actions: \"setAnchorPoint\"\n            },\n            CONTEXT_MENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n              }\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\"\n              }\n            ],\n            TRIGGER_FOCUS: {\n              guard: not(\"isSubmenu\"),\n              target: \"closed\"\n            },\n            TRIGGER_POINTERMOVE: {\n              guard: \"isSubmenu\",\n              target: \"opening\"\n            }\n          }\n        },\n        \"opening:contextmenu\": {\n          tags: [\"closed\"],\n          after: {\n            LONG_PRESS_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\"\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            CONTEXT_MENU_CANCEL: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\"\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\"\n              }\n            ]\n          }\n        },\n        opening: {\n          tags: [\"closed\"],\n          after: {\n            SUBMENU_OPEN_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\"\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            BLUR: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\"\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\"\n              }\n            ],\n            TRIGGER_POINTERLEAVE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\"\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\"\n              }\n            ]\n          }\n        },\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackPointerMove\", \"trackInteractOutside\"],\n          after: {\n            SUBMENU_CLOSE_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\", \"invokeOnClose\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\",\n              actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\"]\n            },\n            // don't invoke on open here since the menu is still open (we're only keeping it open)\n            MENU_POINTERENTER: {\n              target: \"open\",\n              actions: \"clearIntentPolygon\"\n            },\n            POINTER_MOVED_AWAY_FROM_SUBMENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\"\n              },\n              {\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\"]\n              }\n            ]\n          }\n        },\n        closed: {\n          tags: [\"closed\"],\n          entry: [\"clearHighlightedItem\", \"focusTrigger\", \"resumePointer\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: or(\"isOpenAutoFocusEvent\", \"isArrowDownEvent\"),\n                target: \"open\",\n                actions: \"highlightFirstItem\"\n              },\n              {\n                guard: \"isArrowUpEvent\",\n                target: \"open\",\n                actions: \"highlightLastItem\"\n              },\n              {\n                target: \"open\"\n              }\n            ],\n            CONTEXT_MENU_START: {\n              target: \"opening:contextmenu\",\n              actions: \"setAnchorPoint\"\n            },\n            CONTEXT_MENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n              }\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\"\n              }\n            ],\n            TRIGGER_POINTERMOVE: {\n              guard: \"isTriggerItem\",\n              target: \"opening\"\n            },\n            TRIGGER_BLUR: \"idle\",\n            ARROW_DOWN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n              }\n            ],\n            ARROW_UP: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: [\"highlightLastItem\", \"invokeOnOpen\"]\n              }\n            ]\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackInteractOutside\", \"trackPositioning\", \"scrollToHighlightedItem\"],\n          entry: [\"focusMenu\", \"resumePointer\"],\n          on: {\n            \"CONTROLLED.CLOSE\": [\n              {\n                target: \"closed\",\n                guard: \"isArrowLeftEvent\",\n                actions: [\"focusParentMenu\"]\n              },\n              {\n                target: \"closed\"\n              }\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: and(not(\"isTriggerItem\"), \"isOpenControlled\"),\n                actions: \"invokeOnClose\"\n              },\n              {\n                guard: not(\"isTriggerItem\"),\n                target: \"closed\",\n                actions: \"invokeOnClose\"\n              }\n            ],\n            ARROW_UP: {\n              actions: [\"highlightPrevItem\", \"focusMenu\"]\n            },\n            ARROW_DOWN: {\n              actions: [\"highlightNextItem\", \"focusMenu\"]\n            },\n            ARROW_LEFT: [\n              {\n                guard: and(\"isSubmenu\", \"isOpenControlled\"),\n                actions: \"invokeOnClose\"\n              },\n              {\n                guard: \"isSubmenu\",\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"invokeOnClose\"]\n              }\n            ],\n            HOME: {\n              actions: [\"highlightFirstItem\", \"focusMenu\"]\n            },\n            END: {\n              actions: [\"highlightLastItem\", \"focusMenu\"]\n            },\n            ARROW_RIGHT: {\n              guard: \"isTriggerItemHighlighted\",\n              actions: \"openSubmenu\"\n            },\n            ENTER: [\n              {\n                guard: \"isTriggerItemHighlighted\",\n                actions: \"openSubmenu\"\n              },\n              {\n                actions: \"clickHighlightedItem\"\n              }\n            ],\n            ITEM_POINTERMOVE: [\n              {\n                guard: not(\"suspendPointer\"),\n                actions: [\"setHighlightedItem\", \"focusMenu\"]\n              },\n              {\n                actions: \"setLastHighlightedItem\"\n              }\n            ],\n            ITEM_POINTERLEAVE: {\n              guard: and(not(\"suspendPointer\"), not(\"isTriggerItem\")),\n              actions: \"clearHighlightedItem\"\n            },\n            ITEM_CLICK: [\n              // == grouped ==\n              {\n                guard: and(\n                  not(\"isTriggerItemHighlighted\"),\n                  not(\"isHighlightedItemEditable\"),\n                  \"closeOnSelect\",\n                  \"isOpenControlled\"\n                ),\n                actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n              },\n              {\n                guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\"), \"closeOnSelect\"),\n                target: \"closed\",\n                actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n              },\n              //\n              {\n                guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\")),\n                actions: [\"invokeOnSelect\", \"setOptionState\"]\n              },\n              { actions: \"setHighlightedItem\" }\n            ],\n            TRIGGER_POINTERLEAVE: {\n              target: \"closing\",\n              actions: \"setIntentPolygon\"\n            },\n            ITEM_POINTERDOWN: {\n              actions: \"setHighlightedItem\"\n            },\n            TYPEAHEAD: {\n              actions: \"highlightMatchedItem\"\n            },\n            FOCUS_MENU: {\n              actions: \"focusMenu\"\n            },\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        }\n      }\n    },\n    {\n      delays: {\n        LONG_PRESS_DELAY: 700,\n        SUBMENU_OPEN_DELAY: 100,\n        SUBMENU_CLOSE_DELAY: 100\n      },\n      guards: {\n        closeOnSelect: (ctx2, evt) => !!(evt?.closeOnSelect ?? ctx2.closeOnSelect),\n        // whether the trigger is also a menu item\n        isTriggerItem: (_ctx, evt) => dom.isTriggerItem(evt.target),\n        // whether the trigger item is the active item\n        isTriggerItemHighlighted: (ctx2, evt) => {\n          const target = evt.target ?? dom.getHighlightedItemEl(ctx2);\n          return !!target?.hasAttribute(\"aria-controls\");\n        },\n        isSubmenu: (ctx2) => ctx2.isSubmenu,\n        suspendPointer: (ctx2) => ctx2.suspendPointer,\n        isHighlightedItemEditable: (ctx2) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isEditableElement)(dom.getHighlightedItemEl(ctx2)),\n        isWithinPolygon: (ctx2, evt) => {\n          if (!ctx2.intentPolygon) return false;\n          return (0,_zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__.isPointInPolygon)(ctx2.intentPolygon, evt.point);\n        },\n        // guard assertions (for controlled mode)\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"],\n        isArrowLeftEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_LEFT\",\n        isArrowUpEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_UP\",\n        isArrowDownEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_DOWN\",\n        isOpenAutoFocusEvent: (_ctx, evt) => evt.previousEvent?.type === \"OPEN_AUTOFOCUS\"\n      },\n      activities: {\n        trackPositioning(ctx2) {\n          if (ctx2.anchorPoint) return;\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackInteractOutside(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          let restoreFocus = true;\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_7__.trackDismissableElement)(getContentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx2)],\n            onInteractOutside: ctx2.onInteractOutside,\n            onFocusOutside: ctx2.onFocusOutside,\n            onEscapeKeyDown(event) {\n              ctx2.onEscapeKeyDown?.(event);\n              if (ctx2.isSubmenu) event.preventDefault();\n              closeRootMenu(ctx2);\n            },\n            onPointerDownOutside(event) {\n              restoreFocus = !event.detail.focusable;\n              ctx2.onPointerDownOutside?.(event);\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n            }\n          });\n        },\n        trackPointerMove(ctx2, _evt, { guards: guards2, send }) {\n          const { isWithinPolygon } = guards2;\n          ctx2.parent.state.context.suspendPointer = true;\n          const doc = dom.getDoc(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"pointermove\", (e) => {\n            const point = { x: e.clientX, y: e.clientY };\n            const isMovingToSubmenu = isWithinPolygon(ctx2, { point });\n            if (!isMovingToSubmenu) {\n              send(\"POINTER_MOVED_AWAY_FROM_SUBMENU\");\n              ctx2.parent.state.context.suspendPointer = false;\n            }\n          });\n        },\n        scrollToHighlightedItem(ctx2, _evt, { getState }) {\n          const exec = () => {\n            const state = getState();\n            if (state.event.type.startsWith(\"ITEM_POINTER\")) return;\n            const itemEl = dom.getHighlightedItemEl(ctx2);\n            const contentEl2 = dom.getContentEl(ctx2);\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.scrollIntoView)(itemEl, { rootEl: contentEl2, block: \"nearest\" });\n          };\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => exec());\n          const contentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(contentEl, {\n            defer: true,\n            attributes: [\"aria-activedescendant\"],\n            callback: exec\n          });\n        }\n      },\n      actions: {\n        setAnchorPoint(ctx2, evt) {\n          ctx2.anchorPoint = evt.point;\n        },\n        setSubmenuPlacement(ctx2) {\n          if (!ctx2.isSubmenu) return;\n          ctx2.positioning.placement = ctx2.isRtl ? \"left-start\" : \"right-start\";\n          ctx2.positioning.gutter = 0;\n        },\n        reposition(ctx2, evt) {\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          const getAnchorRect = ctx2.anchorPoint ? () => ({ width: 0, height: 0, ...ctx2.anchorPoint }) : void 0;\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            getAnchorRect,\n            ...evt.options ?? {},\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        setOptionState(_ctx, evt) {\n          if (!evt.option) return;\n          const { checked, onCheckedChange, type } = evt.option;\n          if (type === \"radio\") {\n            onCheckedChange?.(true);\n          } else if (type === \"checkbox\") {\n            onCheckedChange?.(!checked);\n          }\n        },\n        clickHighlightedItem(ctx2, _evt) {\n          const itemEl = dom.getHighlightedItemEl(ctx2);\n          if (!itemEl || itemEl.dataset.disabled) return;\n          queueMicrotask(() => itemEl.click());\n        },\n        setIntentPolygon(ctx2, evt) {\n          const menu = dom.getContentEl(ctx2);\n          const placement = ctx2.currentPlacement;\n          if (!menu || !placement) return;\n          const rect = menu.getBoundingClientRect();\n          const polygon = (0,_zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__.getElementPolygon)(rect, placement);\n          if (!polygon) return;\n          const rightSide = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementSide)(placement) === \"right\";\n          const bleed = rightSide ? -5 : 5;\n          ctx2.intentPolygon = [{ ...evt.point, x: evt.point.x + bleed }, ...polygon];\n        },\n        clearIntentPolygon(ctx2) {\n          ctx2.intentPolygon = null;\n        },\n        resumePointer(ctx2) {\n          if (!ctx2.parent) return;\n          ctx2.parent.state.context.suspendPointer = false;\n        },\n        setHighlightedItem(ctx2, evt) {\n          set.highlighted(ctx2, evt.id);\n        },\n        clearHighlightedItem(ctx2) {\n          set.highlighted(ctx2, null);\n        },\n        focusMenu(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            const initialFocusEl = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n              root: contentEl,\n              enabled: !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(contentEl, dom.getActiveElement(ctx2)),\n              filter(node) {\n                return !node.role?.startsWith(\"menuitem\");\n              }\n            });\n            initialFocusEl?.focus({ preventScroll: true });\n          });\n        },\n        highlightFirstItem(ctx2) {\n          const fn = !!dom.getContentEl(ctx2) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf;\n          fn(() => {\n            const first2 = dom.getFirstEl(ctx2);\n            if (!first2) return;\n            set.highlighted(ctx2, first2.id);\n          });\n        },\n        highlightLastItem(ctx2) {\n          const fn = !!dom.getContentEl(ctx2) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf;\n          fn(() => {\n            const last2 = dom.getLastEl(ctx2);\n            if (!last2) return;\n            set.highlighted(ctx2, last2.id);\n          });\n        },\n        highlightNextItem(ctx2, evt) {\n          const next = dom.getNextEl(ctx2, evt.loop);\n          set.highlighted(ctx2, next?.id ?? null);\n        },\n        highlightPrevItem(ctx2, evt) {\n          const prev = dom.getPrevEl(ctx2, evt.loop);\n          set.highlighted(ctx2, prev?.id ?? null);\n        },\n        invokeOnSelect(ctx2) {\n          if (!ctx2.highlightedValue) return;\n          ctx2.onSelect?.({ value: ctx2.highlightedValue });\n        },\n        focusTrigger(ctx2, evt) {\n          if (ctx2.isSubmenu || ctx2.anchorPoint || evt.restoreFocus === false) return;\n          queueMicrotask(() => dom.getTriggerEl(ctx2)?.focus({ preventScroll: true }));\n        },\n        highlightMatchedItem(ctx2, evt) {\n          const node = dom.getElemByKey(ctx2, evt.key);\n          if (!node) return;\n          set.highlighted(ctx2, node.id);\n        },\n        setParentMenu(ctx2, evt) {\n          ctx2.parent = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.ref)(evt.value);\n        },\n        setChildMenu(ctx2, evt) {\n          ctx2.children[evt.id] = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.ref)(evt.value);\n        },\n        closeRootMenu(ctx2) {\n          closeRootMenu(ctx2);\n        },\n        openSubmenu(ctx2) {\n          const item = dom.getHighlightedItemEl(ctx2);\n          const id = item?.getAttribute(\"data-uid\");\n          const child = id ? ctx2.children[id] : null;\n          child?.send(\"OPEN_AUTOFOCUS\");\n        },\n        focusParentMenu(ctx2) {\n          ctx2.parent?.send(\"FOCUS_MENU\");\n        },\n        setLastHighlightedItem(ctx2, evt) {\n          ctx2.lastHighlightedValue = evt.id;\n        },\n        restoreHighlightedItem(ctx2) {\n          if (!ctx2.lastHighlightedValue) return;\n          set.highlighted(ctx2, ctx2.lastHighlightedValue);\n          ctx2.lastHighlightedValue = null;\n        },\n        restoreParentHighlightedItem(ctx2) {\n          ctx2.parent?.send(\"HIGHLIGHTED.RESTORE\");\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      }\n    }\n  );\n}\nfunction closeRootMenu(ctx) {\n  let parent = ctx.parent;\n  while (parent && parent.state.context.isSubmenu) {\n    parent = parent.state.context.parent;\n  }\n  parent?.send(\"CLOSE\");\n}\nvar set = {\n  highlighted(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.highlightedValue, value)) return;\n    ctx.highlightedValue = value;\n    ctx.onHighlightChange?.({ highlightedValue: value });\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"anchorPoint\",\n  \"aria-label\",\n  \"closeOnSelect\",\n  \"composite\",\n  \"dir\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"navigate\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onSelect\",\n  \"open.controlled\",\n  \"open\",\n  \"positioning\",\n  \"typeahead\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"closeOnSelect\", \"disabled\", \"value\", \"valueText\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupLabelProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupProps);\nvar optionItemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"disabled\",\n  \"valueText\",\n  \"closeOnSelect\",\n  \"type\",\n  \"value\",\n  \"checked\",\n  \"onCheckedChange\"\n]);\nvar splitOptionItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(optionItemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/menu/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/number-input/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/number-input/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n/* harmony import */ var _internationalized_number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @internationalized/number */ \"(ssr)/./node_modules/@internationalized/number/dist/NumberParser.mjs\");\n\n\n\n\n\n\n\n// src/number-input.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"numberInput\").parts(\n  \"root\",\n  \"label\",\n  \"input\",\n  \"control\",\n  \"valueText\",\n  \"incrementTrigger\",\n  \"decrementTrigger\",\n  \"scrubber\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `number-input:${ctx.id}`,\n  getInputId: (ctx) => ctx.ids?.input ?? `number-input:${ctx.id}:input`,\n  getIncrementTriggerId: (ctx) => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`,\n  getDecrementTriggerId: (ctx) => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`,\n  getScrubberId: (ctx) => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`,\n  getCursorId: (ctx) => `number-input:${ctx.id}:cursor`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `number-input:${ctx.id}:label`,\n  getInputEl: (ctx) => dom.getById(ctx, dom.getInputId(ctx)),\n  getIncrementTriggerEl: (ctx) => dom.getById(ctx, dom.getIncrementTriggerId(ctx)),\n  getDecrementTriggerEl: (ctx) => dom.getById(ctx, dom.getDecrementTriggerId(ctx)),\n  getScrubberEl: (ctx) => dom.getById(ctx, dom.getScrubberId(ctx)),\n  getCursorEl: (ctx) => dom.getDoc(ctx).getElementById(dom.getCursorId(ctx)),\n  getPressedTriggerEl: (ctx, hint = ctx.hint) => {\n    let btnEl = null;\n    if (hint === \"increment\") {\n      btnEl = dom.getIncrementTriggerEl(ctx);\n    }\n    if (hint === \"decrement\") {\n      btnEl = dom.getDecrementTriggerEl(ctx);\n    }\n    return btnEl;\n  },\n  setupVirtualCursor(ctx) {\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) return;\n    dom.createVirtualCursor(ctx);\n    return () => {\n      dom.getCursorEl(ctx)?.remove();\n    };\n  },\n  preventTextSelection(ctx) {\n    const doc = dom.getDoc(ctx);\n    const html = doc.documentElement;\n    const body = doc.body;\n    body.style.pointerEvents = \"none\";\n    html.style.userSelect = \"none\";\n    html.style.cursor = \"ew-resize\";\n    return () => {\n      body.style.pointerEvents = \"\";\n      html.style.userSelect = \"\";\n      html.style.cursor = \"\";\n      if (!html.style.length) {\n        html.removeAttribute(\"style\");\n      }\n      if (!body.style.length) {\n        body.removeAttribute(\"style\");\n      }\n    };\n  },\n  getMousemoveValue(ctx, event) {\n    const win = dom.getWin(ctx);\n    const x = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(event.movementX, win.devicePixelRatio);\n    const y = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(event.movementY, win.devicePixelRatio);\n    let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n    if (ctx.isRtl && hint === \"increment\") hint = \"decrement\";\n    if (ctx.isRtl && hint === \"decrement\") hint = \"increment\";\n    const point = {\n      x: ctx.scrubberCursorPoint.x + x,\n      y: ctx.scrubberCursorPoint.y + y\n    };\n    const width = win.innerWidth;\n    const half = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, win.devicePixelRatio);\n    point.x = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.wrap)(point.x + half, width) - half;\n    return { hint, point };\n  },\n  createVirtualCursor(ctx) {\n    const doc = dom.getDoc(ctx);\n    const el = doc.createElement(\"div\");\n    el.className = \"scrubber--cursor\";\n    el.id = dom.getCursorId(ctx);\n    Object.assign(el.style, {\n      width: \"15px\",\n      height: \"15px\",\n      position: \"fixed\",\n      pointerEvents: \"none\",\n      left: \"0px\",\n      top: \"0px\",\n      zIndex: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.MAX_Z_INDEX,\n      transform: ctx.scrubberCursorPoint ? `translate3d(${ctx.scrubberCursorPoint.x}px, ${ctx.scrubberCursorPoint.y}px, 0px)` : void 0,\n      willChange: \"transform\"\n    });\n    el.innerHTML = `\n        <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n          <g transform=\"translate(2 3)\">\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n          </g>\n        </svg>`;\n    doc.body.appendChild(el);\n  }\n});\n\n// src/number-input.connect.ts\nfunction connect(state, send, normalize) {\n  const focused = state.hasTag(\"focus\");\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const empty = state.context.isValueEmpty;\n  const invalid = state.context.isOutOfRange || !!state.context.invalid;\n  const isIncrementDisabled = disabled || !state.context.canIncrement || readOnly;\n  const isDecrementDisabled = disabled || !state.context.canDecrement || readOnly;\n  const translations = state.context.translations;\n  return {\n    focused,\n    invalid,\n    empty,\n    value: state.context.formattedValue,\n    valueAsNumber: state.context.valueAsNumber,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send(\"VALUE.CLEAR\");\n    },\n    increment() {\n      send(\"VALUE.INCREMENT\");\n    },\n    decrement() {\n      send(\"VALUE.DECREMENT\");\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: state.context.max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: state.context.min });\n    },\n    focus() {\n      dom.getInputEl(state.context)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getInputId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(state.context.invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        role: \"spinbutton\",\n        defaultValue: state.context.formattedValue,\n        pattern: state.context.pattern,\n        inputMode: state.context.inputMode,\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": state.context.min,\n        \"aria-valuemax\": state.context.max,\n        \"aria-valuenow\": Number.isNaN(state.context.valueAsNumber) ? void 0 : state.context.valueAsNumber,\n        \"aria-valuetext\": state.context.valueText,\n        onFocus() {\n          send(\"INPUT.FOCUS\");\n        },\n        onBlur() {\n          send(\"INPUT.BLUR\");\n        },\n        onInput(event) {\n          send({ type: \"INPUT.CHANGE\", target: event.currentTarget, hint: \"set\" });\n        },\n        onBeforeInput(event) {\n          try {\n            const { selectionStart, selectionEnd, value } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = state.context.parser.isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {\n          }\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * state.context.step;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", step });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", step });\n              event.preventDefault();\n            },\n            Home() {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n              send(\"INPUT.HOME\");\n              event.preventDefault();\n            },\n            End() {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n              send(\"INPUT.END\");\n              event.preventDefault();\n            },\n            Enter() {\n              send(\"INPUT.ENTER\");\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getDecrementTriggerId(state.context),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isDecrementDisabled || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"decrement\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\", pointerType: event.pointerType });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\" });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getIncrementTriggerId(state.context),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"increment\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        },\n        onPointerLeave(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        id: dom.getScrubberId(state.context),\n        role: \"presentation\",\n        onMouseDown(event) {\n          if (disabled) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(event.currentTarget);\n          const dpr = win.devicePixelRatio;\n          point.x = point.x - (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, dpr);\n          point.y = point.y - (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, dpr);\n          send({ type: \"SCRUBBER.PRESS_DOWN\", point });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\n\n// src/cursor.ts\nfunction recordCursor(inputEl) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return;\n  try {\n    const { selectionStart: start, selectionEnd: end, value } = inputEl;\n    const beforeTxt = value.substring(0, start);\n    const afterTxt = value.substring(end);\n    return {\n      start,\n      end,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  } catch {\n  }\n}\nfunction restoreCursor(inputEl, selection) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return;\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);\n    return;\n  }\n  try {\n    const { value } = inputEl;\n    const { beforeTxt = \"\", afterTxt = \"\", start } = selection;\n    let startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1];\n      const newIndex = value.indexOf(beforeLastChar, start - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    inputEl.setSelectionRange(startPos, startPos);\n  } catch {\n  }\n}\nvar createFormatter = (locale, options = {}) => {\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.ref)(new Intl.NumberFormat(locale, options));\n};\nvar createParser = (locale, options = {}) => {\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.ref)(new _internationalized_number__WEBPACK_IMPORTED_MODULE_4__.NumberParser(locale, options));\n};\nvar parseValue = (ctx, value) => {\n  if (!ctx.formatOptions) return parseFloat(value);\n  return ctx.parser.parse(String(value));\n};\nvar formatValue = (ctx, value) => {\n  if (Number.isNaN(value)) return \"\";\n  if (!ctx.formatOptions) return value.toString();\n  return ctx.formatter.format(value);\n};\n\n// src/number-input.machine.ts\nvar { not, and } = _zag_js_core__WEBPACK_IMPORTED_MODULE_5__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)(\n    {\n      id: \"number-input\",\n      initial: \"idle\",\n      context: {\n        dir: \"ltr\",\n        locale: \"en-US\",\n        focusInputOnChange: true,\n        clampValueOnBlur: true,\n        allowOverflow: false,\n        inputMode: \"decimal\",\n        pattern: \"[0-9]*(.[0-9]+)?\",\n        value: \"\",\n        step: 1,\n        min: Number.MIN_SAFE_INTEGER,\n        max: Number.MAX_SAFE_INTEGER,\n        invalid: false,\n        spinOnPress: true,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        hint: null,\n        scrubberCursorPoint: null,\n        fieldsetDisabled: false,\n        formatter: createFormatter(ctx.locale || \"en-US\", ctx.formatOptions),\n        parser: createParser(ctx.locale || \"en-US\", ctx.formatOptions),\n        translations: {\n          incrementLabel: \"increment value\",\n          decrementLabel: \"decrease value\",\n          ...ctx.translations\n        }\n      },\n      computed: {\n        isRtl: (ctx2) => ctx2.dir === \"rtl\",\n        valueAsNumber: (ctx2) => parseValue(ctx2, ctx2.value),\n        formattedValue: (ctx2) => formatValue(ctx2, ctx2.valueAsNumber),\n        isAtMin: (ctx2) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueAtMin)(ctx2.valueAsNumber, ctx2.min),\n        isAtMax: (ctx2) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueAtMax)(ctx2.valueAsNumber, ctx2.max),\n        isOutOfRange: (ctx2) => !(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueWithinRange)(ctx2.valueAsNumber, ctx2.min, ctx2.max),\n        isValueEmpty: (ctx2) => ctx2.value === \"\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        canIncrement: (ctx2) => ctx2.allowOverflow || !ctx2.isAtMax,\n        canDecrement: (ctx2) => ctx2.allowOverflow || !ctx2.isAtMin,\n        valueText: (ctx2) => ctx2.translations.valueText?.(ctx2.value)\n      },\n      watch: {\n        formatOptions: [\"setFormatterAndParser\", \"syncInputElement\"],\n        locale: [\"setFormatterAndParser\", \"syncInputElement\"],\n        value: [\"syncInputElement\"],\n        isOutOfRange: [\"invokeOnInvalid\"],\n        scrubberCursorPoint: [\"setVirtualCursorPosition\"]\n      },\n      activities: [\"trackFormControl\"],\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setRawValue\", \"setHintToSet\"]\n        },\n        \"VALUE.CLEAR\": {\n          actions: [\"clearValue\"]\n        },\n        \"VALUE.INCREMENT\": {\n          actions: [\"increment\"]\n        },\n        \"VALUE.DECREMENT\": {\n          actions: [\"decrement\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            \"TRIGGER.PRESS_DOWN\": [\n              { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n              {\n                target: \"before:spin\",\n                actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n              }\n            ],\n            \"SCRUBBER.PRESS_DOWN\": {\n              target: \"scrubbing\",\n              actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n            },\n            \"INPUT.FOCUS\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"invokeOnFocus\"]\n            }\n          }\n        },\n        focused: {\n          tags: \"focus\",\n          activities: \"attachWheelListener\",\n          on: {\n            \"TRIGGER.PRESS_DOWN\": [\n              { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n              { target: \"before:spin\", actions: [\"focusInput\", \"setHint\"] }\n            ],\n            \"SCRUBBER.PRESS_DOWN\": {\n              target: \"scrubbing\",\n              actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n            },\n            \"INPUT.ARROW_UP\": {\n              actions: \"increment\"\n            },\n            \"INPUT.ARROW_DOWN\": {\n              actions: \"decrement\"\n            },\n            \"INPUT.HOME\": {\n              actions: \"decrementToMin\"\n            },\n            \"INPUT.END\": {\n              actions: \"incrementToMax\"\n            },\n            \"INPUT.CHANGE\": {\n              actions: [\"setValue\", \"setHint\"]\n            },\n            \"INPUT.BLUR\": [\n              {\n                guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n                target: \"idle\",\n                actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n              }\n            ],\n            \"INPUT.ENTER\": {\n              actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n            }\n          }\n        },\n        \"before:spin\": {\n          tags: \"focus\",\n          activities: \"trackButtonDisabled\",\n          entry: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.choose)([\n            { guard: \"isIncrementHint\", actions: \"increment\" },\n            { guard: \"isDecrementHint\", actions: \"decrement\" }\n          ]),\n          after: {\n            CHANGE_DELAY: {\n              target: \"spinning\",\n              guard: and(\"isInRange\", \"spinOnPress\")\n            }\n          },\n          on: {\n            \"TRIGGER.PRESS_UP\": [\n              { guard: \"isTouchPointer\", target: \"focused\", actions: \"clearHint\" },\n              { target: \"focused\", actions: [\"focusInput\", \"clearHint\"] }\n            ]\n          }\n        },\n        spinning: {\n          tags: \"focus\",\n          activities: \"trackButtonDisabled\",\n          every: [\n            {\n              delay: \"CHANGE_INTERVAL\",\n              guard: and(not(\"isAtMin\"), \"isIncrementHint\"),\n              actions: \"increment\"\n            },\n            {\n              delay: \"CHANGE_INTERVAL\",\n              guard: and(not(\"isAtMax\"), \"isDecrementHint\"),\n              actions: \"decrement\"\n            }\n          ],\n          on: {\n            \"TRIGGER.PRESS_UP\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"clearHint\"]\n            }\n          }\n        },\n        scrubbing: {\n          tags: \"focus\",\n          activities: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n          on: {\n            \"SCRUBBER.POINTER_UP\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"clearCursorPoint\"]\n            },\n            \"SCRUBBER.POINTER_MOVE\": [\n              {\n                guard: \"isIncrementHint\",\n                actions: [\"increment\", \"setCursorPoint\"]\n              },\n              {\n                guard: \"isDecrementHint\",\n                actions: [\"decrement\", \"setCursorPoint\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      delays: {\n        CHANGE_INTERVAL: 50,\n        CHANGE_DELAY: 300\n      },\n      guards: {\n        clampValueOnBlur: (ctx2) => ctx2.clampValueOnBlur,\n        isAtMin: (ctx2) => ctx2.isAtMin,\n        spinOnPress: (ctx2) => !!ctx2.spinOnPress,\n        isAtMax: (ctx2) => ctx2.isAtMax,\n        isInRange: (ctx2) => !ctx2.isOutOfRange,\n        isDecrementHint: (ctx2, evt) => (evt.hint ?? ctx2.hint) === \"decrement\",\n        isIncrementHint: (ctx2, evt) => (evt.hint ?? ctx2.hint) === \"increment\",\n        isTouchPointer: (_ctx, evt) => evt.pointerType === \"touch\"\n      },\n      activities: {\n        trackFormControl(ctx2, _evt, { initialContext }) {\n          const inputEl = dom.getInputEl(ctx2);\n          return (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_6__.trackFormControl)(inputEl, {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.value(ctx2, initialContext.value);\n            }\n          });\n        },\n        setupVirtualCursor(ctx2) {\n          return dom.setupVirtualCursor(ctx2);\n        },\n        preventTextSelection(ctx2) {\n          return dom.preventTextSelection(ctx2);\n        },\n        trackButtonDisabled(ctx2, _evt, { send }) {\n          const btn = dom.getPressedTriggerEl(ctx2, ctx2.hint);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(btn, {\n            attributes: [\"disabled\"],\n            callback() {\n              send({ type: \"TRIGGER.PRESS_UP\", src: \"attr\" });\n            }\n          });\n        },\n        attachWheelListener(ctx2, _evt, { send }) {\n          const inputEl = dom.getInputEl(ctx2);\n          if (!inputEl || !dom.isActiveElement(ctx2, inputEl) || !ctx2.allowMouseWheel) return;\n          function onWheel(event) {\n            event.preventDefault();\n            const dir = Math.sign(event.deltaY) * -1;\n            if (dir === 1) {\n              send(\"VALUE.INCREMENT\");\n            } else if (dir === -1) {\n              send(\"VALUE.DECREMENT\");\n            }\n          }\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(inputEl, \"wheel\", onWheel, { passive: false });\n        },\n        activatePointerLock(ctx2) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) return;\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.requestPointerLock)(dom.getDoc(ctx2));\n        },\n        trackMousemove(ctx2, _evt, { send }) {\n          const doc = dom.getDoc(ctx2);\n          function onMousemove(event) {\n            if (!ctx2.scrubberCursorPoint) return;\n            const value = dom.getMousemoveValue(ctx2, event);\n            if (!value.hint) return;\n            send({\n              type: \"SCRUBBER.POINTER_MOVE\",\n              hint: value.hint,\n              point: value.point\n            });\n          }\n          function onMouseup() {\n            send(\"SCRUBBER.POINTER_UP\");\n          }\n          return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.callAll)(\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"mousemove\", onMousemove, false),\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"mouseup\", onMouseup, false)\n          );\n        }\n      },\n      actions: {\n        focusInput(ctx2) {\n          if (!ctx2.focusInputOnChange) return;\n          const inputEl = dom.getInputEl(ctx2);\n          if (dom.isActiveElement(ctx2, inputEl)) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => inputEl?.focus({ preventScroll: true }));\n        },\n        increment(ctx2, evt) {\n          const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.incrementValue)(ctx2.valueAsNumber, evt.step ?? ctx2.step);\n          const value = formatValue(ctx2, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, ctx2.min, ctx2.max));\n          set.value(ctx2, value);\n        },\n        decrement(ctx2, evt) {\n          const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.decrementValue)(ctx2.valueAsNumber, evt.step ?? ctx2.step);\n          const value = formatValue(ctx2, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, ctx2.min, ctx2.max));\n          set.value(ctx2, value);\n        },\n        setClampedValue(ctx2) {\n          const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(ctx2.valueAsNumber, ctx2.min, ctx2.max);\n          set.value(ctx2, formatValue(ctx2, nextValue));\n        },\n        setRawValue(ctx2, evt) {\n          const parsedValue = parseValue(ctx2, evt.value);\n          const value = formatValue(ctx2, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(parsedValue, ctx2.min, ctx2.max));\n          set.value(ctx2, value);\n        },\n        setValue(ctx2, evt) {\n          const value = evt.target?.value ?? evt.value;\n          set.value(ctx2, value);\n        },\n        clearValue(ctx2) {\n          set.value(ctx2, \"\");\n        },\n        incrementToMax(ctx2) {\n          const value = formatValue(ctx2, ctx2.max);\n          set.value(ctx2, value);\n        },\n        decrementToMin(ctx2) {\n          const value = formatValue(ctx2, ctx2.min);\n          set.value(ctx2, value);\n        },\n        setHint(ctx2, evt) {\n          ctx2.hint = evt.hint;\n        },\n        clearHint(ctx2) {\n          ctx2.hint = null;\n        },\n        setHintToSet(ctx2) {\n          ctx2.hint = \"set\";\n        },\n        invokeOnFocus(ctx2) {\n          ctx2.onFocusChange?.({\n            focused: true,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        invokeOnBlur(ctx2) {\n          ctx2.onFocusChange?.({\n            focused: false,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        invokeOnInvalid(ctx2) {\n          if (!ctx2.isOutOfRange) return;\n          const reason = ctx2.valueAsNumber > ctx2.max ? \"rangeOverflow\" : \"rangeUnderflow\";\n          ctx2.onValueInvalid?.({\n            reason,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        syncInputElement(ctx2, evt) {\n          const value = evt.type.endsWith(\"CHANGE\") ? ctx2.value : ctx2.formattedValue;\n          sync.input(ctx2, value);\n        },\n        setFormattedValue(ctx2) {\n          set.value(ctx2, ctx2.formattedValue);\n        },\n        setCursorPoint(ctx2, evt) {\n          ctx2.scrubberCursorPoint = evt.point;\n        },\n        clearCursorPoint(ctx2) {\n          ctx2.scrubberCursorPoint = null;\n        },\n        setVirtualCursorPosition(ctx2) {\n          const cursorEl = dom.getCursorEl(ctx2);\n          if (!cursorEl || !ctx2.scrubberCursorPoint) return;\n          const { x, y } = ctx2.scrubberCursorPoint;\n          cursorEl.style.transform = `translate3d(${x}px, ${y}px, 0px)`;\n        },\n        setFormatterAndParser(ctx2) {\n          if (!ctx2.locale) return;\n          ctx2.formatter = createFormatter(ctx2.locale, ctx2.formatOptions);\n          ctx2.parser = createParser(ctx2.locale, ctx2.formatOptions);\n        }\n      },\n      compareFns: {\n        formatOptions: (a, b) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(a, b),\n        scrubberCursorPoint: (a, b) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(a, b)\n      }\n    }\n  );\n}\nvar sync = {\n  input(ctx, value) {\n    const inputEl = dom.getInputEl(ctx);\n    if (!inputEl) return;\n    const sel = recordCursor(inputEl);\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n      (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_6__.setElementValue)(inputEl, value);\n      restoreCursor(inputEl, sel);\n    });\n  }\n};\nvar invoke = {\n  onChange: (ctx) => {\n    ctx.onValueChange?.({\n      value: ctx.value,\n      valueAsNumber: ctx.valueAsNumber\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.onChange(ctx);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/number-input/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/pin-input/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/pin-input/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/pin-input.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"pinInput\").parts(\"root\", \"label\", \"input\", \"control\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `pin-input:${ctx.id}`,\n  getInputId: (ctx, id) => ctx.ids?.input?.(id) ?? `pin-input:${ctx.id}:${id}`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `pin-input:${ctx.id}:hidden`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `pin-input:${ctx.id}:label`,\n  getControlId: (ctx) => ctx.ids?.control ?? `pin-input:${ctx.id}:control`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getInputEls: (ctx) => {\n    const ownerId = CSS.escape(dom.getRootId(ctx));\n    const selector = `input[data-ownedby=${ownerId}]`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getRootEl(ctx), selector);\n  },\n  getInputEl: (ctx, id) => dom.getById(ctx, dom.getInputId(ctx, id)),\n  getFocusedInputEl: (ctx) => dom.getInputEls(ctx)[ctx.focusedIndex],\n  getFirstInputEl: (ctx) => dom.getInputEls(ctx)[0],\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx))\n});\n\n// src/pin-input.utils.ts\nvar REGEX = {\n  numeric: /^[0-9]+$/,\n  alphabetic: /^[A-Za-z]+$/,\n  alphanumeric: /^[a-zA-Z0-9]+$/i\n};\nfunction isValidType(ctx, value) {\n  if (!ctx.type) return true;\n  return !!REGEX[ctx.type]?.test(value);\n}\nfunction isValidValue(ctx, value) {\n  if (!ctx.pattern) return isValidType(ctx, value);\n  const regex = new RegExp(ctx.pattern, \"g\");\n  return regex.test(value);\n}\n\n// src/pin-input.connect.ts\nfunction connect(state, send, normalize) {\n  const complete = state.context.isValueComplete;\n  const invalid = state.context.invalid;\n  const focusedIndex = state.context.focusedIndex;\n  const translations = state.context.translations;\n  function focus() {\n    dom.getFirstInputEl(state.context)?.focus();\n  }\n  return {\n    focus,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    complete,\n    setValue(value) {\n      if (!Array.isArray(value)) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(\"[pin-input/setValue] value must be an array\");\n      }\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send({ type: \"VALUE.CLEAR\" });\n    },\n    setValueAtIndex(index, value) {\n      send({ type: \"VALUE.SET\", value, index });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.disabled),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        htmlFor: dom.getHiddenInputId(state.context),\n        id: dom.getLabelId(state.context),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.disabled),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        onClick(event) {\n          event.preventDefault();\n          focus();\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        \"aria-hidden\": true,\n        type: \"text\",\n        tabIndex: -1,\n        id: dom.getHiddenInputId(state.context),\n        readOnly: state.context.readOnly,\n        disabled: state.context.disabled,\n        required: state.context.required,\n        name: state.context.name,\n        form: state.context.form,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        maxLength: state.context.valueLength,\n        defaultValue: state.context.valueAsString\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context)\n      });\n    },\n    getInputProps(props) {\n      const { index } = props;\n      const inputType = state.context.type === \"numeric\" ? \"tel\" : \"text\";\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        disabled: state.context.disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.disabled),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        id: dom.getInputId(state.context, index.toString()),\n        \"data-ownedby\": dom.getRootId(state.context),\n        \"aria-label\": translations.inputLabel(index, state.context.valueLength),\n        inputMode: state.context.otp || state.context.type === \"numeric\" ? \"numeric\" : \"text\",\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        type: state.context.mask ? \"password\" : inputType,\n        defaultValue: state.context.value[index] || \"\",\n        readOnly: state.context.readOnly,\n        autoCapitalize: \"none\",\n        autoComplete: state.context.otp ? \"one-time-code\" : \"off\",\n        placeholder: focusedIndex === index ? \"\" : state.context.placeholder,\n        onBeforeInput(event) {\n          try {\n            const value = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getBeforeInputValue)(event);\n            const isValid = isValidValue(state.context, value);\n            if (!isValid) {\n              send({ type: \"VALUE.INVALID\", value });\n              event.preventDefault();\n            }\n            if (value.length > 2) {\n              event.currentTarget.setSelectionRange(0, 1, \"forward\");\n            }\n          } catch {\n          }\n        },\n        onChange(event) {\n          const evt = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getNativeEvent)(event);\n          const { value } = event.currentTarget;\n          if (evt.inputType === \"insertFromPaste\" || value.length > 2) {\n            send({ type: \"INPUT.PASTE\", value });\n            event.currentTarget.value = value[0];\n            event.preventDefault();\n            return;\n          }\n          if (evt.inputType === \"deleteContentBackward\") {\n            send(\"INPUT.BACKSPACE\");\n            return;\n          }\n          send({ type: \"INPUT.CHANGE\", value, index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const keyMap = {\n            Backspace() {\n              send(\"INPUT.BACKSPACE\");\n            },\n            Delete() {\n              send(\"INPUT.DELETE\");\n            },\n            ArrowLeft() {\n              send(\"INPUT.ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"INPUT.ARROW_RIGHT\");\n            },\n            Enter() {\n              send(\"INPUT.ENTER\");\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        },\n        onFocus() {\n          send({ type: \"INPUT.FOCUS\", index });\n        },\n        onBlur() {\n          send({ type: \"INPUT.BLUR\", index });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"pin-input\",\n      initial: \"idle\",\n      context: {\n        value: [],\n        placeholder: \"\\u25CB\",\n        otp: false,\n        type: \"numeric\",\n        ...ctx,\n        focusedIndex: -1,\n        translations: {\n          inputLabel: (index, length) => `pin code ${index + 1} of ${length}`,\n          ...ctx.translations\n        }\n      },\n      computed: {\n        valueLength: (ctx2) => ctx2.value.length,\n        filledValueLength: (ctx2) => ctx2.value.filter((v) => v?.trim() !== \"\").length,\n        isValueComplete: (ctx2) => ctx2.valueLength === ctx2.filledValueLength,\n        valueAsString: (ctx2) => ctx2.value.join(\"\"),\n        focusedValue: (ctx2) => ctx2.value[ctx2.focusedIndex] || \"\"\n      },\n      entry: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.choose)([\n        {\n          guard: \"autoFocus\",\n          actions: [\"setupValue\", \"setFocusIndexToFirst\"]\n        },\n        { actions: [\"setupValue\"] }\n      ]),\n      watch: {\n        focusedIndex: [\"focusInput\", \"selectInputIfNeeded\"],\n        value: [\"syncInputElements\"],\n        isValueComplete: [\"invokeOnComplete\", \"blurFocusedInputIfNeeded\"]\n      },\n      on: {\n        \"VALUE.SET\": [\n          {\n            guard: \"hasIndex\",\n            actions: [\"setValueAtIndex\"]\n          },\n          { actions: [\"setValue\"] }\n        ],\n        \"VALUE.CLEAR\": {\n          actions: [\"clearValue\", \"setFocusIndexToFirst\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            \"INPUT.FOCUS\": {\n              target: \"focused\",\n              actions: \"setFocusedIndex\"\n            }\n          }\n        },\n        focused: {\n          on: {\n            \"INPUT.CHANGE\": [\n              {\n                guard: \"isFinalValue\",\n                actions: [\"setFocusedValue\", \"syncInputValue\"]\n              },\n              {\n                actions: [\"setFocusedValue\", \"setNextFocusedIndex\", \"syncInputValue\"]\n              }\n            ],\n            \"INPUT.PASTE\": {\n              actions: [\"setPastedValue\", \"setLastValueFocusIndex\"]\n            },\n            \"INPUT.BLUR\": {\n              target: \"idle\",\n              actions: \"clearFocusedIndex\"\n            },\n            \"INPUT.DELETE\": {\n              guard: \"hasValue\",\n              actions: \"clearFocusedValue\"\n            },\n            \"INPUT.ARROW_LEFT\": {\n              actions: \"setPrevFocusedIndex\"\n            },\n            \"INPUT.ARROW_RIGHT\": {\n              actions: \"setNextFocusedIndex\"\n            },\n            \"INPUT.BACKSPACE\": [\n              {\n                guard: \"hasValue\",\n                actions: [\"clearFocusedValue\"]\n              },\n              {\n                actions: [\"setPrevFocusedIndex\", \"clearFocusedValue\"]\n              }\n            ],\n            \"INPUT.ENTER\": {\n              guard: \"isValueComplete\",\n              actions: \"requestFormSubmit\"\n            },\n            \"VALUE.INVALID\": {\n              actions: \"invokeOnInvalid\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        autoFocus: (ctx2) => !!ctx2.autoFocus,\n        isValueEmpty: (_ctx, evt) => evt.value === \"\",\n        hasValue: (ctx2) => ctx2.value[ctx2.focusedIndex] !== \"\",\n        isValueComplete: (ctx2) => ctx2.isValueComplete,\n        isFinalValue: (ctx2) => ctx2.filledValueLength + 1 === ctx2.valueLength && ctx2.value.findIndex((v) => v.trim() === \"\") === ctx2.focusedIndex,\n        hasIndex: (_ctx, evt) => evt.index !== void 0,\n        isDisabled: (ctx2) => !!ctx2.disabled\n      },\n      actions: {\n        setupValue(ctx2) {\n          if (ctx2.value.length) return;\n          const inputEls = dom.getInputEls(ctx2);\n          const emptyValues = Array.from({ length: inputEls.length }).fill(\"\");\n          assignValue(ctx2, emptyValues);\n        },\n        focusInput(ctx2) {\n          if (ctx2.focusedIndex === -1) return;\n          dom.getFocusedInputEl(ctx2)?.focus({ preventScroll: true });\n        },\n        selectInputIfNeeded(ctx2) {\n          if (!ctx2.selectOnFocus || ctx2.focusedIndex === -1) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getFocusedInputEl(ctx2)?.select();\n          });\n        },\n        invokeOnComplete(ctx2) {\n          if (!ctx2.isValueComplete) return;\n          ctx2.onValueComplete?.({\n            value: Array.from(ctx2.value),\n            valueAsString: ctx2.valueAsString\n          });\n        },\n        invokeOnInvalid(ctx2, evt) {\n          ctx2.onValueInvalid?.({\n            value: evt.value,\n            index: ctx2.focusedIndex\n          });\n        },\n        clearFocusedIndex(ctx2) {\n          ctx2.focusedIndex = -1;\n        },\n        setFocusedIndex(ctx2, evt) {\n          ctx2.focusedIndex = evt.index;\n        },\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        setFocusedValue(ctx2, evt) {\n          const nextValue = getNextValue(ctx2.focusedValue, evt.value);\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, nextValue);\n        },\n        revertInputValue(ctx2) {\n          const inputEl = dom.getFocusedInputEl(ctx2);\n          dom.setValue(inputEl, ctx2.focusedValue);\n        },\n        syncInputValue(ctx2, evt) {\n          const inputEl = dom.getInputEl(ctx2, evt.index.toString());\n          dom.setValue(inputEl, ctx2.value[evt.index]);\n        },\n        syncInputElements(ctx2) {\n          const inputEls = dom.getInputEls(ctx2);\n          inputEls.forEach((inputEl, index) => {\n            dom.setValue(inputEl, ctx2.value[index]);\n          });\n        },\n        setPastedValue(ctx2, evt) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const startIndex = Math.min(ctx2.focusedIndex, ctx2.filledValueLength);\n            const left = startIndex > 0 ? ctx2.valueAsString.substring(0, ctx2.focusedIndex) : \"\";\n            const right = evt.value.substring(0, ctx2.valueLength - startIndex);\n            const value = left + right;\n            set.value(ctx2, value.split(\"\"));\n          });\n        },\n        setValueAtIndex(ctx2, evt) {\n          const nextValue = getNextValue(ctx2.focusedValue, evt.value);\n          set.valueAtIndex(ctx2, evt.index, nextValue);\n        },\n        clearValue(ctx2) {\n          const nextValue = Array.from({ length: ctx2.valueLength }).fill(\"\");\n          set.value(ctx2, nextValue);\n        },\n        clearFocusedValue(ctx2) {\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, \"\");\n        },\n        setFocusIndexToFirst(ctx2) {\n          ctx2.focusedIndex = 0;\n        },\n        setNextFocusedIndex(ctx2) {\n          ctx2.focusedIndex = Math.min(ctx2.focusedIndex + 1, ctx2.valueLength - 1);\n        },\n        setPrevFocusedIndex(ctx2) {\n          ctx2.focusedIndex = Math.max(ctx2.focusedIndex - 1, 0);\n        },\n        setLastValueFocusIndex(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            ctx2.focusedIndex = Math.min(ctx2.filledValueLength, ctx2.valueLength - 1);\n          });\n        },\n        blurFocusedInputIfNeeded(ctx2) {\n          if (!ctx2.blurOnComplete) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getFocusedInputEl(ctx2)?.blur();\n          });\n        },\n        requestFormSubmit(ctx2) {\n          if (!ctx2.name || !ctx2.isValueComplete) return;\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          inputEl?.form?.requestSubmit();\n        }\n      }\n    }\n  );\n}\nfunction assignValue(ctx, value) {\n  const arr = Array.isArray(value) ? value : value.split(\"\").filter(Boolean);\n  arr.forEach((value2, index) => {\n    ctx.value[index] = value2;\n  });\n}\nfunction getNextValue(current, next) {\n  let nextValue = next;\n  if (current[0] === next[0]) nextValue = next[1];\n  else if (current[0] === next[1]) nextValue = next[0];\n  return nextValue.split(\"\")[nextValue.length - 1];\n}\nvar invoke = {\n  change(ctx) {\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value),\n      valueAsString: ctx.valueAsString\n    });\n    const inputEl = dom.getHiddenInputEl(ctx);\n    (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_4__.dispatchInputValueEvent)(inputEl, { value: ctx.valueAsString });\n  }\n};\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    assignValue(ctx, value);\n    invoke.change(ctx);\n  },\n  valueAtIndex(ctx, index, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value[index], value)) return;\n    ctx.value[index] = value;\n    invoke.change(ctx);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9waW4taW5wdXQvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFDMkk7QUFDL0g7QUFDUDtBQUNROztBQUU3RDtBQUNBLGNBQWMsOERBQWE7QUFDM0I7QUFDQSxVQUFVLDhEQUFXO0FBQ3JCLG9EQUFvRCxPQUFPO0FBQzNELGdFQUFnRSxPQUFPLEdBQUcsR0FBRztBQUM3RSxrRUFBa0UsT0FBTztBQUN6RSxzREFBc0QsT0FBTztBQUM3RCwwREFBMEQsT0FBTztBQUNqRTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsUUFBUTtBQUNuRCxXQUFXLDJEQUFRO0FBQ25CLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3REFBUztBQUNqQjtBQUNBLGFBQWEsMEJBQTBCO0FBQ3ZDLEtBQUs7QUFDTDtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDLEtBQUs7QUFDTDtBQUNBLGFBQWEsaUNBQWlDO0FBQzlDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFRO0FBQ2hDLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakMseUJBQXlCLDJEQUFRO0FBQ2pDLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFRO0FBQ2hDLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakMseUJBQXlCLDJEQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrRUFBbUI7QUFDbEM7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkRBQVE7QUFDaEMsd0JBQXdCLDJEQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsc0VBQW1CO0FBQzdDO0FBQ0E7QUFDQSxxQkFBcUIsOEJBQThCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxzQkFBc0IsaUVBQWM7QUFDcEMsa0JBQWtCLFFBQVE7QUFDMUI7QUFDQSxtQkFBbUIsNEJBQTRCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsb0NBQW9DO0FBQ3JELFNBQVM7QUFDVDtBQUNBO0FBQ0EsY0FBYyxtRUFBZ0I7QUFDOUIsY0FBYyxnRUFBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsOERBQVc7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxpQkFBaUIsNEJBQTRCO0FBQzdDLFNBQVM7QUFDVDtBQUNBLGlCQUFpQiwyQkFBMkI7QUFDNUM7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHNEQUFPO0FBQ3JCLFNBQVMsMkRBQWE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxXQUFXLEtBQUssT0FBTztBQUM1RTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxhQUFhLG9EQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyx5QkFBeUI7QUFDcEU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLCtDQUErQyxxQkFBcUI7QUFDcEUsU0FBUztBQUNUO0FBQ0E7QUFDQSxVQUFVLHNEQUFHO0FBQ2I7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQSxVQUFVLHNEQUFHO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EseUNBQXlDLDBCQUEwQjtBQUNuRTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsVUFBVSxzREFBRztBQUNiO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0EsVUFBVSxzREFBRztBQUNiO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxJQUFJLDJFQUF1QixZQUFZLDBCQUEwQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQU87QUFDZjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsUUFBUSxzREFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVxQyIsInNvdXJjZXMiOlsiL2hvbWUvc2FjaGEvRXBpdGVjaC9HLUVQSS0zMDAtUkVOLTMtMS1wcm9qZWN0d2Vlay1uYXRoYW4uamVhbm5vdC9mcm9udC9ub2RlX21vZHVsZXMvQHphZy1qcy9waW4taW5wdXQvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQW5hdG9teSB9IGZyb20gJ0B6YWctanMvYW5hdG9teSc7XG5pbXBvcnQgeyBjcmVhdGVTY29wZSwgcXVlcnlBbGwsIGRhdGFBdHRyLCB2aXN1YWxseUhpZGRlblN0eWxlLCBhcmlhQXR0ciwgZ2V0QmVmb3JlSW5wdXRWYWx1ZSwgZ2V0TmF0aXZlRXZlbnQsIGlzQ29tcG9zaW5nRXZlbnQsIGlzTW9kaWZpZXJLZXksIGdldEV2ZW50S2V5LCByYWYgfSBmcm9tICdAemFnLWpzL2RvbS1xdWVyeSc7XG5pbXBvcnQgeyBpbnZhcmlhbnQsIGNvbXBhY3QsIGlzRXF1YWwgfSBmcm9tICdAemFnLWpzL3V0aWxzJztcbmltcG9ydCB7IGNyZWF0ZU1hY2hpbmUsIGNob29zZSB9IGZyb20gJ0B6YWctanMvY29yZSc7XG5pbXBvcnQgeyBkaXNwYXRjaElucHV0VmFsdWVFdmVudCB9IGZyb20gJ0B6YWctanMvZm9ybS11dGlscyc7XG5cbi8vIHNyYy9waW4taW5wdXQuYW5hdG9teS50c1xudmFyIGFuYXRvbXkgPSBjcmVhdGVBbmF0b215KFwicGluSW5wdXRcIikucGFydHMoXCJyb290XCIsIFwibGFiZWxcIiwgXCJpbnB1dFwiLCBcImNvbnRyb2xcIik7XG52YXIgcGFydHMgPSBhbmF0b215LmJ1aWxkKCk7XG52YXIgZG9tID0gY3JlYXRlU2NvcGUoe1xuICBnZXRSb290SWQ6IChjdHgpID0+IGN0eC5pZHM/LnJvb3QgPz8gYHBpbi1pbnB1dDoke2N0eC5pZH1gLFxuICBnZXRJbnB1dElkOiAoY3R4LCBpZCkgPT4gY3R4Lmlkcz8uaW5wdXQ/LihpZCkgPz8gYHBpbi1pbnB1dDoke2N0eC5pZH06JHtpZH1gLFxuICBnZXRIaWRkZW5JbnB1dElkOiAoY3R4KSA9PiBjdHguaWRzPy5oaWRkZW5JbnB1dCA/PyBgcGluLWlucHV0OiR7Y3R4LmlkfTpoaWRkZW5gLFxuICBnZXRMYWJlbElkOiAoY3R4KSA9PiBjdHguaWRzPy5sYWJlbCA/PyBgcGluLWlucHV0OiR7Y3R4LmlkfTpsYWJlbGAsXG4gIGdldENvbnRyb2xJZDogKGN0eCkgPT4gY3R4Lmlkcz8uY29udHJvbCA/PyBgcGluLWlucHV0OiR7Y3R4LmlkfTpjb250cm9sYCxcbiAgZ2V0Um9vdEVsOiAoY3R4KSA9PiBkb20uZ2V0QnlJZChjdHgsIGRvbS5nZXRSb290SWQoY3R4KSksXG4gIGdldElucHV0RWxzOiAoY3R4KSA9PiB7XG4gICAgY29uc3Qgb3duZXJJZCA9IENTUy5lc2NhcGUoZG9tLmdldFJvb3RJZChjdHgpKTtcbiAgICBjb25zdCBzZWxlY3RvciA9IGBpbnB1dFtkYXRhLW93bmVkYnk9JHtvd25lcklkfV1gO1xuICAgIHJldHVybiBxdWVyeUFsbChkb20uZ2V0Um9vdEVsKGN0eCksIHNlbGVjdG9yKTtcbiAgfSxcbiAgZ2V0SW5wdXRFbDogKGN0eCwgaWQpID0+IGRvbS5nZXRCeUlkKGN0eCwgZG9tLmdldElucHV0SWQoY3R4LCBpZCkpLFxuICBnZXRGb2N1c2VkSW5wdXRFbDogKGN0eCkgPT4gZG9tLmdldElucHV0RWxzKGN0eClbY3R4LmZvY3VzZWRJbmRleF0sXG4gIGdldEZpcnN0SW5wdXRFbDogKGN0eCkgPT4gZG9tLmdldElucHV0RWxzKGN0eClbMF0sXG4gIGdldEhpZGRlbklucHV0RWw6IChjdHgpID0+IGRvbS5nZXRCeUlkKGN0eCwgZG9tLmdldEhpZGRlbklucHV0SWQoY3R4KSlcbn0pO1xuXG4vLyBzcmMvcGluLWlucHV0LnV0aWxzLnRzXG52YXIgUkVHRVggPSB7XG4gIG51bWVyaWM6IC9eWzAtOV0rJC8sXG4gIGFscGhhYmV0aWM6IC9eW0EtWmEtel0rJC8sXG4gIGFscGhhbnVtZXJpYzogL15bYS16QS1aMC05XSskL2lcbn07XG5mdW5jdGlvbiBpc1ZhbGlkVHlwZShjdHgsIHZhbHVlKSB7XG4gIGlmICghY3R4LnR5cGUpIHJldHVybiB0cnVlO1xuICByZXR1cm4gISFSRUdFWFtjdHgudHlwZV0/LnRlc3QodmFsdWUpO1xufVxuZnVuY3Rpb24gaXNWYWxpZFZhbHVlKGN0eCwgdmFsdWUpIHtcbiAgaWYgKCFjdHgucGF0dGVybikgcmV0dXJuIGlzVmFsaWRUeXBlKGN0eCwgdmFsdWUpO1xuICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoY3R4LnBhdHRlcm4sIFwiZ1wiKTtcbiAgcmV0dXJuIHJlZ2V4LnRlc3QodmFsdWUpO1xufVxuXG4vLyBzcmMvcGluLWlucHV0LmNvbm5lY3QudHNcbmZ1bmN0aW9uIGNvbm5lY3Qoc3RhdGUsIHNlbmQsIG5vcm1hbGl6ZSkge1xuICBjb25zdCBjb21wbGV0ZSA9IHN0YXRlLmNvbnRleHQuaXNWYWx1ZUNvbXBsZXRlO1xuICBjb25zdCBpbnZhbGlkID0gc3RhdGUuY29udGV4dC5pbnZhbGlkO1xuICBjb25zdCBmb2N1c2VkSW5kZXggPSBzdGF0ZS5jb250ZXh0LmZvY3VzZWRJbmRleDtcbiAgY29uc3QgdHJhbnNsYXRpb25zID0gc3RhdGUuY29udGV4dC50cmFuc2xhdGlvbnM7XG4gIGZ1bmN0aW9uIGZvY3VzKCkge1xuICAgIGRvbS5nZXRGaXJzdElucHV0RWwoc3RhdGUuY29udGV4dCk/LmZvY3VzKCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBmb2N1cyxcbiAgICB2YWx1ZTogc3RhdGUuY29udGV4dC52YWx1ZSxcbiAgICB2YWx1ZUFzU3RyaW5nOiBzdGF0ZS5jb250ZXh0LnZhbHVlQXNTdHJpbmcsXG4gICAgY29tcGxldGUsXG4gICAgc2V0VmFsdWUodmFsdWUpIHtcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaW52YXJpYW50KFwiW3Bpbi1pbnB1dC9zZXRWYWx1ZV0gdmFsdWUgbXVzdCBiZSBhbiBhcnJheVwiKTtcbiAgICAgIH1cbiAgICAgIHNlbmQoeyB0eXBlOiBcIlZBTFVFLlNFVFwiLCB2YWx1ZSB9KTtcbiAgICB9LFxuICAgIGNsZWFyVmFsdWUoKSB7XG4gICAgICBzZW5kKHsgdHlwZTogXCJWQUxVRS5DTEVBUlwiIH0pO1xuICAgIH0sXG4gICAgc2V0VmFsdWVBdEluZGV4KGluZGV4LCB2YWx1ZSkge1xuICAgICAgc2VuZCh7IHR5cGU6IFwiVkFMVUUuU0VUXCIsIHZhbHVlLCBpbmRleCB9KTtcbiAgICB9LFxuICAgIGdldFJvb3RQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIC4uLnBhcnRzLnJvb3QuYXR0cnMsXG4gICAgICAgIGlkOiBkb20uZ2V0Um9vdElkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBcImRhdGEtaW52YWxpZFwiOiBkYXRhQXR0cihpbnZhbGlkKSxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKHN0YXRlLmNvbnRleHQuZGlzYWJsZWQpLFxuICAgICAgICBcImRhdGEtY29tcGxldGVcIjogZGF0YUF0dHIoY29tcGxldGUpLFxuICAgICAgICBcImRhdGEtcmVhZG9ubHlcIjogZGF0YUF0dHIoc3RhdGUuY29udGV4dC5yZWFkT25seSlcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0TGFiZWxQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUubGFiZWwoe1xuICAgICAgICAuLi5wYXJ0cy5sYWJlbC5hdHRycyxcbiAgICAgICAgZGlyOiBzdGF0ZS5jb250ZXh0LmRpcixcbiAgICAgICAgaHRtbEZvcjogZG9tLmdldEhpZGRlbklucHV0SWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIGlkOiBkb20uZ2V0TGFiZWxJZChzdGF0ZS5jb250ZXh0KSxcbiAgICAgICAgXCJkYXRhLWludmFsaWRcIjogZGF0YUF0dHIoaW52YWxpZCksXG4gICAgICAgIFwiZGF0YS1kaXNhYmxlZFwiOiBkYXRhQXR0cihzdGF0ZS5jb250ZXh0LmRpc2FibGVkKSxcbiAgICAgICAgXCJkYXRhLWNvbXBsZXRlXCI6IGRhdGFBdHRyKGNvbXBsZXRlKSxcbiAgICAgICAgXCJkYXRhLXJlYWRvbmx5XCI6IGRhdGFBdHRyKHN0YXRlLmNvbnRleHQucmVhZE9ubHkpLFxuICAgICAgICBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBmb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEhpZGRlbklucHV0UHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmlucHV0KHtcbiAgICAgICAgXCJhcmlhLWhpZGRlblwiOiB0cnVlLFxuICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgdGFiSW5kZXg6IC0xLFxuICAgICAgICBpZDogZG9tLmdldEhpZGRlbklucHV0SWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIHJlYWRPbmx5OiBzdGF0ZS5jb250ZXh0LnJlYWRPbmx5LFxuICAgICAgICBkaXNhYmxlZDogc3RhdGUuY29udGV4dC5kaXNhYmxlZCxcbiAgICAgICAgcmVxdWlyZWQ6IHN0YXRlLmNvbnRleHQucmVxdWlyZWQsXG4gICAgICAgIG5hbWU6IHN0YXRlLmNvbnRleHQubmFtZSxcbiAgICAgICAgZm9ybTogc3RhdGUuY29udGV4dC5mb3JtLFxuICAgICAgICBzdHlsZTogdmlzdWFsbHlIaWRkZW5TdHlsZSxcbiAgICAgICAgbWF4TGVuZ3RoOiBzdGF0ZS5jb250ZXh0LnZhbHVlTGVuZ3RoLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IHN0YXRlLmNvbnRleHQudmFsdWVBc1N0cmluZ1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRDb250cm9sUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5jb250cm9sLmF0dHJzLFxuICAgICAgICBkaXI6IHN0YXRlLmNvbnRleHQuZGlyLFxuICAgICAgICBpZDogZG9tLmdldENvbnRyb2xJZChzdGF0ZS5jb250ZXh0KVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRJbnB1dFByb3BzKHByb3BzKSB7XG4gICAgICBjb25zdCB7IGluZGV4IH0gPSBwcm9wcztcbiAgICAgIGNvbnN0IGlucHV0VHlwZSA9IHN0YXRlLmNvbnRleHQudHlwZSA9PT0gXCJudW1lcmljXCIgPyBcInRlbFwiIDogXCJ0ZXh0XCI7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmlucHV0KHtcbiAgICAgICAgLi4ucGFydHMuaW5wdXQuYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGRpc2FibGVkOiBzdGF0ZS5jb250ZXh0LmRpc2FibGVkLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIoc3RhdGUuY29udGV4dC5kaXNhYmxlZCksXG4gICAgICAgIFwiZGF0YS1jb21wbGV0ZVwiOiBkYXRhQXR0cihjb21wbGV0ZSksXG4gICAgICAgIGlkOiBkb20uZ2V0SW5wdXRJZChzdGF0ZS5jb250ZXh0LCBpbmRleC50b1N0cmluZygpKSxcbiAgICAgICAgXCJkYXRhLW93bmVkYnlcIjogZG9tLmdldFJvb3RJZChzdGF0ZS5jb250ZXh0KSxcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRyYW5zbGF0aW9ucy5pbnB1dExhYmVsKGluZGV4LCBzdGF0ZS5jb250ZXh0LnZhbHVlTGVuZ3RoKSxcbiAgICAgICAgaW5wdXRNb2RlOiBzdGF0ZS5jb250ZXh0Lm90cCB8fCBzdGF0ZS5jb250ZXh0LnR5cGUgPT09IFwibnVtZXJpY1wiID8gXCJudW1lcmljXCIgOiBcInRleHRcIixcbiAgICAgICAgXCJhcmlhLWludmFsaWRcIjogYXJpYUF0dHIoaW52YWxpZCksXG4gICAgICAgIFwiZGF0YS1pbnZhbGlkXCI6IGRhdGFBdHRyKGludmFsaWQpLFxuICAgICAgICB0eXBlOiBzdGF0ZS5jb250ZXh0Lm1hc2sgPyBcInBhc3N3b3JkXCIgOiBpbnB1dFR5cGUsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogc3RhdGUuY29udGV4dC52YWx1ZVtpbmRleF0gfHwgXCJcIixcbiAgICAgICAgcmVhZE9ubHk6IHN0YXRlLmNvbnRleHQucmVhZE9ubHksXG4gICAgICAgIGF1dG9DYXBpdGFsaXplOiBcIm5vbmVcIixcbiAgICAgICAgYXV0b0NvbXBsZXRlOiBzdGF0ZS5jb250ZXh0Lm90cCA/IFwib25lLXRpbWUtY29kZVwiIDogXCJvZmZcIixcbiAgICAgICAgcGxhY2Vob2xkZXI6IGZvY3VzZWRJbmRleCA9PT0gaW5kZXggPyBcIlwiIDogc3RhdGUuY29udGV4dC5wbGFjZWhvbGRlcixcbiAgICAgICAgb25CZWZvcmVJbnB1dChldmVudCkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGdldEJlZm9yZUlucHV0VmFsdWUoZXZlbnQpO1xuICAgICAgICAgICAgY29uc3QgaXNWYWxpZCA9IGlzVmFsaWRWYWx1ZShzdGF0ZS5jb250ZXh0LCB2YWx1ZSk7XG4gICAgICAgICAgICBpZiAoIWlzVmFsaWQpIHtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiVkFMVUUuSU5WQUxJRFwiLCB2YWx1ZSB9KTtcbiAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2V0U2VsZWN0aW9uUmFuZ2UoMCwgMSwgXCJmb3J3YXJkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25DaGFuZ2UoZXZlbnQpIHtcbiAgICAgICAgICBjb25zdCBldnQgPSBnZXROYXRpdmVFdmVudChldmVudCk7XG4gICAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgICAgICAgICBpZiAoZXZ0LmlucHV0VHlwZSA9PT0gXCJpbnNlcnRGcm9tUGFzdGVcIiB8fCB2YWx1ZS5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJJTlBVVC5QQVNURVwiLCB2YWx1ZSB9KTtcbiAgICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWUgPSB2YWx1ZVswXTtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChldnQuaW5wdXRUeXBlID09PSBcImRlbGV0ZUNvbnRlbnRCYWNrd2FyZFwiKSB7XG4gICAgICAgICAgICBzZW5kKFwiSU5QVVQuQkFDS1NQQUNFXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJJTlBVVC5DSEFOR0VcIiwgdmFsdWUsIGluZGV4IH0pO1xuICAgICAgICB9LFxuICAgICAgICBvbktleURvd24oZXZlbnQpIHtcbiAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmIChpc0NvbXBvc2luZ0V2ZW50KGV2ZW50KSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChpc01vZGlmaWVyS2V5KGV2ZW50KSkgcmV0dXJuO1xuICAgICAgICAgIGNvbnN0IGtleU1hcCA9IHtcbiAgICAgICAgICAgIEJhY2tzcGFjZSgpIHtcbiAgICAgICAgICAgICAgc2VuZChcIklOUFVULkJBQ0tTUEFDRVwiKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBEZWxldGUoKSB7XG4gICAgICAgICAgICAgIHNlbmQoXCJJTlBVVC5ERUxFVEVcIik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgQXJyb3dMZWZ0KCkge1xuICAgICAgICAgICAgICBzZW5kKFwiSU5QVVQuQVJST1dfTEVGVFwiKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBBcnJvd1JpZ2h0KCkge1xuICAgICAgICAgICAgICBzZW5kKFwiSU5QVVQuQVJST1dfUklHSFRcIik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgRW50ZXIoKSB7XG4gICAgICAgICAgICAgIHNlbmQoXCJJTlBVVC5FTlRFUlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICAgIGNvbnN0IGV4ZWMgPSBrZXlNYXBbZ2V0RXZlbnRLZXkoZXZlbnQsIHN0YXRlLmNvbnRleHQpXTtcbiAgICAgICAgICBpZiAoZXhlYykge1xuICAgICAgICAgICAgZXhlYyhldmVudCk7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25Gb2N1cygpIHtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJJTlBVVC5GT0NVU1wiLCBpbmRleCB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25CbHVyKCkge1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIklOUFVULkJMVVJcIiwgaW5kZXggfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIG1hY2hpbmUodXNlckNvbnRleHQpIHtcbiAgY29uc3QgY3R4ID0gY29tcGFjdCh1c2VyQ29udGV4dCk7XG4gIHJldHVybiBjcmVhdGVNYWNoaW5lKFxuICAgIHtcbiAgICAgIGlkOiBcInBpbi1pbnB1dFwiLFxuICAgICAgaW5pdGlhbDogXCJpZGxlXCIsXG4gICAgICBjb250ZXh0OiB7XG4gICAgICAgIHZhbHVlOiBbXSxcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiXFx1MjVDQlwiLFxuICAgICAgICBvdHA6IGZhbHNlLFxuICAgICAgICB0eXBlOiBcIm51bWVyaWNcIixcbiAgICAgICAgLi4uY3R4LFxuICAgICAgICBmb2N1c2VkSW5kZXg6IC0xLFxuICAgICAgICB0cmFuc2xhdGlvbnM6IHtcbiAgICAgICAgICBpbnB1dExhYmVsOiAoaW5kZXgsIGxlbmd0aCkgPT4gYHBpbiBjb2RlICR7aW5kZXggKyAxfSBvZiAke2xlbmd0aH1gLFxuICAgICAgICAgIC4uLmN0eC50cmFuc2xhdGlvbnNcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNvbXB1dGVkOiB7XG4gICAgICAgIHZhbHVlTGVuZ3RoOiAoY3R4MikgPT4gY3R4Mi52YWx1ZS5sZW5ndGgsXG4gICAgICAgIGZpbGxlZFZhbHVlTGVuZ3RoOiAoY3R4MikgPT4gY3R4Mi52YWx1ZS5maWx0ZXIoKHYpID0+IHY/LnRyaW0oKSAhPT0gXCJcIikubGVuZ3RoLFxuICAgICAgICBpc1ZhbHVlQ29tcGxldGU6IChjdHgyKSA9PiBjdHgyLnZhbHVlTGVuZ3RoID09PSBjdHgyLmZpbGxlZFZhbHVlTGVuZ3RoLFxuICAgICAgICB2YWx1ZUFzU3RyaW5nOiAoY3R4MikgPT4gY3R4Mi52YWx1ZS5qb2luKFwiXCIpLFxuICAgICAgICBmb2N1c2VkVmFsdWU6IChjdHgyKSA9PiBjdHgyLnZhbHVlW2N0eDIuZm9jdXNlZEluZGV4XSB8fCBcIlwiXG4gICAgICB9LFxuICAgICAgZW50cnk6IGNob29zZShbXG4gICAgICAgIHtcbiAgICAgICAgICBndWFyZDogXCJhdXRvRm9jdXNcIixcbiAgICAgICAgICBhY3Rpb25zOiBbXCJzZXR1cFZhbHVlXCIsIFwic2V0Rm9jdXNJbmRleFRvRmlyc3RcIl1cbiAgICAgICAgfSxcbiAgICAgICAgeyBhY3Rpb25zOiBbXCJzZXR1cFZhbHVlXCJdIH1cbiAgICAgIF0pLFxuICAgICAgd2F0Y2g6IHtcbiAgICAgICAgZm9jdXNlZEluZGV4OiBbXCJmb2N1c0lucHV0XCIsIFwic2VsZWN0SW5wdXRJZk5lZWRlZFwiXSxcbiAgICAgICAgdmFsdWU6IFtcInN5bmNJbnB1dEVsZW1lbnRzXCJdLFxuICAgICAgICBpc1ZhbHVlQ29tcGxldGU6IFtcImludm9rZU9uQ29tcGxldGVcIiwgXCJibHVyRm9jdXNlZElucHV0SWZOZWVkZWRcIl1cbiAgICAgIH0sXG4gICAgICBvbjoge1xuICAgICAgICBcIlZBTFVFLlNFVFwiOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IFwiaGFzSW5kZXhcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldFZhbHVlQXRJbmRleFwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgeyBhY3Rpb25zOiBbXCJzZXRWYWx1ZVwiXSB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiVkFMVUUuQ0xFQVJcIjoge1xuICAgICAgICAgIGFjdGlvbnM6IFtcImNsZWFyVmFsdWVcIiwgXCJzZXRGb2N1c0luZGV4VG9GaXJzdFwiXVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3RhdGVzOiB7XG4gICAgICAgIGlkbGU6IHtcbiAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgXCJJTlBVVC5GT0NVU1wiOiB7XG4gICAgICAgICAgICAgIHRhcmdldDogXCJmb2N1c2VkXCIsXG4gICAgICAgICAgICAgIGFjdGlvbnM6IFwic2V0Rm9jdXNlZEluZGV4XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGZvY3VzZWQ6IHtcbiAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgXCJJTlBVVC5DSEFOR0VcIjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZ3VhcmQ6IFwiaXNGaW5hbFZhbHVlXCIsXG4gICAgICAgICAgICAgICAgYWN0aW9uczogW1wic2V0Rm9jdXNlZFZhbHVlXCIsIFwic3luY0lucHV0VmFsdWVcIl1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldEZvY3VzZWRWYWx1ZVwiLCBcInNldE5leHRGb2N1c2VkSW5kZXhcIiwgXCJzeW5jSW5wdXRWYWx1ZVwiXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgXCJJTlBVVC5QQVNURVwiOiB7XG4gICAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldFBhc3RlZFZhbHVlXCIsIFwic2V0TGFzdFZhbHVlRm9jdXNJbmRleFwiXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiSU5QVVQuQkxVUlwiOiB7XG4gICAgICAgICAgICAgIHRhcmdldDogXCJpZGxlXCIsXG4gICAgICAgICAgICAgIGFjdGlvbnM6IFwiY2xlYXJGb2N1c2VkSW5kZXhcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiSU5QVVQuREVMRVRFXCI6IHtcbiAgICAgICAgICAgICAgZ3VhcmQ6IFwiaGFzVmFsdWVcIixcbiAgICAgICAgICAgICAgYWN0aW9uczogXCJjbGVhckZvY3VzZWRWYWx1ZVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJJTlBVVC5BUlJPV19MRUZUXCI6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogXCJzZXRQcmV2Rm9jdXNlZEluZGV4XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIklOUFVULkFSUk9XX1JJR0hUXCI6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogXCJzZXROZXh0Rm9jdXNlZEluZGV4XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIklOUFVULkJBQ0tTUEFDRVwiOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBndWFyZDogXCJoYXNWYWx1ZVwiLFxuICAgICAgICAgICAgICAgIGFjdGlvbnM6IFtcImNsZWFyRm9jdXNlZFZhbHVlXCJdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRQcmV2Rm9jdXNlZEluZGV4XCIsIFwiY2xlYXJGb2N1c2VkVmFsdWVcIl1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFwiSU5QVVQuRU5URVJcIjoge1xuICAgICAgICAgICAgICBndWFyZDogXCJpc1ZhbHVlQ29tcGxldGVcIixcbiAgICAgICAgICAgICAgYWN0aW9uczogXCJyZXF1ZXN0Rm9ybVN1Ym1pdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJWQUxVRS5JTlZBTElEXCI6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogXCJpbnZva2VPbkludmFsaWRcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgZ3VhcmRzOiB7XG4gICAgICAgIGF1dG9Gb2N1czogKGN0eDIpID0+ICEhY3R4Mi5hdXRvRm9jdXMsXG4gICAgICAgIGlzVmFsdWVFbXB0eTogKF9jdHgsIGV2dCkgPT4gZXZ0LnZhbHVlID09PSBcIlwiLFxuICAgICAgICBoYXNWYWx1ZTogKGN0eDIpID0+IGN0eDIudmFsdWVbY3R4Mi5mb2N1c2VkSW5kZXhdICE9PSBcIlwiLFxuICAgICAgICBpc1ZhbHVlQ29tcGxldGU6IChjdHgyKSA9PiBjdHgyLmlzVmFsdWVDb21wbGV0ZSxcbiAgICAgICAgaXNGaW5hbFZhbHVlOiAoY3R4MikgPT4gY3R4Mi5maWxsZWRWYWx1ZUxlbmd0aCArIDEgPT09IGN0eDIudmFsdWVMZW5ndGggJiYgY3R4Mi52YWx1ZS5maW5kSW5kZXgoKHYpID0+IHYudHJpbSgpID09PSBcIlwiKSA9PT0gY3R4Mi5mb2N1c2VkSW5kZXgsXG4gICAgICAgIGhhc0luZGV4OiAoX2N0eCwgZXZ0KSA9PiBldnQuaW5kZXggIT09IHZvaWQgMCxcbiAgICAgICAgaXNEaXNhYmxlZDogKGN0eDIpID0+ICEhY3R4Mi5kaXNhYmxlZFxuICAgICAgfSxcbiAgICAgIGFjdGlvbnM6IHtcbiAgICAgICAgc2V0dXBWYWx1ZShjdHgyKSB7XG4gICAgICAgICAgaWYgKGN0eDIudmFsdWUubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgY29uc3QgaW5wdXRFbHMgPSBkb20uZ2V0SW5wdXRFbHMoY3R4Mik7XG4gICAgICAgICAgY29uc3QgZW1wdHlWYWx1ZXMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBpbnB1dEVscy5sZW5ndGggfSkuZmlsbChcIlwiKTtcbiAgICAgICAgICBhc3NpZ25WYWx1ZShjdHgyLCBlbXB0eVZhbHVlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIGZvY3VzSW5wdXQoY3R4Mikge1xuICAgICAgICAgIGlmIChjdHgyLmZvY3VzZWRJbmRleCA9PT0gLTEpIHJldHVybjtcbiAgICAgICAgICBkb20uZ2V0Rm9jdXNlZElucHV0RWwoY3R4Mik/LmZvY3VzKHsgcHJldmVudFNjcm9sbDogdHJ1ZSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2VsZWN0SW5wdXRJZk5lZWRlZChjdHgyKSB7XG4gICAgICAgICAgaWYgKCFjdHgyLnNlbGVjdE9uRm9jdXMgfHwgY3R4Mi5mb2N1c2VkSW5kZXggPT09IC0xKSByZXR1cm47XG4gICAgICAgICAgcmFmKCgpID0+IHtcbiAgICAgICAgICAgIGRvbS5nZXRGb2N1c2VkSW5wdXRFbChjdHgyKT8uc2VsZWN0KCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGludm9rZU9uQ29tcGxldGUoY3R4Mikge1xuICAgICAgICAgIGlmICghY3R4Mi5pc1ZhbHVlQ29tcGxldGUpIHJldHVybjtcbiAgICAgICAgICBjdHgyLm9uVmFsdWVDb21wbGV0ZT8uKHtcbiAgICAgICAgICAgIHZhbHVlOiBBcnJheS5mcm9tKGN0eDIudmFsdWUpLFxuICAgICAgICAgICAgdmFsdWVBc1N0cmluZzogY3R4Mi52YWx1ZUFzU3RyaW5nXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGludm9rZU9uSW52YWxpZChjdHgyLCBldnQpIHtcbiAgICAgICAgICBjdHgyLm9uVmFsdWVJbnZhbGlkPy4oe1xuICAgICAgICAgICAgdmFsdWU6IGV2dC52YWx1ZSxcbiAgICAgICAgICAgIGluZGV4OiBjdHgyLmZvY3VzZWRJbmRleFxuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBjbGVhckZvY3VzZWRJbmRleChjdHgyKSB7XG4gICAgICAgICAgY3R4Mi5mb2N1c2VkSW5kZXggPSAtMTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0Rm9jdXNlZEluZGV4KGN0eDIsIGV2dCkge1xuICAgICAgICAgIGN0eDIuZm9jdXNlZEluZGV4ID0gZXZ0LmluZGV4O1xuICAgICAgICB9LFxuICAgICAgICBzZXRWYWx1ZShjdHgyLCBldnQpIHtcbiAgICAgICAgICBzZXQudmFsdWUoY3R4MiwgZXZ0LnZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0Rm9jdXNlZFZhbHVlKGN0eDIsIGV2dCkge1xuICAgICAgICAgIGNvbnN0IG5leHRWYWx1ZSA9IGdldE5leHRWYWx1ZShjdHgyLmZvY3VzZWRWYWx1ZSwgZXZ0LnZhbHVlKTtcbiAgICAgICAgICBzZXQudmFsdWVBdEluZGV4KGN0eDIsIGN0eDIuZm9jdXNlZEluZGV4LCBuZXh0VmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICByZXZlcnRJbnB1dFZhbHVlKGN0eDIpIHtcbiAgICAgICAgICBjb25zdCBpbnB1dEVsID0gZG9tLmdldEZvY3VzZWRJbnB1dEVsKGN0eDIpO1xuICAgICAgICAgIGRvbS5zZXRWYWx1ZShpbnB1dEVsLCBjdHgyLmZvY3VzZWRWYWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHN5bmNJbnB1dFZhbHVlKGN0eDIsIGV2dCkge1xuICAgICAgICAgIGNvbnN0IGlucHV0RWwgPSBkb20uZ2V0SW5wdXRFbChjdHgyLCBldnQuaW5kZXgudG9TdHJpbmcoKSk7XG4gICAgICAgICAgZG9tLnNldFZhbHVlKGlucHV0RWwsIGN0eDIudmFsdWVbZXZ0LmluZGV4XSk7XG4gICAgICAgIH0sXG4gICAgICAgIHN5bmNJbnB1dEVsZW1lbnRzKGN0eDIpIHtcbiAgICAgICAgICBjb25zdCBpbnB1dEVscyA9IGRvbS5nZXRJbnB1dEVscyhjdHgyKTtcbiAgICAgICAgICBpbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgZG9tLnNldFZhbHVlKGlucHV0RWwsIGN0eDIudmFsdWVbaW5kZXhdKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0UGFzdGVkVmFsdWUoY3R4MiwgZXZ0KSB7XG4gICAgICAgICAgcmFmKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHN0YXJ0SW5kZXggPSBNYXRoLm1pbihjdHgyLmZvY3VzZWRJbmRleCwgY3R4Mi5maWxsZWRWYWx1ZUxlbmd0aCk7XG4gICAgICAgICAgICBjb25zdCBsZWZ0ID0gc3RhcnRJbmRleCA+IDAgPyBjdHgyLnZhbHVlQXNTdHJpbmcuc3Vic3RyaW5nKDAsIGN0eDIuZm9jdXNlZEluZGV4KSA6IFwiXCI7XG4gICAgICAgICAgICBjb25zdCByaWdodCA9IGV2dC52YWx1ZS5zdWJzdHJpbmcoMCwgY3R4Mi52YWx1ZUxlbmd0aCAtIHN0YXJ0SW5kZXgpO1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBsZWZ0ICsgcmlnaHQ7XG4gICAgICAgICAgICBzZXQudmFsdWUoY3R4MiwgdmFsdWUuc3BsaXQoXCJcIikpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBzZXRWYWx1ZUF0SW5kZXgoY3R4MiwgZXZ0KSB7XG4gICAgICAgICAgY29uc3QgbmV4dFZhbHVlID0gZ2V0TmV4dFZhbHVlKGN0eDIuZm9jdXNlZFZhbHVlLCBldnQudmFsdWUpO1xuICAgICAgICAgIHNldC52YWx1ZUF0SW5kZXgoY3R4MiwgZXZ0LmluZGV4LCBuZXh0VmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBjbGVhclZhbHVlKGN0eDIpIHtcbiAgICAgICAgICBjb25zdCBuZXh0VmFsdWUgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBjdHgyLnZhbHVlTGVuZ3RoIH0pLmZpbGwoXCJcIik7XG4gICAgICAgICAgc2V0LnZhbHVlKGN0eDIsIG5leHRWYWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGNsZWFyRm9jdXNlZFZhbHVlKGN0eDIpIHtcbiAgICAgICAgICBzZXQudmFsdWVBdEluZGV4KGN0eDIsIGN0eDIuZm9jdXNlZEluZGV4LCBcIlwiKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0Rm9jdXNJbmRleFRvRmlyc3QoY3R4Mikge1xuICAgICAgICAgIGN0eDIuZm9jdXNlZEluZGV4ID0gMDtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0TmV4dEZvY3VzZWRJbmRleChjdHgyKSB7XG4gICAgICAgICAgY3R4Mi5mb2N1c2VkSW5kZXggPSBNYXRoLm1pbihjdHgyLmZvY3VzZWRJbmRleCArIDEsIGN0eDIudmFsdWVMZW5ndGggLSAxKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0UHJldkZvY3VzZWRJbmRleChjdHgyKSB7XG4gICAgICAgICAgY3R4Mi5mb2N1c2VkSW5kZXggPSBNYXRoLm1heChjdHgyLmZvY3VzZWRJbmRleCAtIDEsIDApO1xuICAgICAgICB9LFxuICAgICAgICBzZXRMYXN0VmFsdWVGb2N1c0luZGV4KGN0eDIpIHtcbiAgICAgICAgICByYWYoKCkgPT4ge1xuICAgICAgICAgICAgY3R4Mi5mb2N1c2VkSW5kZXggPSBNYXRoLm1pbihjdHgyLmZpbGxlZFZhbHVlTGVuZ3RoLCBjdHgyLnZhbHVlTGVuZ3RoIC0gMSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGJsdXJGb2N1c2VkSW5wdXRJZk5lZWRlZChjdHgyKSB7XG4gICAgICAgICAgaWYgKCFjdHgyLmJsdXJPbkNvbXBsZXRlKSByZXR1cm47XG4gICAgICAgICAgcmFmKCgpID0+IHtcbiAgICAgICAgICAgIGRvbS5nZXRGb2N1c2VkSW5wdXRFbChjdHgyKT8uYmx1cigpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICByZXF1ZXN0Rm9ybVN1Ym1pdChjdHgyKSB7XG4gICAgICAgICAgaWYgKCFjdHgyLm5hbWUgfHwgIWN0eDIuaXNWYWx1ZUNvbXBsZXRlKSByZXR1cm47XG4gICAgICAgICAgY29uc3QgaW5wdXRFbCA9IGRvbS5nZXRIaWRkZW5JbnB1dEVsKGN0eDIpO1xuICAgICAgICAgIGlucHV0RWw/LmZvcm0/LnJlcXVlc3RTdWJtaXQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgKTtcbn1cbmZ1bmN0aW9uIGFzc2lnblZhbHVlKGN0eCwgdmFsdWUpIHtcbiAgY29uc3QgYXJyID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IHZhbHVlLnNwbGl0KFwiXCIpLmZpbHRlcihCb29sZWFuKTtcbiAgYXJyLmZvckVhY2goKHZhbHVlMiwgaW5kZXgpID0+IHtcbiAgICBjdHgudmFsdWVbaW5kZXhdID0gdmFsdWUyO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGdldE5leHRWYWx1ZShjdXJyZW50LCBuZXh0KSB7XG4gIGxldCBuZXh0VmFsdWUgPSBuZXh0O1xuICBpZiAoY3VycmVudFswXSA9PT0gbmV4dFswXSkgbmV4dFZhbHVlID0gbmV4dFsxXTtcbiAgZWxzZSBpZiAoY3VycmVudFswXSA9PT0gbmV4dFsxXSkgbmV4dFZhbHVlID0gbmV4dFswXTtcbiAgcmV0dXJuIG5leHRWYWx1ZS5zcGxpdChcIlwiKVtuZXh0VmFsdWUubGVuZ3RoIC0gMV07XG59XG52YXIgaW52b2tlID0ge1xuICBjaGFuZ2UoY3R4KSB7XG4gICAgY3R4Lm9uVmFsdWVDaGFuZ2U/Lih7XG4gICAgICB2YWx1ZTogQXJyYXkuZnJvbShjdHgudmFsdWUpLFxuICAgICAgdmFsdWVBc1N0cmluZzogY3R4LnZhbHVlQXNTdHJpbmdcbiAgICB9KTtcbiAgICBjb25zdCBpbnB1dEVsID0gZG9tLmdldEhpZGRlbklucHV0RWwoY3R4KTtcbiAgICBkaXNwYXRjaElucHV0VmFsdWVFdmVudChpbnB1dEVsLCB7IHZhbHVlOiBjdHgudmFsdWVBc1N0cmluZyB9KTtcbiAgfVxufTtcbnZhciBzZXQgPSB7XG4gIHZhbHVlKGN0eCwgdmFsdWUpIHtcbiAgICBpZiAoaXNFcXVhbChjdHgudmFsdWUsIHZhbHVlKSkgcmV0dXJuO1xuICAgIGFzc2lnblZhbHVlKGN0eCwgdmFsdWUpO1xuICAgIGludm9rZS5jaGFuZ2UoY3R4KTtcbiAgfSxcbiAgdmFsdWVBdEluZGV4KGN0eCwgaW5kZXgsIHZhbHVlKSB7XG4gICAgaWYgKGlzRXF1YWwoY3R4LnZhbHVlW2luZGV4XSwgdmFsdWUpKSByZXR1cm47XG4gICAgY3R4LnZhbHVlW2luZGV4XSA9IHZhbHVlO1xuICAgIGludm9rZS5jaGFuZ2UoY3R4KTtcbiAgfVxufTtcblxuZXhwb3J0IHsgYW5hdG9teSwgY29ubmVjdCwgbWFjaGluZSB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/pin-input/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/popover/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/popover/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/focus-trap */ \"(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\");\n/* harmony import */ var _zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/remove-scroll */ \"(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n// src/popover.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"popover\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"anchor\",\n  \"trigger\",\n  \"indicator\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getAnchorId: (ctx) => ctx.ids?.anchor ?? `popover:${ctx.id}:anchor`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `popover:${ctx.id}:trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `popover:${ctx.id}:content`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `popover:${ctx.id}:popper`,\n  getArrowId: (ctx) => ctx.ids?.arrow ?? `popover:${ctx.id}:arrow`,\n  getTitleId: (ctx) => ctx.ids?.title ?? `popover:${ctx.id}:title`,\n  getDescriptionId: (ctx) => ctx.ids?.description ?? `popover:${ctx.id}:desc`,\n  getCloseTriggerId: (ctx) => ctx.ids?.closeTrigger ?? `popover:${ctx.id}:close`,\n  getAnchorEl: (ctx) => dom.getById(ctx, dom.getAnchorId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getTitleEl: (ctx) => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: (ctx) => dom.getById(ctx, dom.getDescriptionId(ctx)),\n  getFocusableEls: (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getFocusables)(dom.getContentEl(ctx)),\n  getFirstFocusableEl: (ctx) => dom.getFocusableEls(ctx)[0]\n});\n\n// src/popover.connect.ts\nfunction connect(state, send, normalize) {\n  const open = state.matches(\"open\");\n  const currentPlacement = state.context.currentPlacement;\n  const portalled = state.context.currentPortalled;\n  const rendered = state.context.renderedElements;\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: currentPlacement\n  });\n  return {\n    portalled,\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getAnchorProps() {\n      return normalize.element({\n        ...parts.anchor.attrs,\n        dir: state.context.dir,\n        id: dom.getAnchorId(state.context)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        \"data-placement\": currentPlacement,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onPointerDown(event) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"TOGGLE\");\n        },\n        onBlur(event) {\n          send({ type: \"TRIGGER_BLUR\", target: event.relatedTarget });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: dom.getPositionerId(state.context),\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        role: \"dialog\",\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(open),\n        \"aria-labelledby\": rendered.title ? dom.getTitleId(state.context) : void 0,\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : void 0,\n        \"data-placement\": currentPlacement\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: dom.getTitleId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: dom.getDescriptionId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": \"close\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"CLOSE\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)(\n    {\n      id: \"popover\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        closeOnInteractOutside: true,\n        closeOnEscape: true,\n        autoFocus: true,\n        modal: false,\n        portalled: true,\n        positioning: {\n          placement: \"bottom\",\n          ...ctx.positioning\n        },\n        currentPlacement: void 0,\n        ...ctx,\n        renderedElements: {\n          title: true,\n          description: true\n        }\n      },\n      computed: {\n        currentPortalled: (ctx2) => !!ctx2.modal || !!ctx2.portalled\n      },\n      watch: {\n        open: [\"toggleVisibility\"]\n      },\n      entry: [\"checkRenderedElements\"],\n      states: {\n        closed: {\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\",\n              actions: [\"setInitialFocus\"]\n            },\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ]\n          }\n        },\n        open: {\n          activities: [\n            \"trapFocus\",\n            \"preventScroll\",\n            \"hideContentBelow\",\n            \"trackPositioning\",\n            \"trackDismissableElement\",\n            \"proxyTabFocus\"\n          ],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\",\n              actions: [\"setFinalFocus\"]\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\", \"setFinalFocus\"]\n              }\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackPositioning(ctx2) {\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const anchorEl = dom.getAnchorEl(ctx2) ?? dom.getTriggerEl(ctx2);\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(anchorEl, getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          let restoreFocus = true;\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__.trackDismissableElement)(getContentEl, {\n            pointerBlocking: ctx2.modal,\n            exclude: dom.getTriggerEl(ctx2),\n            defer: true,\n            onEscapeKeyDown(event) {\n              ctx2.onEscapeKeyDown?.(event);\n              if (ctx2.closeOnEscape) return;\n              event.preventDefault();\n            },\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (event.defaultPrevented) return;\n              restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n              if (!ctx2.closeOnInteractOutside) {\n                event.preventDefault();\n              }\n            },\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onFocusOutside: ctx2.onFocusOutside,\n            persistentElements: ctx2.persistentElements,\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n            }\n          });\n        },\n        proxyTabFocus(ctx2) {\n          if (ctx2.modal || !ctx2.portalled) return;\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.proxyTabFocus)(getContentEl, {\n            triggerElement: dom.getTriggerEl(ctx2),\n            defer: true,\n            onFocus(el) {\n              el.focus({ preventScroll: true });\n            }\n          });\n        },\n        hideContentBelow(ctx2) {\n          if (!ctx2.modal) return;\n          const getElements = () => [dom.getContentEl(ctx2), dom.getTriggerEl(ctx2)];\n          return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_6__.ariaHidden)(getElements, { defer: true });\n        },\n        preventScroll(ctx2) {\n          if (!ctx2.modal) return;\n          return (0,_zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_7__.preventBodyScroll)(dom.getDoc(ctx2));\n        },\n        trapFocus(ctx2) {\n          if (!ctx2.modal) return;\n          const contentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_8__.trapFocus)(contentEl, {\n            initialFocus: () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n              root: dom.getContentEl(ctx2),\n              getInitialEl: ctx2.initialFocusEl,\n              enabled: ctx2.autoFocus\n            })\n          });\n        }\n      },\n      actions: {\n        reposition(ctx2, evt) {\n          const anchorEl = dom.getAnchorEl(ctx2) ?? dom.getTriggerEl(ctx2);\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(anchorEl, getPositionerEl, {\n            ...ctx2.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        checkRenderedElements(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            Object.assign(ctx2.renderedElements, {\n              title: !!dom.getTitleEl(ctx2),\n              description: !!dom.getDescriptionEl(ctx2)\n            });\n          });\n        },\n        setInitialFocus(ctx2) {\n          if (ctx2.modal) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n              root: dom.getContentEl(ctx2),\n              getInitialEl: ctx2.initialFocusEl,\n              enabled: ctx2.autoFocus\n            });\n            element?.focus({ preventScroll: true });\n          });\n        },\n        setFinalFocus(ctx2, evt) {\n          const restoreFocus = evt.restoreFocus ?? evt.previousEvent?.restoreFocus;\n          if (restoreFocus != null && !restoreFocus) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const element = dom.getTriggerEl(ctx2);\n            element?.focus({ preventScroll: true });\n          });\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_9__.createProps)()([\n  \"autoFocus\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"open.controlled\",\n  \"open\",\n  \"persistentElements\",\n  \"portalled\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/popover/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/popper/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/popper/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlacement: () => (/* binding */ getPlacement),\n/* harmony export */   getPlacementSide: () => (/* binding */ getPlacementSide),\n/* harmony export */   getPlacementStyles: () => (/* binding */ getPlacementStyles),\n/* harmony export */   isValidPlacement: () => (/* binding */ isValidPlacement)\n/* harmony export */ });\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/dom */ \"(ssr)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n// src/get-placement.ts\nfunction createDOMRect(x = 0, y = 0, width = 0, height = 0) {\n  if (typeof DOMRect === \"function\") {\n    return new DOMRect(x, y, width, height);\n  }\n  const rect = {\n    x,\n    y,\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x\n  };\n  return { ...rect, toJSON: () => rect };\n}\nfunction getDOMRect(anchorRect) {\n  if (!anchorRect) return createDOMRect();\n  const { x, y, width, height } = anchorRect;\n  return createDOMRect(x, y, width, height);\n}\nfunction getAnchorElement(anchorElement, getAnchorRect) {\n  return {\n    contextElement: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(anchorElement) ? anchorElement : void 0,\n    getBoundingClientRect: () => {\n      const anchor = anchorElement;\n      const anchorRect = getAnchorRect?.(anchor);\n      if (anchorRect || !anchor) {\n        return getDOMRect(anchorRect);\n      }\n      return anchor.getBoundingClientRect();\n    }\n  };\n}\n\n// src/middleware.ts\nvar toVar = (value) => ({ variable: value, reference: `var(${value})` });\nvar cssVars = {\n  arrowSize: toVar(\"--arrow-size\"),\n  arrowSizeHalf: toVar(\"--arrow-size-half\"),\n  arrowBg: toVar(\"--arrow-background\"),\n  transformOrigin: toVar(\"--transform-origin\"),\n  arrowOffset: toVar(\"--arrow-offset\")\n};\nvar getTransformOrigin = (arrow2) => ({\n  top: \"bottom center\",\n  \"top-start\": arrow2 ? `${arrow2.x}px bottom` : \"left bottom\",\n  \"top-end\": arrow2 ? `${arrow2.x}px bottom` : \"right bottom\",\n  bottom: \"top center\",\n  \"bottom-start\": arrow2 ? `${arrow2.x}px top` : \"top left\",\n  \"bottom-end\": arrow2 ? `${arrow2.x}px top` : \"top right\",\n  left: \"right center\",\n  \"left-start\": arrow2 ? `right ${arrow2.y}px` : \"right top\",\n  \"left-end\": arrow2 ? `right ${arrow2.y}px` : \"right bottom\",\n  right: \"left center\",\n  \"right-start\": arrow2 ? `left ${arrow2.y}px` : \"left top\",\n  \"right-end\": arrow2 ? `left ${arrow2.y}px` : \"left bottom\"\n});\nvar transformOriginMiddleware = {\n  name: \"transformOrigin\",\n  fn({ placement, elements, middlewareData }) {\n    const { arrow: arrow2 } = middlewareData;\n    const transformOrigin = getTransformOrigin(arrow2)[placement];\n    const { floating } = elements;\n    floating.style.setProperty(cssVars.transformOrigin.variable, transformOrigin);\n    return {\n      data: { transformOrigin }\n    };\n  }\n};\nvar rectMiddleware = {\n  name: \"rects\",\n  fn({ rects }) {\n    return {\n      data: rects\n    };\n  }\n};\nvar shiftArrowMiddleware = (arrowEl) => {\n  if (!arrowEl) return;\n  return {\n    name: \"shiftArrow\",\n    fn({ placement, middlewareData }) {\n      if (!middlewareData.arrow) return {};\n      const { x, y } = middlewareData.arrow;\n      const dir = placement.split(\"-\")[0];\n      Object.assign(arrowEl.style, {\n        left: x != null ? `${x}px` : \"\",\n        top: y != null ? `${y}px` : \"\",\n        [dir]: `calc(100% + ${cssVars.arrowOffset.reference})`\n      });\n      return {};\n    }\n  };\n};\n\n// src/placement.ts\nfunction isValidPlacement(v) {\n  return /^(?:top|bottom|left|right)(?:-(?:start|end))?$/.test(v);\n}\nfunction getPlacementDetails(placement) {\n  const [side, align] = placement.split(\"-\");\n  return { side, align, hasAlign: align != null };\n}\nfunction getPlacementSide(placement) {\n  return placement.split(\"-\")[0];\n}\n\n// src/get-placement.ts\nvar defaultOptions = {\n  strategy: \"absolute\",\n  placement: \"bottom\",\n  listeners: true,\n  gutter: 8,\n  flip: true,\n  slide: true,\n  overlap: false,\n  sameWidth: false,\n  fitViewport: false,\n  overflowPadding: 8,\n  arrowPadding: 4\n};\nfunction roundByDpr(win, value) {\n  const dpr = win.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\nfunction getBoundaryMiddleware(opts) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.runIfFn)(opts.boundary);\n}\nfunction getArrowMiddleware(arrowElement, opts) {\n  if (!arrowElement) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.arrow)({\n    element: arrowElement,\n    padding: opts.arrowPadding\n  });\n}\nfunction getOffsetMiddleware(arrowElement, opts) {\n  if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isNull)(opts.offset ?? opts.gutter)) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.offset)(({ placement }) => {\n    const arrowOffset = (arrowElement?.clientHeight || 0) / 2;\n    const gutter = opts.offset?.mainAxis ?? opts.gutter;\n    const mainAxis = typeof gutter === \"number\" ? gutter + arrowOffset : gutter ?? arrowOffset;\n    const { hasAlign } = getPlacementDetails(placement);\n    const shift2 = !hasAlign ? opts.shift : void 0;\n    const crossAxis = opts.offset?.crossAxis ?? shift2;\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)({\n      crossAxis,\n      mainAxis,\n      alignmentAxis: opts.shift\n    });\n  });\n}\nfunction getFlipMiddleware(opts) {\n  if (!opts.flip) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.flip)({\n    boundary: getBoundaryMiddleware(opts),\n    padding: opts.overflowPadding,\n    fallbackPlacements: opts.flip === true ? void 0 : opts.flip\n  });\n}\nfunction getShiftMiddleware(opts) {\n  if (!opts.slide && !opts.overlap) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.shift)({\n    boundary: getBoundaryMiddleware(opts),\n    mainAxis: opts.slide,\n    crossAxis: opts.overlap,\n    padding: opts.overflowPadding,\n    limiter: (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.limitShift)()\n  });\n}\nfunction getSizeMiddleware(opts) {\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.size)({\n    padding: opts.overflowPadding,\n    apply({ elements, rects, availableHeight, availableWidth }) {\n      const floating = elements.floating;\n      const referenceWidth = Math.round(rects.reference.width);\n      availableWidth = Math.floor(availableWidth);\n      availableHeight = Math.floor(availableHeight);\n      floating.style.setProperty(\"--reference-width\", `${referenceWidth}px`);\n      floating.style.setProperty(\"--available-width\", `${availableWidth}px`);\n      floating.style.setProperty(\"--available-height\", `${availableHeight}px`);\n    }\n  });\n}\nfunction hideWhenDetachedMiddleware(opts) {\n  if (!opts.hideWhenDetached) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.hide)({ strategy: \"referenceHidden\", boundary: opts.boundary?.() ?? \"clippingAncestors\" });\n}\nfunction getAutoUpdateOptions(opts) {\n  if (!opts) return {};\n  if (opts === true) {\n    return { ancestorResize: true, ancestorScroll: true, elementResize: true, layoutShift: true };\n  }\n  return opts;\n}\nfunction getPlacementImpl(referenceOrVirtual, floating, opts = {}) {\n  const reference = getAnchorElement(referenceOrVirtual, opts.getAnchorRect);\n  if (!floating || !reference) return;\n  const options = Object.assign({}, defaultOptions, opts);\n  const arrowEl = floating.querySelector(\"[data-part=arrow]\");\n  const middleware = [\n    getOffsetMiddleware(arrowEl, options),\n    getFlipMiddleware(options),\n    getShiftMiddleware(options),\n    getArrowMiddleware(arrowEl, options),\n    shiftArrowMiddleware(arrowEl),\n    transformOriginMiddleware,\n    getSizeMiddleware(options),\n    hideWhenDetachedMiddleware(options),\n    rectMiddleware\n  ];\n  const { placement, strategy, onComplete, onPositioned } = options;\n  const updatePosition = async () => {\n    if (!reference || !floating) return;\n    const pos = await (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.computePosition)(reference, floating, {\n      placement,\n      middleware,\n      strategy\n    });\n    onComplete?.(pos);\n    onPositioned?.({ placed: true });\n    const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(floating);\n    const x = roundByDpr(win, pos.x);\n    const y = roundByDpr(win, pos.y);\n    floating.style.setProperty(\"--x\", `${x}px`);\n    floating.style.setProperty(\"--y\", `${y}px`);\n    if (options.hideWhenDetached) {\n      const isHidden = pos.middlewareData.hide?.referenceHidden;\n      if (isHidden) {\n        floating.style.setProperty(\"visibility\", \"hidden\");\n        floating.style.setProperty(\"pointer-events\", \"none\");\n      } else {\n        floating.style.removeProperty(\"visibility\");\n        floating.style.removeProperty(\"pointer-events\");\n      }\n    }\n    const contentEl = floating.firstElementChild;\n    if (contentEl) {\n      const styles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(contentEl);\n      floating.style.setProperty(\"--z-index\", styles.zIndex);\n    }\n  };\n  const update = async () => {\n    if (opts.updatePosition) {\n      await opts.updatePosition({ updatePosition });\n      onPositioned?.({ placed: true });\n    } else {\n      await updatePosition();\n    }\n  };\n  const autoUpdateOptions = getAutoUpdateOptions(options.listeners);\n  const cancelAutoUpdate = options.listeners ? (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.autoUpdate)(reference, floating, update, autoUpdateOptions) : _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.noop;\n  update();\n  return () => {\n    cancelAutoUpdate?.();\n    onPositioned?.({ placed: false });\n  };\n}\nfunction getPlacement(referenceOrFn, floatingOrFn, opts = {}) {\n  const { defer, ...options } = opts;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const reference = typeof referenceOrFn === \"function\" ? referenceOrFn() : referenceOrFn;\n      const floating = typeof floatingOrFn === \"function\" ? floatingOrFn() : floatingOrFn;\n      cleanups.push(getPlacementImpl(reference, floating, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/get-styles.ts\nvar ARROW_FLOATING_STYLE = {\n  bottom: \"rotate(45deg)\",\n  left: \"rotate(135deg)\",\n  top: \"rotate(225deg)\",\n  right: \"rotate(315deg)\"\n};\nfunction getPlacementStyles(options = {}) {\n  const { placement, sameWidth, fitViewport, strategy = \"absolute\" } = options;\n  return {\n    arrow: {\n      position: \"absolute\",\n      width: cssVars.arrowSize.reference,\n      height: cssVars.arrowSize.reference,\n      [cssVars.arrowSizeHalf.variable]: `calc(${cssVars.arrowSize.reference} / 2)`,\n      [cssVars.arrowOffset.variable]: `calc(${cssVars.arrowSizeHalf.reference} * -1)`\n    },\n    arrowTip: {\n      // @ts-expect-error - Fix this\n      transform: placement ? ARROW_FLOATING_STYLE[placement.split(\"-\")[0]] : void 0,\n      background: cssVars.arrowBg.reference,\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\",\n      zIndex: \"inherit\"\n    },\n    floating: {\n      position: strategy,\n      isolation: \"isolate\",\n      minWidth: sameWidth ? void 0 : \"max-content\",\n      width: sameWidth ? \"var(--reference-width)\" : void 0,\n      maxWidth: fitViewport ? \"var(--available-width)\" : void 0,\n      maxHeight: fitViewport ? \"var(--available-height)\" : void 0,\n      top: \"0px\",\n      left: \"0px\",\n      // move off-screen if placement is not defined\n      transform: placement ? \"translate3d(var(--x), var(--y), 0)\" : \"translate3d(0, -100vh, 0)\",\n      zIndex: \"var(--z-index)\"\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/progress/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/progress/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/progress.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"progress\").parts(\n  \"root\",\n  \"label\",\n  \"track\",\n  \"range\",\n  \"valueText\",\n  \"view\",\n  \"circle\",\n  \"circleTrack\",\n  \"circleRange\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `progress-${ctx.id}`,\n  getTrackId: (ctx) => ctx.ids?.track ?? `progress-${ctx.id}-track`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `progress-${ctx.id}-label`,\n  getCircleId: (ctx) => ctx.ids?.circle ?? `progress-${ctx.id}-circle`\n});\n\n// src/progress.connect.ts\nfunction connect(state, send, normalize) {\n  const percent = state.context.percent;\n  const percentAsString = state.context.isIndeterminate ? \"\" : `${percent}%`;\n  const max = state.context.max;\n  const min = state.context.min;\n  const orientation = state.context.orientation;\n  const translations = state.context.translations;\n  const indeterminate = state.context.isIndeterminate;\n  const value = state.context.value;\n  const valueAsString = translations.value({ value, max, percent, min });\n  const progressState = getProgressState(value, max);\n  const progressbarProps = {\n    role: \"progressbar\",\n    \"aria-label\": valueAsString,\n    \"data-max\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value ?? void 0,\n    \"data-orientation\": orientation,\n    \"data-state\": progressState\n  };\n  const circleProps = getCircleProps(state.context);\n  return {\n    value,\n    valueAsString,\n    min,\n    max,\n    percent,\n    percentAsString,\n    indeterminate,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2 });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: min });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-max\": max,\n        \"data-value\": value ?? void 0,\n        \"data-state\": progressState,\n        \"data-orientation\": orientation,\n        style: {\n          \"--percent\": indeterminate ? void 0 : percent\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        ...parts.label.attrs,\n        \"data-orientation\": orientation\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        \"aria-live\": \"polite\",\n        ...parts.valueText.attrs\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getTrackId(state.context),\n        ...parts.track.attrs,\n        ...progressbarProps\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.range.attrs,\n        \"data-orientation\": orientation,\n        \"data-state\": progressState,\n        style: {\n          [state.context.isHorizontal ? \"width\" : \"height\"]: indeterminate ? void 0 : `${percent}%`\n        }\n      });\n    },\n    getCircleProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getCircleId(state.context),\n        ...parts.circle.attrs,\n        ...progressbarProps,\n        ...circleProps.root\n      });\n    },\n    getCircleTrackProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        \"data-orientation\": orientation,\n        ...parts.circleTrack.attrs,\n        ...circleProps.track\n      });\n    },\n    getCircleRangeProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.circleRange.attrs,\n        ...circleProps.range,\n        \"data-state\": progressState\n      });\n    },\n    getViewProps(props2) {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.view.attrs,\n        \"data-state\": props2.state,\n        hidden: props2.state !== progressState\n      });\n    }\n  };\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction getCircleProps(ctx) {\n  const circleProps = {\n    style: {\n      \"--radius\": \"calc(var(--size) / 2 - var(--thickness) / 2)\",\n      cx: \"calc(var(--size) / 2)\",\n      cy: \"calc(var(--size) / 2)\",\n      r: \"var(--radius)\",\n      fill: \"transparent\",\n      strokeWidth: \"var(--thickness)\"\n    }\n  };\n  return {\n    root: {\n      style: {\n        width: \"var(--size)\",\n        height: \"var(--size)\"\n      }\n    },\n    track: circleProps,\n    range: {\n      opacity: ctx.value === 0 ? 0 : void 0,\n      style: {\n        ...circleProps.style,\n        \"--percent\": ctx.percent,\n        \"--circumference\": `calc(2 * 3.14159 * var(--radius))`,\n        \"--offset\": `calc(var(--circumference) * (100 - var(--percent)) / 100)`,\n        strokeDashoffset: `calc(var(--circumference) * ((100 - var(--percent)) / 100))`,\n        strokeDasharray: ctx.isIndeterminate ? void 0 : `var(--circumference)`,\n        transformOrigin: \"center\",\n        transform: \"rotate(-90deg)\"\n      }\n    }\n  };\n}\nfunction midValue(min, max) {\n  return min + (max - min) / 2;\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"progress\",\n      initial: \"idle\",\n      context: {\n        max: ctx.max ?? 100,\n        min: ctx.min ?? 0,\n        value: midValue(ctx.min ?? 0, ctx.max ?? 100),\n        orientation: \"horizontal\",\n        translations: {\n          value: ({ percent }) => percent === -1 ? \"loading...\" : `${percent} percent`,\n          ...ctx.translations\n        },\n        ...ctx\n      },\n      created: [\"validateContext\"],\n      computed: {\n        isIndeterminate: (ctx2) => ctx2.value === null,\n        percent(ctx2) {\n          if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(ctx2.value)) return -1;\n          return Math.round((ctx2.value - ctx2.min) / (ctx2.max - ctx2.min) * 100);\n        },\n        isAtMax: (ctx2) => ctx2.value === ctx2.max,\n        isHorizontal: (ctx2) => ctx2.orientation === \"horizontal\",\n        isRtl: (ctx2) => ctx2.dir === \"rtl\"\n      },\n      states: {\n        idle: {\n          on: {\n            \"VALUE.SET\": {\n              actions: [\"setValue\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      actions: {\n        setValue: (ctx2, evt) => {\n          set.value(ctx2, evt.value);\n        },\n        validateContext: (ctx2) => {\n          if (ctx2.value == null) return;\n          if (!isValidNumber(ctx2.max)) {\n            throw new Error(`[progress] The max value passed \\`${ctx2.max}\\` is not a valid number`);\n          }\n          if (!isValidMax(ctx2.value, ctx2.max)) {\n            throw new Error(`[progress] The value passed \\`${ctx2.value}\\` exceeds the max value \\`${ctx2.max}\\``);\n          }\n          if (!isValidMin(ctx2.value, ctx2.min)) {\n            throw new Error(`[progress] The value passed \\`${ctx2.value}\\` exceeds the min value \\`${ctx2.min}\\``);\n          }\n        }\n      }\n    }\n  );\n}\nfunction isValidNumber(max) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(max) && !isNaN(max);\n}\nfunction isValidMax(value, max) {\n  return isValidNumber(value) && value <= max;\n}\nfunction isValidMin(value, min) {\n  return isValidNumber(value) && value >= min;\n}\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value === null ? null : Math.max(0, Math.min(value, ctx.max));\n    ctx.onValueChange?.({ value });\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"max\",\n  \"min\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n  \"onValueChange\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/progress/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/qr-code/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/qr-code/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var proxy_memoize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! proxy-memoize */ \"(ssr)/./node_modules/proxy-memoize/dist/memoize.js\");\n/* harmony import */ var uqr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uqr */ \"(ssr)/./node_modules/uqr/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/qr-code.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"qr-code\").parts(\"root\", \"frame\", \"pattern\", \"overlay\", \"downloadTrigger\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `qrcode:${ctx.id}:root`,\n  getFrameId: (ctx) => ctx.ids?.frame ?? `qrcode:${ctx.id}:frame`,\n  getFrameEl: (ctx) => dom.getById(ctx, dom.getFrameId(ctx))\n});\n\n// src/qr-code.connect.ts\nfunction connect(state, send, normalize) {\n  const encoded = state.context.encoded;\n  const pixelSize = state.context.pixelSize;\n  const height = encoded.size * pixelSize;\n  const width = encoded.size * pixelSize;\n  const paths = [];\n  for (let row = 0; row < encoded.size; row++) {\n    for (let col = 0; col < encoded.size; col++) {\n      const x = col * pixelSize;\n      const y = row * pixelSize;\n      if (encoded.data[row][col]) {\n        paths.push(`M${x},${y}h${pixelSize}v${pixelSize}h-${pixelSize}z`);\n      }\n    }\n  }\n  return {\n    value: state.context.value,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    getDataUrl(type, quality) {\n      const svgEl = dom.getFrameEl(state.context);\n      return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDataUrl)(svgEl, { type, quality });\n    },\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        style: {\n          \"--qrcode-pixel-size\": `${pixelSize}px`,\n          \"--qrcode-width\": `${width}px`,\n          \"--qrcode-height\": `${height}px`,\n          position: \"relative\"\n        }\n      });\n    },\n    getFrameProps() {\n      return normalize.svg({\n        id: dom.getFrameId(state.context),\n        ...parts.frame.attrs,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: `0 0 ${width} ${height}`\n      });\n    },\n    getPatternProps() {\n      return normalize.path({\n        d: paths.join(\"\"),\n        ...parts.pattern.attrs\n      });\n    },\n    getOverlayProps() {\n      return normalize.element({\n        ...parts.overlay.attrs,\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          translate: \"-50% -50%\"\n        }\n      });\n    },\n    getDownloadTriggerProps(props2) {\n      return normalize.button({\n        type: \"button\",\n        ...parts.downloadTrigger.attrs,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"DOWNLOAD_TRIGGER.CLICK\", ...props2 });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"qr-code\",\n      initial: \"idle\",\n      context: {\n        value: \"\",\n        ...ctx,\n        pixelSize: 10\n      },\n      computed: {\n        encoded: (0,proxy_memoize__WEBPACK_IMPORTED_MODULE_4__.memoize)((ctx2) => (0,uqr__WEBPACK_IMPORTED_MODULE_5__.encode)(ctx2.value, ctx2.encoding))\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        },\n        \"DOWNLOAD_TRIGGER.CLICK\": {\n          actions: [\"downloadQrCode\"]\n        }\n      }\n    },\n    {\n      actions: {\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        downloadQrCode(ctx2, evt) {\n          const { mimeType, quality, fileName } = evt;\n          const svgEl = dom.getFrameEl(ctx2);\n          const doc = dom.getDoc(ctx2);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDataUrl)(svgEl, { type: mimeType, quality }).then((dataUri) => {\n            const a = doc.createElement(\"a\");\n            a.href = dataUri;\n            a.rel = \"noopener\";\n            a.download = fileName;\n            a.click();\n            setTimeout(() => {\n              a.remove();\n            }, 0);\n          });\n        }\n      }\n    }\n  );\n}\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    ctx.onValueChange?.({ value });\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"ids\",\n  \"value\",\n  \"id\",\n  \"encoding\",\n  \"dir\",\n  \"getRootNode\",\n  \"onValueChange\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/qr-code/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/radio-group/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/radio-group/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_element_rect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/element-rect */ \"(ssr)/./node_modules/@zag-js/element-rect/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/radio-group.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"radio-group\").parts(\n  \"root\",\n  \"label\",\n  \"item\",\n  \"itemText\",\n  \"itemControl\",\n  \"indicator\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `radio-group:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `radio-group:${ctx.id}:label`,\n  getItemId: (ctx, value) => ctx.ids?.item?.(value) ?? `radio-group:${ctx.id}:radio:${value}`,\n  getItemHiddenInputId: (ctx, value) => ctx.ids?.itemHiddenInput?.(value) ?? `radio-group:${ctx.id}:radio:input:${value}`,\n  getItemControlId: (ctx, value) => ctx.ids?.itemControl?.(value) ?? `radio-group:${ctx.id}:radio:control:${value}`,\n  getItemLabelId: (ctx, value) => ctx.ids?.itemLabel?.(value) ?? `radio-group:${ctx.id}:radio:label:${value}`,\n  getIndicatorId: (ctx) => ctx.ids?.indicator ?? `radio-group:${ctx.id}:indicator`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getItemHiddenInputEl: (ctx, value) => dom.getById(ctx, dom.getItemHiddenInputId(ctx, value)),\n  getIndicatorEl: (ctx) => dom.getById(ctx, dom.getIndicatorId(ctx)),\n  getFirstEnabledInputEl: (ctx) => dom.getRootEl(ctx)?.querySelector(\"input:not(:disabled)\"),\n  getFirstEnabledAndCheckedInputEl: (ctx) => dom.getRootEl(ctx)?.querySelector(\"input:not(:disabled):checked\"),\n  getInputEls: (ctx) => {\n    const ownerId = CSS.escape(dom.getRootId(ctx));\n    const selector = `input[type=radio][data-ownedby='${ownerId}']:not([disabled])`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getRootEl(ctx), selector);\n  },\n  getActiveRadioEl: (ctx) => {\n    if (!ctx.value) return;\n    return dom.getById(ctx, dom.getItemId(ctx, ctx.value));\n  },\n  getOffsetRect: (el) => ({\n    left: el?.offsetLeft ?? 0,\n    top: el?.offsetTop ?? 0,\n    width: el?.offsetWidth ?? 0,\n    height: el?.offsetHeight ?? 0\n  }),\n  getRectById: (ctx, id) => {\n    const radioEl = dom.getById(ctx, dom.getItemId(ctx, id));\n    if (!radioEl) return;\n    return dom.resolveRect(dom.getOffsetRect(radioEl));\n  },\n  resolveRect: (rect) => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`\n  })\n});\n\n// src/radio-group.connect.ts\nfunction connect(state, send, normalize) {\n  const groupDisabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  function getItemState(props2) {\n    return {\n      invalid: !!props2.invalid,\n      disabled: !!props2.disabled || groupDisabled,\n      checked: state.context.value === props2.value,\n      focused: state.context.focusedValue === props2.value,\n      hovered: state.context.hoveredValue === props2.value,\n      active: state.context.activeValue === props2.value\n    };\n  }\n  function getItemDataAttrs(props2) {\n    const radioState = getItemState(props2);\n    return {\n      \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.focused),\n      \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.focused && state.context.focusVisible),\n      \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.disabled),\n      \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n      \"data-state\": radioState.checked ? \"checked\" : \"unchecked\",\n      \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.hovered),\n      \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.invalid),\n      \"data-orientation\": state.context.orientation,\n      \"data-ssr\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.ssr)\n    };\n  }\n  const focus = () => {\n    const firstEnabledAndCheckedInput = dom.getFirstEnabledAndCheckedInputEl(state.context);\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    const firstEnabledInput = dom.getFirstEnabledInputEl(state.context);\n    firstEnabledInput?.focus();\n  };\n  return {\n    focus,\n    value: state.context.value,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value, isTrusted: false });\n    },\n    clearValue() {\n      send({ type: \"SET_VALUE\", value: null, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        role: \"radiogroup\",\n        id: dom.getRootId(state.context),\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        \"aria-orientation\": state.context.orientation,\n        dir: state.context.dir,\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        id: dom.getLabelId(state.context),\n        onClick: focus\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.label({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, props2.value),\n        htmlFor: dom.getItemHiddenInputId(state.context, props2.value),\n        ...getItemDataAttrs(props2),\n        onPointerMove() {\n          if (itemState.disabled) return;\n          if (itemState.hovered) return;\n          send({ type: \"SET_HOVERED\", value: props2.value, hovered: true });\n        },\n        onPointerLeave() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_HOVERED\", value: null });\n        },\n        onPointerDown(event) {\n          if (itemState.disabled) return;\n          if (itemState.focused && event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n        },\n        onPointerUp() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_ACTIVE\", value: null });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        id: dom.getItemLabelId(state.context, props2.value),\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemControlProps(props2) {\n      const controlState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemControl.attrs,\n        dir: state.context.dir,\n        id: dom.getItemControlId(state.context, props2.value),\n        \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(controlState.active),\n        \"aria-hidden\": true,\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemHiddenInputProps(props2) {\n      const inputState = getItemState(props2);\n      return normalize.input({\n        \"data-ownedby\": dom.getRootId(state.context),\n        id: dom.getItemHiddenInputId(state.context, props2.value),\n        type: \"radio\",\n        name: state.context.name || state.context.id,\n        form: state.context.form,\n        value: props2.value,\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          if (event.currentTarget.checked) {\n            send({ type: \"SET_VALUE\", value: props2.value, isTrusted: true });\n          }\n        },\n        onBlur() {\n          send({ type: \"SET_FOCUSED\", value: null, focused: false, focusVisible: false });\n        },\n        onFocus() {\n          const focusVisible = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"SET_FOCUSED\", value: props2.value, focused: true, focusVisible });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: null });\n          }\n        },\n        disabled: inputState.disabled,\n        defaultChecked: inputState.checked,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        hidden: state.context.value == null,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, top, width, height\",\n          \"--left\": state.context.indicatorRect?.left,\n          \"--top\": state.context.indicatorRect?.top,\n          \"--width\": state.context.indicatorRect?.width,\n          \"--height\": state.context.indicatorRect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: state.context.canIndicatorTransition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [state.context.orientation === \"horizontal\" ? \"left\" : \"top\"]: state.context.orientation === \"horizontal\" ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar { not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"radio\",\n      initial: \"idle\",\n      context: {\n        value: null,\n        activeValue: null,\n        focusedValue: null,\n        hoveredValue: null,\n        disabled: false,\n        orientation: \"vertical\",\n        ...ctx,\n        indicatorRect: {},\n        canIndicatorTransition: false,\n        fieldsetDisabled: false,\n        focusVisible: false,\n        ssr: true\n      },\n      computed: {\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled\n      },\n      entry: [\"syncIndicatorRect\", \"syncSsr\"],\n      exit: [\"cleanupObserver\"],\n      activities: [\"trackFormControlState\", \"trackFocusVisible\"],\n      watch: {\n        value: [\"setIndicatorTransition\", \"syncIndicatorRect\", \"syncInputElements\"]\n      },\n      on: {\n        SET_VALUE: [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setValue\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"setValue\"]\n          }\n        ],\n        SET_HOVERED: {\n          actions: \"setHovered\"\n        },\n        SET_ACTIVE: {\n          actions: \"setActive\"\n        },\n        SET_FOCUSED: {\n          actions: \"setFocused\"\n        }\n      },\n      states: {\n        idle: {}\n      }\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { send, initialContext }) {\n          return (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__.trackFormControl)(dom.getRootEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"SET_VALUE\", value: initialContext.value });\n            }\n          });\n        },\n        trackFocusVisible(ctx2) {\n          return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: dom.getRootNode(ctx2) });\n        }\n      },\n      actions: {\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        setHovered(ctx2, evt) {\n          ctx2.hoveredValue = evt.value;\n        },\n        setActive(ctx2, evt) {\n          ctx2.activeValue = evt.value;\n        },\n        setFocused(ctx2, evt) {\n          ctx2.focusedValue = evt.value;\n          ctx2.focusVisible = evt.focusVisible;\n        },\n        syncInputElements(ctx2) {\n          const inputs = dom.getInputEls(ctx2);\n          inputs.forEach((input) => {\n            input.checked = input.value === ctx2.value;\n          });\n        },\n        setIndicatorTransition(ctx2) {\n          ctx2.canIndicatorTransition = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(ctx2.value);\n        },\n        cleanupObserver(ctx2) {\n          ctx2.indicatorCleanup?.();\n        },\n        syncSsr(ctx2) {\n          ctx2.ssr = false;\n        },\n        syncIndicatorRect(ctx2) {\n          ctx2.indicatorCleanup?.();\n          if (!dom.getIndicatorEl(ctx2)) return;\n          const value = ctx2.value;\n          const radioEl = dom.getActiveRadioEl(ctx2);\n          if (value == null || !radioEl) {\n            ctx2.indicatorRect = {};\n            return;\n          }\n          ctx2.indicatorCleanup = (0,_zag_js_element_rect__WEBPACK_IMPORTED_MODULE_6__.trackElementRect)(radioEl, {\n            getRect(el) {\n              return dom.getOffsetRect(el);\n            },\n            onChange(rect) {\n              ctx2.indicatorRect = dom.resolveRect(rect);\n              (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => {\n                ctx2.canIndicatorTransition = false;\n              });\n            }\n          });\n        },\n        dispatchChangeEvent(ctx2) {\n          const inputEls = dom.getInputEls(ctx2);\n          inputEls.forEach((inputEl) => {\n            const checked = inputEl.value === ctx2.value;\n            if (checked === inputEl.checked) return;\n            (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__.dispatchInputCheckedEvent)(inputEl, { checked });\n          });\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    if (ctx.value == null) return;\n    ctx.onValueChange?.({ value: ctx.value });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onValueChange\",\n  \"orientation\",\n  \"readOnly\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"value\", \"disabled\", \"invalid\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yYWRpby1ncm91cC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFDbUQ7QUFDekI7QUFDckI7QUFDRztBQUN5QjtBQUNKO0FBQ2pDOztBQUU1QztBQUNBLGNBQWMsOERBQWE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsOERBQVc7QUFDckIsc0RBQXNELE9BQU87QUFDN0Qsd0RBQXdELE9BQU87QUFDL0Qsc0VBQXNFLE9BQU8sU0FBUyxNQUFNO0FBQzVGLDRGQUE0RixPQUFPLGVBQWUsTUFBTTtBQUN4SCxvRkFBb0YsT0FBTyxpQkFBaUIsTUFBTTtBQUNsSCxnRkFBZ0YsT0FBTyxlQUFlLE1BQU07QUFDNUcsZ0VBQWdFLE9BQU87QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsUUFBUTtBQUNoRSxXQUFXLDJEQUFRO0FBQ25CLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGNBQWMsV0FBVztBQUN6QixlQUFlLFlBQVk7QUFDM0IsYUFBYSxVQUFVO0FBQ3ZCLFlBQVksU0FBUztBQUNyQixHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDJEQUFRO0FBQzVCLDRCQUE0QiwyREFBUTtBQUNwQyx1QkFBdUIsMkRBQVE7QUFDL0IsdUJBQXVCLDJEQUFRO0FBQy9CO0FBQ0Esb0JBQW9CLDJEQUFRO0FBQzVCLHNCQUFzQiwyREFBUTtBQUM5QjtBQUNBLGtCQUFrQiwyREFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDRDQUE0QztBQUN6RCxLQUFLO0FBQ0w7QUFDQSxhQUFhLGtEQUFrRDtBQUMvRCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQztBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIseURBQXlEO0FBQzFFLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUJBQWlCLGtDQUFrQztBQUNuRCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1REFBdUQ7QUFDeEUsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQkFBaUIsaUNBQWlDO0FBQ2xEO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBUTtBQUMvQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseURBQXlEO0FBQzVFO0FBQ0EsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLHVFQUF1RTtBQUN4RixTQUFTO0FBQ1Q7QUFDQSwrQkFBK0IscUVBQWM7QUFDN0MsaUJBQWlCLHVFQUF1RTtBQUN4RixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUF1RDtBQUMxRTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsaUNBQWlDO0FBQ3BEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxlQUFlLGtFQUFtQjtBQUNsQyxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE1BQU0sTUFBTSxFQUFFLGdEQUFNO0FBQ3BCO0FBQ0EsY0FBYyxzREFBTztBQUNyQixTQUFTLDJEQUFhO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSw0Q0FBNEMsc0JBQXNCO0FBQ2xFLGlCQUFpQixvRUFBZ0I7QUFDakM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHFCQUFxQixnREFBZ0Q7QUFDckU7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLHdFQUFpQixHQUFHLDZCQUE2QjtBQUNsRTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQSx3Q0FBd0MsdURBQVE7QUFDaEQsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msc0VBQWdCO0FBQ2xEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGNBQWMsMkRBQVE7QUFDdEI7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZFQUF5QixZQUFZLFNBQVM7QUFDMUQsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsa0JBQWtCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwREFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQWdCO0FBQ2pDLGdCQUFnQiwwREFBVztBQUMzQixxQkFBcUIsK0RBQWdCOztBQUU4QyIsInNvdXJjZXMiOlsiL2hvbWUvc2FjaGEvRXBpdGVjaC9HLUVQSS0zMDAtUkVOLTMtMS1wcm9qZWN0d2Vlay1uYXRoYW4uamVhbm5vdC9mcm9udC9ub2RlX21vZHVsZXMvQHphZy1qcy9yYWRpby1ncm91cC9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBbmF0b215IH0gZnJvbSAnQHphZy1qcy9hbmF0b215JztcbmltcG9ydCB7IGNyZWF0ZVNjb3BlLCBxdWVyeUFsbCwgZGF0YUF0dHIsIHZpc3VhbGx5SGlkZGVuU3R5bGUsIG5leHRUaWNrIH0gZnJvbSAnQHphZy1qcy9kb20tcXVlcnknO1xuaW1wb3J0IHsgaXNGb2N1c1Zpc2libGUsIHRyYWNrRm9jdXNWaXNpYmxlIH0gZnJvbSAnQHphZy1qcy9mb2N1cy12aXNpYmxlJztcbmltcG9ydCB7IGNyZWF0ZU1hY2hpbmUsIGd1YXJkcyB9IGZyb20gJ0B6YWctanMvY29yZSc7XG5pbXBvcnQgeyB0cmFja0VsZW1lbnRSZWN0IH0gZnJvbSAnQHphZy1qcy9lbGVtZW50LXJlY3QnO1xuaW1wb3J0IHsgdHJhY2tGb3JtQ29udHJvbCwgZGlzcGF0Y2hJbnB1dENoZWNrZWRFdmVudCB9IGZyb20gJ0B6YWctanMvZm9ybS11dGlscyc7XG5pbXBvcnQgeyBjcmVhdGVTcGxpdFByb3BzLCBjb21wYWN0LCBpc1N0cmluZywgaXNFcXVhbCB9IGZyb20gJ0B6YWctanMvdXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlUHJvcHMgfSBmcm9tICdAemFnLWpzL3R5cGVzJztcblxuLy8gc3JjL3JhZGlvLWdyb3VwLmFuYXRvbXkudHNcbnZhciBhbmF0b215ID0gY3JlYXRlQW5hdG9teShcInJhZGlvLWdyb3VwXCIpLnBhcnRzKFxuICBcInJvb3RcIixcbiAgXCJsYWJlbFwiLFxuICBcIml0ZW1cIixcbiAgXCJpdGVtVGV4dFwiLFxuICBcIml0ZW1Db250cm9sXCIsXG4gIFwiaW5kaWNhdG9yXCJcbik7XG52YXIgcGFydHMgPSBhbmF0b215LmJ1aWxkKCk7XG52YXIgZG9tID0gY3JlYXRlU2NvcGUoe1xuICBnZXRSb290SWQ6IChjdHgpID0+IGN0eC5pZHM/LnJvb3QgPz8gYHJhZGlvLWdyb3VwOiR7Y3R4LmlkfWAsXG4gIGdldExhYmVsSWQ6IChjdHgpID0+IGN0eC5pZHM/LmxhYmVsID8/IGByYWRpby1ncm91cDoke2N0eC5pZH06bGFiZWxgLFxuICBnZXRJdGVtSWQ6IChjdHgsIHZhbHVlKSA9PiBjdHguaWRzPy5pdGVtPy4odmFsdWUpID8/IGByYWRpby1ncm91cDoke2N0eC5pZH06cmFkaW86JHt2YWx1ZX1gLFxuICBnZXRJdGVtSGlkZGVuSW5wdXRJZDogKGN0eCwgdmFsdWUpID0+IGN0eC5pZHM/Lml0ZW1IaWRkZW5JbnB1dD8uKHZhbHVlKSA/PyBgcmFkaW8tZ3JvdXA6JHtjdHguaWR9OnJhZGlvOmlucHV0OiR7dmFsdWV9YCxcbiAgZ2V0SXRlbUNvbnRyb2xJZDogKGN0eCwgdmFsdWUpID0+IGN0eC5pZHM/Lml0ZW1Db250cm9sPy4odmFsdWUpID8/IGByYWRpby1ncm91cDoke2N0eC5pZH06cmFkaW86Y29udHJvbDoke3ZhbHVlfWAsXG4gIGdldEl0ZW1MYWJlbElkOiAoY3R4LCB2YWx1ZSkgPT4gY3R4Lmlkcz8uaXRlbUxhYmVsPy4odmFsdWUpID8/IGByYWRpby1ncm91cDoke2N0eC5pZH06cmFkaW86bGFiZWw6JHt2YWx1ZX1gLFxuICBnZXRJbmRpY2F0b3JJZDogKGN0eCkgPT4gY3R4Lmlkcz8uaW5kaWNhdG9yID8/IGByYWRpby1ncm91cDoke2N0eC5pZH06aW5kaWNhdG9yYCxcbiAgZ2V0Um9vdEVsOiAoY3R4KSA9PiBkb20uZ2V0QnlJZChjdHgsIGRvbS5nZXRSb290SWQoY3R4KSksXG4gIGdldEl0ZW1IaWRkZW5JbnB1dEVsOiAoY3R4LCB2YWx1ZSkgPT4gZG9tLmdldEJ5SWQoY3R4LCBkb20uZ2V0SXRlbUhpZGRlbklucHV0SWQoY3R4LCB2YWx1ZSkpLFxuICBnZXRJbmRpY2F0b3JFbDogKGN0eCkgPT4gZG9tLmdldEJ5SWQoY3R4LCBkb20uZ2V0SW5kaWNhdG9ySWQoY3R4KSksXG4gIGdldEZpcnN0RW5hYmxlZElucHV0RWw6IChjdHgpID0+IGRvbS5nZXRSb290RWwoY3R4KT8ucXVlcnlTZWxlY3RvcihcImlucHV0Om5vdCg6ZGlzYWJsZWQpXCIpLFxuICBnZXRGaXJzdEVuYWJsZWRBbmRDaGVja2VkSW5wdXRFbDogKGN0eCkgPT4gZG9tLmdldFJvb3RFbChjdHgpPy5xdWVyeVNlbGVjdG9yKFwiaW5wdXQ6bm90KDpkaXNhYmxlZCk6Y2hlY2tlZFwiKSxcbiAgZ2V0SW5wdXRFbHM6IChjdHgpID0+IHtcbiAgICBjb25zdCBvd25lcklkID0gQ1NTLmVzY2FwZShkb20uZ2V0Um9vdElkKGN0eCkpO1xuICAgIGNvbnN0IHNlbGVjdG9yID0gYGlucHV0W3R5cGU9cmFkaW9dW2RhdGEtb3duZWRieT0nJHtvd25lcklkfSddOm5vdChbZGlzYWJsZWRdKWA7XG4gICAgcmV0dXJuIHF1ZXJ5QWxsKGRvbS5nZXRSb290RWwoY3R4KSwgc2VsZWN0b3IpO1xuICB9LFxuICBnZXRBY3RpdmVSYWRpb0VsOiAoY3R4KSA9PiB7XG4gICAgaWYgKCFjdHgudmFsdWUpIHJldHVybjtcbiAgICByZXR1cm4gZG9tLmdldEJ5SWQoY3R4LCBkb20uZ2V0SXRlbUlkKGN0eCwgY3R4LnZhbHVlKSk7XG4gIH0sXG4gIGdldE9mZnNldFJlY3Q6IChlbCkgPT4gKHtcbiAgICBsZWZ0OiBlbD8ub2Zmc2V0TGVmdCA/PyAwLFxuICAgIHRvcDogZWw/Lm9mZnNldFRvcCA/PyAwLFxuICAgIHdpZHRoOiBlbD8ub2Zmc2V0V2lkdGggPz8gMCxcbiAgICBoZWlnaHQ6IGVsPy5vZmZzZXRIZWlnaHQgPz8gMFxuICB9KSxcbiAgZ2V0UmVjdEJ5SWQ6IChjdHgsIGlkKSA9PiB7XG4gICAgY29uc3QgcmFkaW9FbCA9IGRvbS5nZXRCeUlkKGN0eCwgZG9tLmdldEl0ZW1JZChjdHgsIGlkKSk7XG4gICAgaWYgKCFyYWRpb0VsKSByZXR1cm47XG4gICAgcmV0dXJuIGRvbS5yZXNvbHZlUmVjdChkb20uZ2V0T2Zmc2V0UmVjdChyYWRpb0VsKSk7XG4gIH0sXG4gIHJlc29sdmVSZWN0OiAocmVjdCkgPT4gKHtcbiAgICB3aWR0aDogYCR7cmVjdC53aWR0aH1weGAsXG4gICAgaGVpZ2h0OiBgJHtyZWN0LmhlaWdodH1weGAsXG4gICAgbGVmdDogYCR7cmVjdC5sZWZ0fXB4YCxcbiAgICB0b3A6IGAke3JlY3QudG9wfXB4YFxuICB9KVxufSk7XG5cbi8vIHNyYy9yYWRpby1ncm91cC5jb25uZWN0LnRzXG5mdW5jdGlvbiBjb25uZWN0KHN0YXRlLCBzZW5kLCBub3JtYWxpemUpIHtcbiAgY29uc3QgZ3JvdXBEaXNhYmxlZCA9IHN0YXRlLmNvbnRleHQuaXNEaXNhYmxlZDtcbiAgY29uc3QgcmVhZE9ubHkgPSBzdGF0ZS5jb250ZXh0LnJlYWRPbmx5O1xuICBmdW5jdGlvbiBnZXRJdGVtU3RhdGUocHJvcHMyKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGludmFsaWQ6ICEhcHJvcHMyLmludmFsaWQsXG4gICAgICBkaXNhYmxlZDogISFwcm9wczIuZGlzYWJsZWQgfHwgZ3JvdXBEaXNhYmxlZCxcbiAgICAgIGNoZWNrZWQ6IHN0YXRlLmNvbnRleHQudmFsdWUgPT09IHByb3BzMi52YWx1ZSxcbiAgICAgIGZvY3VzZWQ6IHN0YXRlLmNvbnRleHQuZm9jdXNlZFZhbHVlID09PSBwcm9wczIudmFsdWUsXG4gICAgICBob3ZlcmVkOiBzdGF0ZS5jb250ZXh0LmhvdmVyZWRWYWx1ZSA9PT0gcHJvcHMyLnZhbHVlLFxuICAgICAgYWN0aXZlOiBzdGF0ZS5jb250ZXh0LmFjdGl2ZVZhbHVlID09PSBwcm9wczIudmFsdWVcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGdldEl0ZW1EYXRhQXR0cnMocHJvcHMyKSB7XG4gICAgY29uc3QgcmFkaW9TdGF0ZSA9IGdldEl0ZW1TdGF0ZShwcm9wczIpO1xuICAgIHJldHVybiB7XG4gICAgICBcImRhdGEtZm9jdXNcIjogZGF0YUF0dHIocmFkaW9TdGF0ZS5mb2N1c2VkKSxcbiAgICAgIFwiZGF0YS1mb2N1cy12aXNpYmxlXCI6IGRhdGFBdHRyKHJhZGlvU3RhdGUuZm9jdXNlZCAmJiBzdGF0ZS5jb250ZXh0LmZvY3VzVmlzaWJsZSksXG4gICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIocmFkaW9TdGF0ZS5kaXNhYmxlZCksXG4gICAgICBcImRhdGEtcmVhZG9ubHlcIjogZGF0YUF0dHIocmVhZE9ubHkpLFxuICAgICAgXCJkYXRhLXN0YXRlXCI6IHJhZGlvU3RhdGUuY2hlY2tlZCA/IFwiY2hlY2tlZFwiIDogXCJ1bmNoZWNrZWRcIixcbiAgICAgIFwiZGF0YS1ob3ZlclwiOiBkYXRhQXR0cihyYWRpb1N0YXRlLmhvdmVyZWQpLFxuICAgICAgXCJkYXRhLWludmFsaWRcIjogZGF0YUF0dHIocmFkaW9TdGF0ZS5pbnZhbGlkKSxcbiAgICAgIFwiZGF0YS1vcmllbnRhdGlvblwiOiBzdGF0ZS5jb250ZXh0Lm9yaWVudGF0aW9uLFxuICAgICAgXCJkYXRhLXNzclwiOiBkYXRhQXR0cihzdGF0ZS5jb250ZXh0LnNzcilcbiAgICB9O1xuICB9XG4gIGNvbnN0IGZvY3VzID0gKCkgPT4ge1xuICAgIGNvbnN0IGZpcnN0RW5hYmxlZEFuZENoZWNrZWRJbnB1dCA9IGRvbS5nZXRGaXJzdEVuYWJsZWRBbmRDaGVja2VkSW5wdXRFbChzdGF0ZS5jb250ZXh0KTtcbiAgICBpZiAoZmlyc3RFbmFibGVkQW5kQ2hlY2tlZElucHV0KSB7XG4gICAgICBmaXJzdEVuYWJsZWRBbmRDaGVja2VkSW5wdXQuZm9jdXMoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgZmlyc3RFbmFibGVkSW5wdXQgPSBkb20uZ2V0Rmlyc3RFbmFibGVkSW5wdXRFbChzdGF0ZS5jb250ZXh0KTtcbiAgICBmaXJzdEVuYWJsZWRJbnB1dD8uZm9jdXMoKTtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBmb2N1cyxcbiAgICB2YWx1ZTogc3RhdGUuY29udGV4dC52YWx1ZSxcbiAgICBzZXRWYWx1ZSh2YWx1ZSkge1xuICAgICAgc2VuZCh7IHR5cGU6IFwiU0VUX1ZBTFVFXCIsIHZhbHVlLCBpc1RydXN0ZWQ6IGZhbHNlIH0pO1xuICAgIH0sXG4gICAgY2xlYXJWYWx1ZSgpIHtcbiAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9WQUxVRVwiLCB2YWx1ZTogbnVsbCwgaXNUcnVzdGVkOiBmYWxzZSB9KTtcbiAgICB9LFxuICAgIGdldFJvb3RQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLnJvb3QuYXR0cnMsXG4gICAgICAgIHJvbGU6IFwicmFkaW9ncm91cFwiLFxuICAgICAgICBpZDogZG9tLmdldFJvb3RJZChzdGF0ZS5jb250ZXh0KSxcbiAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogZG9tLmdldExhYmVsSWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIFwiZGF0YS1vcmllbnRhdGlvblwiOiBzdGF0ZS5jb250ZXh0Lm9yaWVudGF0aW9uLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIoZ3JvdXBEaXNhYmxlZCksXG4gICAgICAgIFwiYXJpYS1vcmllbnRhdGlvblwiOiBzdGF0ZS5jb250ZXh0Lm9yaWVudGF0aW9uLFxuICAgICAgICBkaXI6IHN0YXRlLmNvbnRleHQuZGlyLFxuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIHBvc2l0aW9uOiBcInJlbGF0aXZlXCJcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRMYWJlbFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5lbGVtZW50KHtcbiAgICAgICAgLi4ucGFydHMubGFiZWwuYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIFwiZGF0YS1vcmllbnRhdGlvblwiOiBzdGF0ZS5jb250ZXh0Lm9yaWVudGF0aW9uLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIoZ3JvdXBEaXNhYmxlZCksXG4gICAgICAgIGlkOiBkb20uZ2V0TGFiZWxJZChzdGF0ZS5jb250ZXh0KSxcbiAgICAgICAgb25DbGljazogZm9jdXNcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0SXRlbVN0YXRlLFxuICAgIGdldEl0ZW1Qcm9wcyhwcm9wczIpIHtcbiAgICAgIGNvbnN0IGl0ZW1TdGF0ZSA9IGdldEl0ZW1TdGF0ZShwcm9wczIpO1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5sYWJlbCh7XG4gICAgICAgIC4uLnBhcnRzLml0ZW0uYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGlkOiBkb20uZ2V0SXRlbUlkKHN0YXRlLmNvbnRleHQsIHByb3BzMi52YWx1ZSksXG4gICAgICAgIGh0bWxGb3I6IGRvbS5nZXRJdGVtSGlkZGVuSW5wdXRJZChzdGF0ZS5jb250ZXh0LCBwcm9wczIudmFsdWUpLFxuICAgICAgICAuLi5nZXRJdGVtRGF0YUF0dHJzKHByb3BzMiksXG4gICAgICAgIG9uUG9pbnRlck1vdmUoKSB7XG4gICAgICAgICAgaWYgKGl0ZW1TdGF0ZS5kaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmIChpdGVtU3RhdGUuaG92ZXJlZCkgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9IT1ZFUkVEXCIsIHZhbHVlOiBwcm9wczIudmFsdWUsIGhvdmVyZWQ6IHRydWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uUG9pbnRlckxlYXZlKCkge1xuICAgICAgICAgIGlmIChpdGVtU3RhdGUuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTRVRfSE9WRVJFRFwiLCB2YWx1ZTogbnVsbCB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Qb2ludGVyRG93bihldmVudCkge1xuICAgICAgICAgIGlmIChpdGVtU3RhdGUuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoaXRlbVN0YXRlLmZvY3VzZWQgJiYgZXZlbnQucG9pbnRlclR5cGUgPT09IFwibW91c2VcIikge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiU0VUX0FDVElWRVwiLCB2YWx1ZTogcHJvcHMyLnZhbHVlLCBhY3RpdmU6IHRydWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uUG9pbnRlclVwKCkge1xuICAgICAgICAgIGlmIChpdGVtU3RhdGUuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTRVRfQUNUSVZFXCIsIHZhbHVlOiBudWxsIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEl0ZW1UZXh0UHJvcHMocHJvcHMyKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5pdGVtVGV4dC5hdHRycyxcbiAgICAgICAgZGlyOiBzdGF0ZS5jb250ZXh0LmRpcixcbiAgICAgICAgaWQ6IGRvbS5nZXRJdGVtTGFiZWxJZChzdGF0ZS5jb250ZXh0LCBwcm9wczIudmFsdWUpLFxuICAgICAgICAuLi5nZXRJdGVtRGF0YUF0dHJzKHByb3BzMilcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0SXRlbUNvbnRyb2xQcm9wcyhwcm9wczIpIHtcbiAgICAgIGNvbnN0IGNvbnRyb2xTdGF0ZSA9IGdldEl0ZW1TdGF0ZShwcm9wczIpO1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5lbGVtZW50KHtcbiAgICAgICAgLi4ucGFydHMuaXRlbUNvbnRyb2wuYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGlkOiBkb20uZ2V0SXRlbUNvbnRyb2xJZChzdGF0ZS5jb250ZXh0LCBwcm9wczIudmFsdWUpLFxuICAgICAgICBcImRhdGEtYWN0aXZlXCI6IGRhdGFBdHRyKGNvbnRyb2xTdGF0ZS5hY3RpdmUpLFxuICAgICAgICBcImFyaWEtaGlkZGVuXCI6IHRydWUsXG4gICAgICAgIC4uLmdldEl0ZW1EYXRhQXR0cnMocHJvcHMyKVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRJdGVtSGlkZGVuSW5wdXRQcm9wcyhwcm9wczIpIHtcbiAgICAgIGNvbnN0IGlucHV0U3RhdGUgPSBnZXRJdGVtU3RhdGUocHJvcHMyKTtcbiAgICAgIHJldHVybiBub3JtYWxpemUuaW5wdXQoe1xuICAgICAgICBcImRhdGEtb3duZWRieVwiOiBkb20uZ2V0Um9vdElkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBpZDogZG9tLmdldEl0ZW1IaWRkZW5JbnB1dElkKHN0YXRlLmNvbnRleHQsIHByb3BzMi52YWx1ZSksXG4gICAgICAgIHR5cGU6IFwicmFkaW9cIixcbiAgICAgICAgbmFtZTogc3RhdGUuY29udGV4dC5uYW1lIHx8IHN0YXRlLmNvbnRleHQuaWQsXG4gICAgICAgIGZvcm06IHN0YXRlLmNvbnRleHQuZm9ybSxcbiAgICAgICAgdmFsdWU6IHByb3BzMi52YWx1ZSxcbiAgICAgICAgb25DbGljayhldmVudCkge1xuICAgICAgICAgIGlmIChyZWFkT25seSkge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGV2ZW50LmN1cnJlbnRUYXJnZXQuY2hlY2tlZCkge1xuICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiU0VUX1ZBTFVFXCIsIHZhbHVlOiBwcm9wczIudmFsdWUsIGlzVHJ1c3RlZDogdHJ1ZSB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uQmx1cigpIHtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTRVRfRk9DVVNFRFwiLCB2YWx1ZTogbnVsbCwgZm9jdXNlZDogZmFsc2UsIGZvY3VzVmlzaWJsZTogZmFsc2UgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRm9jdXMoKSB7XG4gICAgICAgICAgY29uc3QgZm9jdXNWaXNpYmxlID0gaXNGb2N1c1Zpc2libGUoKTtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTRVRfRk9DVVNFRFwiLCB2YWx1ZTogcHJvcHMyLnZhbHVlLCBmb2N1c2VkOiB0cnVlLCBmb2N1c1Zpc2libGUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uS2V5RG93bihldmVudCkge1xuICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCIgXCIpIHtcbiAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9BQ1RJVkVcIiwgdmFsdWU6IHByb3BzMi52YWx1ZSwgYWN0aXZlOiB0cnVlIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25LZXlVcChldmVudCkge1xuICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCIgXCIpIHtcbiAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9BQ1RJVkVcIiwgdmFsdWU6IG51bGwgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBkaXNhYmxlZDogaW5wdXRTdGF0ZS5kaXNhYmxlZCxcbiAgICAgICAgZGVmYXVsdENoZWNrZWQ6IGlucHV0U3RhdGUuY2hlY2tlZCxcbiAgICAgICAgc3R5bGU6IHZpc3VhbGx5SGlkZGVuU3R5bGVcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0SW5kaWNhdG9yUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICBpZDogZG9tLmdldEluZGljYXRvcklkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICAuLi5wYXJ0cy5pbmRpY2F0b3IuYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGhpZGRlbjogc3RhdGUuY29udGV4dC52YWx1ZSA9PSBudWxsLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIoZ3JvdXBEaXNhYmxlZCksXG4gICAgICAgIFwiZGF0YS1vcmllbnRhdGlvblwiOiBzdGF0ZS5jb250ZXh0Lm9yaWVudGF0aW9uLFxuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIFwiLS10cmFuc2l0aW9uLXByb3BlcnR5XCI6IFwibGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0XCIsXG4gICAgICAgICAgXCItLWxlZnRcIjogc3RhdGUuY29udGV4dC5pbmRpY2F0b3JSZWN0Py5sZWZ0LFxuICAgICAgICAgIFwiLS10b3BcIjogc3RhdGUuY29udGV4dC5pbmRpY2F0b3JSZWN0Py50b3AsXG4gICAgICAgICAgXCItLXdpZHRoXCI6IHN0YXRlLmNvbnRleHQuaW5kaWNhdG9yUmVjdD8ud2lkdGgsXG4gICAgICAgICAgXCItLWhlaWdodFwiOiBzdGF0ZS5jb250ZXh0LmluZGljYXRvclJlY3Q/LmhlaWdodCxcbiAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICAgIHdpbGxDaGFuZ2U6IFwidmFyKC0tdHJhbnNpdGlvbi1wcm9wZXJ0eSlcIixcbiAgICAgICAgICB0cmFuc2l0aW9uUHJvcGVydHk6IFwidmFyKC0tdHJhbnNpdGlvbi1wcm9wZXJ0eSlcIixcbiAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IHN0YXRlLmNvbnRleHQuY2FuSW5kaWNhdG9yVHJhbnNpdGlvbiA/IFwidmFyKC0tdHJhbnNpdGlvbi1kdXJhdGlvbiwgMTUwbXMpXCIgOiBcIjBtc1wiLFxuICAgICAgICAgIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbjogXCJ2YXIoLS10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbilcIixcbiAgICAgICAgICBbc3RhdGUuY29udGV4dC5vcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgPyBcImxlZnRcIiA6IFwidG9wXCJdOiBzdGF0ZS5jb250ZXh0Lm9yaWVudGF0aW9uID09PSBcImhvcml6b250YWxcIiA/IFwidmFyKC0tbGVmdClcIiA6IFwidmFyKC0tdG9wKVwiXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cbnZhciB7IG5vdCB9ID0gZ3VhcmRzO1xuZnVuY3Rpb24gbWFjaGluZSh1c2VyQ29udGV4dCkge1xuICBjb25zdCBjdHggPSBjb21wYWN0KHVzZXJDb250ZXh0KTtcbiAgcmV0dXJuIGNyZWF0ZU1hY2hpbmUoXG4gICAge1xuICAgICAgaWQ6IFwicmFkaW9cIixcbiAgICAgIGluaXRpYWw6IFwiaWRsZVwiLFxuICAgICAgY29udGV4dDoge1xuICAgICAgICB2YWx1ZTogbnVsbCxcbiAgICAgICAgYWN0aXZlVmFsdWU6IG51bGwsXG4gICAgICAgIGZvY3VzZWRWYWx1ZTogbnVsbCxcbiAgICAgICAgaG92ZXJlZFZhbHVlOiBudWxsLFxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIG9yaWVudGF0aW9uOiBcInZlcnRpY2FsXCIsXG4gICAgICAgIC4uLmN0eCxcbiAgICAgICAgaW5kaWNhdG9yUmVjdDoge30sXG4gICAgICAgIGNhbkluZGljYXRvclRyYW5zaXRpb246IGZhbHNlLFxuICAgICAgICBmaWVsZHNldERpc2FibGVkOiBmYWxzZSxcbiAgICAgICAgZm9jdXNWaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgc3NyOiB0cnVlXG4gICAgICB9LFxuICAgICAgY29tcHV0ZWQ6IHtcbiAgICAgICAgaXNEaXNhYmxlZDogKGN0eDIpID0+ICEhY3R4Mi5kaXNhYmxlZCB8fCBjdHgyLmZpZWxkc2V0RGlzYWJsZWRcbiAgICAgIH0sXG4gICAgICBlbnRyeTogW1wic3luY0luZGljYXRvclJlY3RcIiwgXCJzeW5jU3NyXCJdLFxuICAgICAgZXhpdDogW1wiY2xlYW51cE9ic2VydmVyXCJdLFxuICAgICAgYWN0aXZpdGllczogW1widHJhY2tGb3JtQ29udHJvbFN0YXRlXCIsIFwidHJhY2tGb2N1c1Zpc2libGVcIl0sXG4gICAgICB3YXRjaDoge1xuICAgICAgICB2YWx1ZTogW1wic2V0SW5kaWNhdG9yVHJhbnNpdGlvblwiLCBcInN5bmNJbmRpY2F0b3JSZWN0XCIsIFwic3luY0lucHV0RWxlbWVudHNcIl1cbiAgICAgIH0sXG4gICAgICBvbjoge1xuICAgICAgICBTRVRfVkFMVUU6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogbm90KFwiaXNUcnVzdGVkXCIpLFxuICAgICAgICAgICAgYWN0aW9uczogW1wic2V0VmFsdWVcIiwgXCJkaXNwYXRjaENoYW5nZUV2ZW50XCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRWYWx1ZVwiXVxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgU0VUX0hPVkVSRUQ6IHtcbiAgICAgICAgICBhY3Rpb25zOiBcInNldEhvdmVyZWRcIlxuICAgICAgICB9LFxuICAgICAgICBTRVRfQUNUSVZFOiB7XG4gICAgICAgICAgYWN0aW9uczogXCJzZXRBY3RpdmVcIlxuICAgICAgICB9LFxuICAgICAgICBTRVRfRk9DVVNFRDoge1xuICAgICAgICAgIGFjdGlvbnM6IFwic2V0Rm9jdXNlZFwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzdGF0ZXM6IHtcbiAgICAgICAgaWRsZToge31cbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIGd1YXJkczoge1xuICAgICAgICBpc1RydXN0ZWQ6IChfY3R4LCBldnQpID0+ICEhZXZ0LmlzVHJ1c3RlZFxuICAgICAgfSxcbiAgICAgIGFjdGl2aXRpZXM6IHtcbiAgICAgICAgdHJhY2tGb3JtQ29udHJvbFN0YXRlKGN0eDIsIF9ldnQsIHsgc2VuZCwgaW5pdGlhbENvbnRleHQgfSkge1xuICAgICAgICAgIHJldHVybiB0cmFja0Zvcm1Db250cm9sKGRvbS5nZXRSb290RWwoY3R4MiksIHtcbiAgICAgICAgICAgIG9uRmllbGRzZXREaXNhYmxlZENoYW5nZShkaXNhYmxlZCkge1xuICAgICAgICAgICAgICBjdHgyLmZpZWxkc2V0RGlzYWJsZWQgPSBkaXNhYmxlZDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkZvcm1SZXNldCgpIHtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiU0VUX1ZBTFVFXCIsIHZhbHVlOiBpbml0aWFsQ29udGV4dC52YWx1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgdHJhY2tGb2N1c1Zpc2libGUoY3R4Mikge1xuICAgICAgICAgIHJldHVybiB0cmFja0ZvY3VzVmlzaWJsZSh7IHJvb3Q6IGRvbS5nZXRSb290Tm9kZShjdHgyKSB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGFjdGlvbnM6IHtcbiAgICAgICAgc2V0VmFsdWUoY3R4MiwgZXZ0KSB7XG4gICAgICAgICAgc2V0LnZhbHVlKGN0eDIsIGV2dC52YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHNldEhvdmVyZWQoY3R4MiwgZXZ0KSB7XG4gICAgICAgICAgY3R4Mi5ob3ZlcmVkVmFsdWUgPSBldnQudmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldEFjdGl2ZShjdHgyLCBldnQpIHtcbiAgICAgICAgICBjdHgyLmFjdGl2ZVZhbHVlID0gZXZ0LnZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICBzZXRGb2N1c2VkKGN0eDIsIGV2dCkge1xuICAgICAgICAgIGN0eDIuZm9jdXNlZFZhbHVlID0gZXZ0LnZhbHVlO1xuICAgICAgICAgIGN0eDIuZm9jdXNWaXNpYmxlID0gZXZ0LmZvY3VzVmlzaWJsZTtcbiAgICAgICAgfSxcbiAgICAgICAgc3luY0lucHV0RWxlbWVudHMoY3R4Mikge1xuICAgICAgICAgIGNvbnN0IGlucHV0cyA9IGRvbS5nZXRJbnB1dEVscyhjdHgyKTtcbiAgICAgICAgICBpbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgICAgICAgIGlucHV0LmNoZWNrZWQgPSBpbnB1dC52YWx1ZSA9PT0gY3R4Mi52YWx1ZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0SW5kaWNhdG9yVHJhbnNpdGlvbihjdHgyKSB7XG4gICAgICAgICAgY3R4Mi5jYW5JbmRpY2F0b3JUcmFuc2l0aW9uID0gaXNTdHJpbmcoY3R4Mi52YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGNsZWFudXBPYnNlcnZlcihjdHgyKSB7XG4gICAgICAgICAgY3R4Mi5pbmRpY2F0b3JDbGVhbnVwPy4oKTtcbiAgICAgICAgfSxcbiAgICAgICAgc3luY1NzcihjdHgyKSB7XG4gICAgICAgICAgY3R4Mi5zc3IgPSBmYWxzZTtcbiAgICAgICAgfSxcbiAgICAgICAgc3luY0luZGljYXRvclJlY3QoY3R4Mikge1xuICAgICAgICAgIGN0eDIuaW5kaWNhdG9yQ2xlYW51cD8uKCk7XG4gICAgICAgICAgaWYgKCFkb20uZ2V0SW5kaWNhdG9yRWwoY3R4MikpIHJldHVybjtcbiAgICAgICAgICBjb25zdCB2YWx1ZSA9IGN0eDIudmFsdWU7XG4gICAgICAgICAgY29uc3QgcmFkaW9FbCA9IGRvbS5nZXRBY3RpdmVSYWRpb0VsKGN0eDIpO1xuICAgICAgICAgIGlmICh2YWx1ZSA9PSBudWxsIHx8ICFyYWRpb0VsKSB7XG4gICAgICAgICAgICBjdHgyLmluZGljYXRvclJlY3QgPSB7fTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgY3R4Mi5pbmRpY2F0b3JDbGVhbnVwID0gdHJhY2tFbGVtZW50UmVjdChyYWRpb0VsLCB7XG4gICAgICAgICAgICBnZXRSZWN0KGVsKSB7XG4gICAgICAgICAgICAgIHJldHVybiBkb20uZ2V0T2Zmc2V0UmVjdChlbCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25DaGFuZ2UocmVjdCkge1xuICAgICAgICAgICAgICBjdHgyLmluZGljYXRvclJlY3QgPSBkb20ucmVzb2x2ZVJlY3QocmVjdCk7XG4gICAgICAgICAgICAgIG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjdHgyLmNhbkluZGljYXRvclRyYW5zaXRpb24gPSBmYWxzZTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGRpc3BhdGNoQ2hhbmdlRXZlbnQoY3R4Mikge1xuICAgICAgICAgIGNvbnN0IGlucHV0RWxzID0gZG9tLmdldElucHV0RWxzKGN0eDIpO1xuICAgICAgICAgIGlucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNoZWNrZWQgPSBpbnB1dEVsLnZhbHVlID09PSBjdHgyLnZhbHVlO1xuICAgICAgICAgICAgaWYgKGNoZWNrZWQgPT09IGlucHV0RWwuY2hlY2tlZCkgcmV0dXJuO1xuICAgICAgICAgICAgZGlzcGF0Y2hJbnB1dENoZWNrZWRFdmVudChpbnB1dEVsLCB7IGNoZWNrZWQgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICk7XG59XG52YXIgaW52b2tlID0ge1xuICBjaGFuZ2U6IChjdHgpID0+IHtcbiAgICBpZiAoY3R4LnZhbHVlID09IG51bGwpIHJldHVybjtcbiAgICBjdHgub25WYWx1ZUNoYW5nZT8uKHsgdmFsdWU6IGN0eC52YWx1ZSB9KTtcbiAgfVxufTtcbnZhciBzZXQgPSB7XG4gIHZhbHVlOiAoY3R4LCB2YWx1ZSkgPT4ge1xuICAgIGlmIChpc0VxdWFsKGN0eC52YWx1ZSwgdmFsdWUpKSByZXR1cm47XG4gICAgY3R4LnZhbHVlID0gdmFsdWU7XG4gICAgaW52b2tlLmNoYW5nZShjdHgpO1xuICB9XG59O1xudmFyIHByb3BzID0gY3JlYXRlUHJvcHMoKShbXG4gIFwiZGlyXCIsXG4gIFwiZGlzYWJsZWRcIixcbiAgXCJmb3JtXCIsXG4gIFwiZ2V0Um9vdE5vZGVcIixcbiAgXCJpZFwiLFxuICBcImlkc1wiLFxuICBcIm5hbWVcIixcbiAgXCJvblZhbHVlQ2hhbmdlXCIsXG4gIFwib3JpZW50YXRpb25cIixcbiAgXCJyZWFkT25seVwiLFxuICBcInZhbHVlXCJcbl0pO1xudmFyIHNwbGl0UHJvcHMgPSBjcmVhdGVTcGxpdFByb3BzKHByb3BzKTtcbnZhciBpdGVtUHJvcHMgPSBjcmVhdGVQcm9wcygpKFtcInZhbHVlXCIsIFwiZGlzYWJsZWRcIiwgXCJpbnZhbGlkXCJdKTtcbnZhciBzcGxpdEl0ZW1Qcm9wcyA9IGNyZWF0ZVNwbGl0UHJvcHMoaXRlbVByb3BzKTtcblxuZXhwb3J0IHsgYW5hdG9teSwgY29ubmVjdCwgaXRlbVByb3BzLCBtYWNoaW5lLCBwcm9wcywgc3BsaXRJdGVtUHJvcHMsIHNwbGl0UHJvcHMgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/radio-group/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/rating-group/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/rating-group/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/rating-group.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"rating-group\").parts(\"root\", \"label\", \"item\", \"control\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `rating:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `rating:${ctx.id}:label`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `rating:${ctx.id}:input`,\n  getControlId: (ctx) => ctx.ids?.control ?? `rating:${ctx.id}:control`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `rating:${ctx.id}:item:${id}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getRadioEl: (ctx, value = ctx.value) => {\n    const selector = `[role=radio][aria-posinset='${Math.ceil(value)}']`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(dom.getControlEl(ctx), selector);\n  },\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  dispatchChangeEvent: (ctx) => {\n    const inputEl = dom.getHiddenInputEl(ctx);\n    if (!inputEl) return;\n    (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_2__.dispatchInputValueEvent)(inputEl, { value: ctx.value });\n  }\n});\n\n// src/rating-group.connect.ts\nfunction connect(state, send, normalize) {\n  const interactive = state.context.isInteractive;\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const value = state.context.value;\n  const hoveredValue = state.context.hoveredValue;\n  const translations = state.context.translations;\n  function getItemState(props2) {\n    const value2 = state.context.isHovering ? state.context.hoveredValue : state.context.value;\n    const equal = Math.ceil(value2) === props2.index;\n    const highlighted = props2.index <= value2 || equal;\n    const half = equal && Math.abs(value2 - props2.index) === 0.5;\n    return {\n      highlighted,\n      half,\n      checked: equal || state.context.value === -1 && props2.index === 1\n    };\n  }\n  return {\n    hovering: state.context.isHovering,\n    value,\n    hoveredValue,\n    count: state.context.count,\n    items: Array.from({ length: state.context.count }).map((_, index) => index + 1),\n    setValue(value2) {\n      send({ type: \"SET_VALUE\", value: value2 });\n    },\n    clearValue() {\n      send(\"CLEAR_VALUE\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        name: state.context.name,\n        form: state.context.form,\n        type: \"text\",\n        hidden: true,\n        disabled,\n        readOnly,\n        required: state.context.required,\n        id: dom.getHiddenInputId(state.context),\n        defaultValue: state.context.value\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          event.preventDefault();\n          const radioEl = dom.getRadioEl(state.context, 1);\n          radioEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"radiogroup\",\n        \"aria-orientation\": \"horizontal\",\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(readOnly),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onPointerMove(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"GROUP_POINTER_OVER\");\n        },\n        onPointerLeave(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"GROUP_POINTER_LEAVE\");\n        }\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const { index } = props2;\n      const itemState = getItemState(props2);\n      const valueText = translations.ratingValueText(index);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, index.toString()),\n        role: \"radio\",\n        tabIndex: (() => {\n          if (readOnly) return itemState.checked ? 0 : void 0;\n          if (disabled) return void 0;\n          return itemState.checked ? 0 : -1;\n        })(),\n        \"aria-roledescription\": \"rating\",\n        \"aria-label\": valueText,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"aria-setsize\": state.context.count,\n        \"aria-checked\": itemState.checked,\n        \"data-checked\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.checked),\n        \"aria-posinset\": index,\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-half\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.half),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          event.preventDefault();\n        },\n        onPointerMove(event) {\n          if (!interactive) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const relativePoint = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, event.currentTarget);\n          const percentX = relativePoint.getPercentValue({\n            orientation: \"horizontal\",\n            dir: state.context.dir\n          });\n          const isMidway = percentX < 0.5;\n          send({ type: \"POINTER_OVER\", index, isMidway });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowLeft() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"ARROW_RIGHT\");\n            },\n            ArrowUp() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowDown() {\n              send(\"ARROW_RIGHT\");\n            },\n            Space() {\n              send({ type: \"SPACE\", value: index });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        },\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"CLICK\", value: index });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send(\"FOCUS\");\n        },\n        onBlur() {\n          if (!interactive) return;\n          send(\"BLUR\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)(\n    {\n      id: \"rating\",\n      initial: \"idle\",\n      context: {\n        name: \"rating\",\n        count: 5,\n        dir: \"ltr\",\n        value: -1,\n        readOnly: false,\n        disabled: false,\n        ...ctx,\n        hoveredValue: -1,\n        fieldsetDisabled: false,\n        translations: {\n          ratingValueText: (index) => `${index} stars`,\n          ...ctx.translations\n        }\n      },\n      created: [\"roundValueIfNeeded\"],\n      watch: {\n        allowHalf: [\"roundValueIfNeeded\"]\n      },\n      computed: {\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.isDisabled || ctx2.readOnly),\n        isHovering: (ctx2) => ctx2.hoveredValue > -1\n      },\n      activities: [\"trackFormControlState\"],\n      on: {\n        SET_VALUE: {\n          actions: [\"setValue\"]\n        },\n        CLEAR_VALUE: {\n          actions: [\"clearValue\"]\n        }\n      },\n      states: {\n        idle: {\n          entry: \"clearHoveredValue\",\n          on: {\n            GROUP_POINTER_OVER: \"hover\",\n            FOCUS: \"focus\",\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            }\n          }\n        },\n        focus: {\n          on: {\n            POINTER_OVER: {\n              actions: \"setHoveredValue\"\n            },\n            GROUP_POINTER_LEAVE: {\n              actions: \"clearHoveredValue\"\n            },\n            BLUR: \"idle\",\n            SPACE: {\n              guard: \"isValueEmpty\",\n              actions: [\"setValue\"]\n            },\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            },\n            ARROW_LEFT: {\n              actions: [\"setPrevValue\", \"focusActiveRadio\"]\n            },\n            ARROW_RIGHT: {\n              actions: [\"setNextValue\", \"focusActiveRadio\"]\n            },\n            HOME: {\n              actions: [\"setValueToMin\", \"focusActiveRadio\"]\n            },\n            END: {\n              actions: [\"setValueToMax\", \"focusActiveRadio\"]\n            }\n          }\n        },\n        hover: {\n          on: {\n            POINTER_OVER: {\n              actions: \"setHoveredValue\"\n            },\n            GROUP_POINTER_LEAVE: [\n              {\n                guard: \"isRadioFocused\",\n                target: \"focus\",\n                actions: \"clearHoveredValue\"\n              },\n              {\n                target: \"idle\",\n                actions: \"clearHoveredValue\"\n              }\n            ],\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isInteractive: (ctx2) => !(ctx2.disabled || ctx2.readOnly),\n        isHoveredValueEmpty: (ctx2) => ctx2.hoveredValue === -1,\n        isValueEmpty: (ctx2) => ctx2.value <= 0,\n        isRadioFocused: (ctx2) => !!dom.getControlEl(ctx2)?.contains(dom.getActiveElement(ctx2))\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { initialContext }) {\n          return (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_2__.trackFormControl)(dom.getHiddenInputEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.value(ctx2, initialContext.value);\n            }\n          });\n        }\n      },\n      actions: {\n        clearHoveredValue(ctx2) {\n          set.hoveredValue(ctx2, -1);\n        },\n        focusActiveRadio(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => dom.getRadioEl(ctx2)?.focus());\n        },\n        setPrevValue(ctx2) {\n          const factor = ctx2.allowHalf ? 0.5 : 1;\n          set.value(ctx2, Math.max(0, ctx2.value - factor));\n        },\n        setNextValue(ctx2) {\n          const factor = ctx2.allowHalf ? 0.5 : 1;\n          const value = ctx2.value === -1 ? 0 : ctx2.value;\n          set.value(ctx2, Math.min(ctx2.count, value + factor));\n        },\n        setValueToMin(ctx2) {\n          set.value(ctx2, 1);\n        },\n        setValueToMax(ctx2) {\n          set.value(ctx2, ctx2.count);\n        },\n        setValue(ctx2, evt) {\n          const value = ctx2.hoveredValue === -1 ? evt.value : ctx2.hoveredValue;\n          set.value(ctx2, value);\n        },\n        clearValue(ctx2) {\n          set.value(ctx2, -1);\n        },\n        setHoveredValue(ctx2, evt) {\n          const half = ctx2.allowHalf && evt.isMidway;\n          const factor = half ? 0.5 : 0;\n          set.hoveredValue(ctx2, evt.index - factor);\n        },\n        roundValueIfNeeded(ctx2) {\n          if (ctx2.allowHalf) return;\n          ctx2.value = Math.round(ctx2.value);\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onValueChange?.({ value: ctx.value });\n    dom.dispatchChangeEvent(ctx);\n  },\n  hoverChange: (ctx) => {\n    ctx.onHoverChange?.({ hoveredValue: ctx.hoveredValue });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  hoveredValue: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.isEqual)(ctx.hoveredValue, value)) return;\n    ctx.hoveredValue = value;\n    invoke.hoverChange(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"allowHalf\",\n  \"autoFocus\",\n  \"count\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onHoverChange\",\n  \"onValueChange\",\n  \"required\",\n  \"readOnly\",\n  \"translations\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\"index\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yYXRpbmctZ3JvdXAvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFnRDtBQUMyRjtBQUM1RDtBQUNsQztBQUNzQjtBQUN2Qjs7QUFFNUM7QUFDQSxjQUFjLDhEQUFhO0FBQzNCO0FBQ0EsVUFBVSw4REFBVztBQUNyQixpREFBaUQsT0FBTztBQUN4RCxtREFBbUQsT0FBTztBQUMxRCwrREFBK0QsT0FBTztBQUN0RSx1REFBdUQsT0FBTztBQUM5RCwyREFBMkQsT0FBTyxRQUFRLEdBQUc7QUFDN0U7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGlCQUFpQjtBQUNyRSxXQUFXLHdEQUFLO0FBQ2hCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksMkVBQXVCLFlBQVksa0JBQWtCO0FBQ3pEO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkJBQTZCO0FBQ3JEO0FBQ0EsYUFBYSxrQ0FBa0M7QUFDL0MsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUJBQXFCO0FBQ2hEO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJEQUFRO0FBQ2pDLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBLHdCQUF3QiwyREFBUTtBQUNoQztBQUNBLDRCQUE0QiwyREFBUTtBQUNwQyxxQkFBcUIsMkRBQVE7QUFDN0I7QUFDQTtBQUNBLGVBQWUsOERBQVc7QUFDMUI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QixnRUFBYTtBQUNyQyxnQ0FBZ0MsbUVBQWdCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLGlCQUFpQix1Q0FBdUM7QUFDeEQsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsOERBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUJBQWlCLDZCQUE2QjtBQUM5QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxzREFBTztBQUNyQixTQUFTLDJEQUFhO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsT0FBTztBQUNoRDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSw0Q0FBNEMsZ0JBQWdCO0FBQzVELGlCQUFpQixvRUFBZ0I7QUFDakM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsVUFBVSxzREFBRztBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGtCQUFrQjtBQUM1QztBQUNBLEdBQUc7QUFDSDtBQUNBLDBCQUEwQixnQ0FBZ0M7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFPO0FBQ2Y7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLFFBQVEsc0RBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrREFBZ0I7QUFDakMsZ0JBQWdCLDBEQUFXO0FBQzNCLHFCQUFxQiwrREFBZ0I7O0FBRThDIiwic291cmNlcyI6WyIvaG9tZS9zYWNoYS9FcGl0ZWNoL0ctRVBJLTMwMC1SRU4tMy0xLXByb2plY3R3ZWVrLW5hdGhhbi5qZWFubm90L2Zyb250L25vZGVfbW9kdWxlcy9AemFnLWpzL3JhdGluZy1ncm91cC9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBbmF0b215IH0gZnJvbSAnQHphZy1qcy9hbmF0b215JztcbmltcG9ydCB7IGNyZWF0ZVNjb3BlLCBxdWVyeSwgZGF0YUF0dHIsIGFyaWFBdHRyLCBpc0xlZnRDbGljaywgZ2V0RXZlbnRQb2ludCwgZ2V0UmVsYXRpdmVQb2ludCwgZ2V0RXZlbnRLZXksIHJhZiB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcbmltcG9ydCB7IGRpc3BhdGNoSW5wdXRWYWx1ZUV2ZW50LCB0cmFja0Zvcm1Db250cm9sIH0gZnJvbSAnQHphZy1qcy9mb3JtLXV0aWxzJztcbmltcG9ydCB7IGNyZWF0ZU1hY2hpbmUgfSBmcm9tICdAemFnLWpzL2NvcmUnO1xuaW1wb3J0IHsgY3JlYXRlU3BsaXRQcm9wcywgY29tcGFjdCwgaXNFcXVhbCB9IGZyb20gJ0B6YWctanMvdXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlUHJvcHMgfSBmcm9tICdAemFnLWpzL3R5cGVzJztcblxuLy8gc3JjL3JhdGluZy1ncm91cC5hbmF0b215LnRzXG52YXIgYW5hdG9teSA9IGNyZWF0ZUFuYXRvbXkoXCJyYXRpbmctZ3JvdXBcIikucGFydHMoXCJyb290XCIsIFwibGFiZWxcIiwgXCJpdGVtXCIsIFwiY29udHJvbFwiKTtcbnZhciBwYXJ0cyA9IGFuYXRvbXkuYnVpbGQoKTtcbnZhciBkb20gPSBjcmVhdGVTY29wZSh7XG4gIGdldFJvb3RJZDogKGN0eCkgPT4gY3R4Lmlkcz8ucm9vdCA/PyBgcmF0aW5nOiR7Y3R4LmlkfWAsXG4gIGdldExhYmVsSWQ6IChjdHgpID0+IGN0eC5pZHM/LmxhYmVsID8/IGByYXRpbmc6JHtjdHguaWR9OmxhYmVsYCxcbiAgZ2V0SGlkZGVuSW5wdXRJZDogKGN0eCkgPT4gY3R4Lmlkcz8uaGlkZGVuSW5wdXQgPz8gYHJhdGluZzoke2N0eC5pZH06aW5wdXRgLFxuICBnZXRDb250cm9sSWQ6IChjdHgpID0+IGN0eC5pZHM/LmNvbnRyb2wgPz8gYHJhdGluZzoke2N0eC5pZH06Y29udHJvbGAsXG4gIGdldEl0ZW1JZDogKGN0eCwgaWQpID0+IGN0eC5pZHM/Lml0ZW0/LihpZCkgPz8gYHJhdGluZzoke2N0eC5pZH06aXRlbToke2lkfWAsXG4gIGdldFJvb3RFbDogKGN0eCkgPT4gZG9tLmdldEJ5SWQoY3R4LCBkb20uZ2V0Um9vdElkKGN0eCkpLFxuICBnZXRDb250cm9sRWw6IChjdHgpID0+IGRvbS5nZXRCeUlkKGN0eCwgZG9tLmdldENvbnRyb2xJZChjdHgpKSxcbiAgZ2V0UmFkaW9FbDogKGN0eCwgdmFsdWUgPSBjdHgudmFsdWUpID0+IHtcbiAgICBjb25zdCBzZWxlY3RvciA9IGBbcm9sZT1yYWRpb11bYXJpYS1wb3NpbnNldD0nJHtNYXRoLmNlaWwodmFsdWUpfSddYDtcbiAgICByZXR1cm4gcXVlcnkoZG9tLmdldENvbnRyb2xFbChjdHgpLCBzZWxlY3Rvcik7XG4gIH0sXG4gIGdldEhpZGRlbklucHV0RWw6IChjdHgpID0+IGRvbS5nZXRCeUlkKGN0eCwgZG9tLmdldEhpZGRlbklucHV0SWQoY3R4KSksXG4gIGRpc3BhdGNoQ2hhbmdlRXZlbnQ6IChjdHgpID0+IHtcbiAgICBjb25zdCBpbnB1dEVsID0gZG9tLmdldEhpZGRlbklucHV0RWwoY3R4KTtcbiAgICBpZiAoIWlucHV0RWwpIHJldHVybjtcbiAgICBkaXNwYXRjaElucHV0VmFsdWVFdmVudChpbnB1dEVsLCB7IHZhbHVlOiBjdHgudmFsdWUgfSk7XG4gIH1cbn0pO1xuXG4vLyBzcmMvcmF0aW5nLWdyb3VwLmNvbm5lY3QudHNcbmZ1bmN0aW9uIGNvbm5lY3Qoc3RhdGUsIHNlbmQsIG5vcm1hbGl6ZSkge1xuICBjb25zdCBpbnRlcmFjdGl2ZSA9IHN0YXRlLmNvbnRleHQuaXNJbnRlcmFjdGl2ZTtcbiAgY29uc3QgZGlzYWJsZWQgPSBzdGF0ZS5jb250ZXh0LmlzRGlzYWJsZWQ7XG4gIGNvbnN0IHJlYWRPbmx5ID0gc3RhdGUuY29udGV4dC5yZWFkT25seTtcbiAgY29uc3QgdmFsdWUgPSBzdGF0ZS5jb250ZXh0LnZhbHVlO1xuICBjb25zdCBob3ZlcmVkVmFsdWUgPSBzdGF0ZS5jb250ZXh0LmhvdmVyZWRWYWx1ZTtcbiAgY29uc3QgdHJhbnNsYXRpb25zID0gc3RhdGUuY29udGV4dC50cmFuc2xhdGlvbnM7XG4gIGZ1bmN0aW9uIGdldEl0ZW1TdGF0ZShwcm9wczIpIHtcbiAgICBjb25zdCB2YWx1ZTIgPSBzdGF0ZS5jb250ZXh0LmlzSG92ZXJpbmcgPyBzdGF0ZS5jb250ZXh0LmhvdmVyZWRWYWx1ZSA6IHN0YXRlLmNvbnRleHQudmFsdWU7XG4gICAgY29uc3QgZXF1YWwgPSBNYXRoLmNlaWwodmFsdWUyKSA9PT0gcHJvcHMyLmluZGV4O1xuICAgIGNvbnN0IGhpZ2hsaWdodGVkID0gcHJvcHMyLmluZGV4IDw9IHZhbHVlMiB8fCBlcXVhbDtcbiAgICBjb25zdCBoYWxmID0gZXF1YWwgJiYgTWF0aC5hYnModmFsdWUyIC0gcHJvcHMyLmluZGV4KSA9PT0gMC41O1xuICAgIHJldHVybiB7XG4gICAgICBoaWdobGlnaHRlZCxcbiAgICAgIGhhbGYsXG4gICAgICBjaGVja2VkOiBlcXVhbCB8fCBzdGF0ZS5jb250ZXh0LnZhbHVlID09PSAtMSAmJiBwcm9wczIuaW5kZXggPT09IDFcbiAgICB9O1xuICB9XG4gIHJldHVybiB7XG4gICAgaG92ZXJpbmc6IHN0YXRlLmNvbnRleHQuaXNIb3ZlcmluZyxcbiAgICB2YWx1ZSxcbiAgICBob3ZlcmVkVmFsdWUsXG4gICAgY291bnQ6IHN0YXRlLmNvbnRleHQuY291bnQsXG4gICAgaXRlbXM6IEFycmF5LmZyb20oeyBsZW5ndGg6IHN0YXRlLmNvbnRleHQuY291bnQgfSkubWFwKChfLCBpbmRleCkgPT4gaW5kZXggKyAxKSxcbiAgICBzZXRWYWx1ZSh2YWx1ZTIpIHtcbiAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9WQUxVRVwiLCB2YWx1ZTogdmFsdWUyIH0pO1xuICAgIH0sXG4gICAgY2xlYXJWYWx1ZSgpIHtcbiAgICAgIHNlbmQoXCJDTEVBUl9WQUxVRVwiKTtcbiAgICB9LFxuICAgIGdldFJvb3RQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLnJvb3QuYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGlkOiBkb20uZ2V0Um9vdElkKHN0YXRlLmNvbnRleHQpXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEhpZGRlbklucHV0UHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmlucHV0KHtcbiAgICAgICAgbmFtZTogc3RhdGUuY29udGV4dC5uYW1lLFxuICAgICAgICBmb3JtOiBzdGF0ZS5jb250ZXh0LmZvcm0sXG4gICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICBoaWRkZW46IHRydWUsXG4gICAgICAgIGRpc2FibGVkLFxuICAgICAgICByZWFkT25seSxcbiAgICAgICAgcmVxdWlyZWQ6IHN0YXRlLmNvbnRleHQucmVxdWlyZWQsXG4gICAgICAgIGlkOiBkb20uZ2V0SGlkZGVuSW5wdXRJZChzdGF0ZS5jb250ZXh0KSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBzdGF0ZS5jb250ZXh0LnZhbHVlXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldExhYmVsUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmxhYmVsKHtcbiAgICAgICAgLi4ucGFydHMubGFiZWwuYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGlkOiBkb20uZ2V0TGFiZWxJZChzdGF0ZS5jb250ZXh0KSxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKGRpc2FibGVkKSxcbiAgICAgICAgaHRtbEZvcjogZG9tLmdldEhpZGRlbklucHV0SWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGNvbnN0IHJhZGlvRWwgPSBkb20uZ2V0UmFkaW9FbChzdGF0ZS5jb250ZXh0LCAxKTtcbiAgICAgICAgICByYWRpb0VsPy5mb2N1cyh7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0Q29udHJvbFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5lbGVtZW50KHtcbiAgICAgICAgaWQ6IGRvbS5nZXRDb250cm9sSWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIC4uLnBhcnRzLmNvbnRyb2wuYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIHJvbGU6IFwicmFkaW9ncm91cFwiLFxuICAgICAgICBcImFyaWEtb3JpZW50YXRpb25cIjogXCJob3Jpem9udGFsXCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IGRvbS5nZXRMYWJlbElkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBcImFyaWEtcmVhZG9ubHlcIjogYXJpYUF0dHIocmVhZE9ubHkpLFxuICAgICAgICBcImRhdGEtcmVhZG9ubHlcIjogZGF0YUF0dHIocmVhZE9ubHkpLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIoZGlzYWJsZWQpLFxuICAgICAgICBvblBvaW50ZXJNb3ZlKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChldmVudC5wb2ludGVyVHlwZSA9PT0gXCJ0b3VjaFwiKSByZXR1cm47XG4gICAgICAgICAgc2VuZChcIkdST1VQX1BPSU5URVJfT1ZFUlwiKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Qb2ludGVyTGVhdmUoZXZlbnQpIHtcbiAgICAgICAgICBpZiAoIWludGVyYWN0aXZlKSByZXR1cm47XG4gICAgICAgICAgaWYgKGV2ZW50LnBvaW50ZXJUeXBlID09PSBcInRvdWNoXCIpIHJldHVybjtcbiAgICAgICAgICBzZW5kKFwiR1JPVVBfUE9JTlRFUl9MRUFWRVwiKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRJdGVtU3RhdGUsXG4gICAgZ2V0SXRlbVByb3BzKHByb3BzMikge1xuICAgICAgY29uc3QgeyBpbmRleCB9ID0gcHJvcHMyO1xuICAgICAgY29uc3QgaXRlbVN0YXRlID0gZ2V0SXRlbVN0YXRlKHByb3BzMik7XG4gICAgICBjb25zdCB2YWx1ZVRleHQgPSB0cmFuc2xhdGlvbnMucmF0aW5nVmFsdWVUZXh0KGluZGV4KTtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLml0ZW0uYXR0cnMsXG4gICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXIsXG4gICAgICAgIGlkOiBkb20uZ2V0SXRlbUlkKHN0YXRlLmNvbnRleHQsIGluZGV4LnRvU3RyaW5nKCkpLFxuICAgICAgICByb2xlOiBcInJhZGlvXCIsXG4gICAgICAgIHRhYkluZGV4OiAoKCkgPT4ge1xuICAgICAgICAgIGlmIChyZWFkT25seSkgcmV0dXJuIGl0ZW1TdGF0ZS5jaGVja2VkID8gMCA6IHZvaWQgMDtcbiAgICAgICAgICBpZiAoZGlzYWJsZWQpIHJldHVybiB2b2lkIDA7XG4gICAgICAgICAgcmV0dXJuIGl0ZW1TdGF0ZS5jaGVja2VkID8gMCA6IC0xO1xuICAgICAgICB9KSgpLFxuICAgICAgICBcImFyaWEtcm9sZWRlc2NyaXB0aW9uXCI6IFwicmF0aW5nXCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiB2YWx1ZVRleHQsXG4gICAgICAgIFwiYXJpYS1kaXNhYmxlZFwiOiBkaXNhYmxlZCxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKGRpc2FibGVkKSxcbiAgICAgICAgXCJkYXRhLXJlYWRvbmx5XCI6IGRhdGFBdHRyKHJlYWRPbmx5KSxcbiAgICAgICAgXCJhcmlhLXNldHNpemVcIjogc3RhdGUuY29udGV4dC5jb3VudCxcbiAgICAgICAgXCJhcmlhLWNoZWNrZWRcIjogaXRlbVN0YXRlLmNoZWNrZWQsXG4gICAgICAgIFwiZGF0YS1jaGVja2VkXCI6IGRhdGFBdHRyKGl0ZW1TdGF0ZS5jaGVja2VkKSxcbiAgICAgICAgXCJhcmlhLXBvc2luc2V0XCI6IGluZGV4LFxuICAgICAgICBcImRhdGEtaGlnaGxpZ2h0ZWRcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmhpZ2hsaWdodGVkKSxcbiAgICAgICAgXCJkYXRhLWhhbGZcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmhhbGYpLFxuICAgICAgICBvblBvaW50ZXJEb3duKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIGlmICghaXNMZWZ0Q2xpY2soZXZlbnQpKSByZXR1cm47XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Qb2ludGVyTW92ZShldmVudCkge1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBjb25zdCBwb2ludCA9IGdldEV2ZW50UG9pbnQoZXZlbnQpO1xuICAgICAgICAgIGNvbnN0IHJlbGF0aXZlUG9pbnQgPSBnZXRSZWxhdGl2ZVBvaW50KHBvaW50LCBldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgICBjb25zdCBwZXJjZW50WCA9IHJlbGF0aXZlUG9pbnQuZ2V0UGVyY2VudFZhbHVlKHtcbiAgICAgICAgICAgIG9yaWVudGF0aW9uOiBcImhvcml6b250YWxcIixcbiAgICAgICAgICAgIGRpcjogc3RhdGUuY29udGV4dC5kaXJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBjb25zdCBpc01pZHdheSA9IHBlcmNlbnRYIDwgMC41O1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlBPSU5URVJfT1ZFUlwiLCBpbmRleCwgaXNNaWR3YXkgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uS2V5RG93bihldmVudCkge1xuICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIGNvbnN0IGtleU1hcCA9IHtcbiAgICAgICAgICAgIEFycm93TGVmdCgpIHtcbiAgICAgICAgICAgICAgc2VuZChcIkFSUk9XX0xFRlRcIik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgQXJyb3dSaWdodCgpIHtcbiAgICAgICAgICAgICAgc2VuZChcIkFSUk9XX1JJR0hUXCIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEFycm93VXAoKSB7XG4gICAgICAgICAgICAgIHNlbmQoXCJBUlJPV19MRUZUXCIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEFycm93RG93bigpIHtcbiAgICAgICAgICAgICAgc2VuZChcIkFSUk9XX1JJR0hUXCIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFNwYWNlKCkge1xuICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTUEFDRVwiLCB2YWx1ZTogaW5kZXggfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgSG9tZSgpIHtcbiAgICAgICAgICAgICAgc2VuZChcIkhPTUVcIik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgRW5kKCkge1xuICAgICAgICAgICAgICBzZW5kKFwiRU5EXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgICAgY29uc3Qga2V5ID0gZ2V0RXZlbnRLZXkoZXZlbnQsIHN0YXRlLmNvbnRleHQpO1xuICAgICAgICAgIGNvbnN0IGV4ZWMgPSBrZXlNYXBba2V5XTtcbiAgICAgICAgICBpZiAoZXhlYykge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGV4ZWMoZXZlbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25DbGljaygpIHtcbiAgICAgICAgICBpZiAoIWludGVyYWN0aXZlKSByZXR1cm47XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiQ0xJQ0tcIiwgdmFsdWU6IGluZGV4IH0pO1xuICAgICAgICB9LFxuICAgICAgICBvbkZvY3VzKCkge1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBzZW5kKFwiRk9DVVNcIik7XG4gICAgICAgIH0sXG4gICAgICAgIG9uQmx1cigpIHtcbiAgICAgICAgICBpZiAoIWludGVyYWN0aXZlKSByZXR1cm47XG4gICAgICAgICAgc2VuZChcIkJMVVJcIik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIG1hY2hpbmUodXNlckNvbnRleHQpIHtcbiAgY29uc3QgY3R4ID0gY29tcGFjdCh1c2VyQ29udGV4dCk7XG4gIHJldHVybiBjcmVhdGVNYWNoaW5lKFxuICAgIHtcbiAgICAgIGlkOiBcInJhdGluZ1wiLFxuICAgICAgaW5pdGlhbDogXCJpZGxlXCIsXG4gICAgICBjb250ZXh0OiB7XG4gICAgICAgIG5hbWU6IFwicmF0aW5nXCIsXG4gICAgICAgIGNvdW50OiA1LFxuICAgICAgICBkaXI6IFwibHRyXCIsXG4gICAgICAgIHZhbHVlOiAtMSxcbiAgICAgICAgcmVhZE9ubHk6IGZhbHNlLFxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIC4uLmN0eCxcbiAgICAgICAgaG92ZXJlZFZhbHVlOiAtMSxcbiAgICAgICAgZmllbGRzZXREaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIHRyYW5zbGF0aW9uczoge1xuICAgICAgICAgIHJhdGluZ1ZhbHVlVGV4dDogKGluZGV4KSA9PiBgJHtpbmRleH0gc3RhcnNgLFxuICAgICAgICAgIC4uLmN0eC50cmFuc2xhdGlvbnNcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNyZWF0ZWQ6IFtcInJvdW5kVmFsdWVJZk5lZWRlZFwiXSxcbiAgICAgIHdhdGNoOiB7XG4gICAgICAgIGFsbG93SGFsZjogW1wicm91bmRWYWx1ZUlmTmVlZGVkXCJdXG4gICAgICB9LFxuICAgICAgY29tcHV0ZWQ6IHtcbiAgICAgICAgaXNEaXNhYmxlZDogKGN0eDIpID0+ICEhY3R4Mi5kaXNhYmxlZCB8fCBjdHgyLmZpZWxkc2V0RGlzYWJsZWQsXG4gICAgICAgIGlzSW50ZXJhY3RpdmU6IChjdHgyKSA9PiAhKGN0eDIuaXNEaXNhYmxlZCB8fCBjdHgyLnJlYWRPbmx5KSxcbiAgICAgICAgaXNIb3ZlcmluZzogKGN0eDIpID0+IGN0eDIuaG92ZXJlZFZhbHVlID4gLTFcbiAgICAgIH0sXG4gICAgICBhY3Rpdml0aWVzOiBbXCJ0cmFja0Zvcm1Db250cm9sU3RhdGVcIl0sXG4gICAgICBvbjoge1xuICAgICAgICBTRVRfVkFMVUU6IHtcbiAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRWYWx1ZVwiXVxuICAgICAgICB9LFxuICAgICAgICBDTEVBUl9WQUxVRToge1xuICAgICAgICAgIGFjdGlvbnM6IFtcImNsZWFyVmFsdWVcIl1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHN0YXRlczoge1xuICAgICAgICBpZGxlOiB7XG4gICAgICAgICAgZW50cnk6IFwiY2xlYXJIb3ZlcmVkVmFsdWVcIixcbiAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgR1JPVVBfUE9JTlRFUl9PVkVSOiBcImhvdmVyXCIsXG4gICAgICAgICAgICBGT0NVUzogXCJmb2N1c1wiLFxuICAgICAgICAgICAgQ0xJQ0s6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogW1wic2V0VmFsdWVcIiwgXCJmb2N1c0FjdGl2ZVJhZGlvXCJdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBmb2N1czoge1xuICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICBQT0lOVEVSX09WRVI6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogXCJzZXRIb3ZlcmVkVmFsdWVcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEdST1VQX1BPSU5URVJfTEVBVkU6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogXCJjbGVhckhvdmVyZWRWYWx1ZVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgQkxVUjogXCJpZGxlXCIsXG4gICAgICAgICAgICBTUEFDRToge1xuICAgICAgICAgICAgICBndWFyZDogXCJpc1ZhbHVlRW1wdHlcIixcbiAgICAgICAgICAgICAgYWN0aW9uczogW1wic2V0VmFsdWVcIl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBDTElDSzoge1xuICAgICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRWYWx1ZVwiLCBcImZvY3VzQWN0aXZlUmFkaW9cIl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBBUlJPV19MRUZUOiB7XG4gICAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldFByZXZWYWx1ZVwiLCBcImZvY3VzQWN0aXZlUmFkaW9cIl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBBUlJPV19SSUdIVDoge1xuICAgICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXROZXh0VmFsdWVcIiwgXCJmb2N1c0FjdGl2ZVJhZGlvXCJdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgSE9NRToge1xuICAgICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRWYWx1ZVRvTWluXCIsIFwiZm9jdXNBY3RpdmVSYWRpb1wiXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEVORDoge1xuICAgICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRWYWx1ZVRvTWF4XCIsIFwiZm9jdXNBY3RpdmVSYWRpb1wiXVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgaG92ZXI6IHtcbiAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgUE9JTlRFUl9PVkVSOiB7XG4gICAgICAgICAgICAgIGFjdGlvbnM6IFwic2V0SG92ZXJlZFZhbHVlXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBHUk9VUF9QT0lOVEVSX0xFQVZFOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBndWFyZDogXCJpc1JhZGlvRm9jdXNlZFwiLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJmb2N1c1wiLFxuICAgICAgICAgICAgICAgIGFjdGlvbnM6IFwiY2xlYXJIb3ZlcmVkVmFsdWVcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBcImlkbGVcIixcbiAgICAgICAgICAgICAgICBhY3Rpb25zOiBcImNsZWFySG92ZXJlZFZhbHVlXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIENMSUNLOiB7XG4gICAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldFZhbHVlXCIsIFwiZm9jdXNBY3RpdmVSYWRpb1wiXVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgZ3VhcmRzOiB7XG4gICAgICAgIGlzSW50ZXJhY3RpdmU6IChjdHgyKSA9PiAhKGN0eDIuZGlzYWJsZWQgfHwgY3R4Mi5yZWFkT25seSksXG4gICAgICAgIGlzSG92ZXJlZFZhbHVlRW1wdHk6IChjdHgyKSA9PiBjdHgyLmhvdmVyZWRWYWx1ZSA9PT0gLTEsXG4gICAgICAgIGlzVmFsdWVFbXB0eTogKGN0eDIpID0+IGN0eDIudmFsdWUgPD0gMCxcbiAgICAgICAgaXNSYWRpb0ZvY3VzZWQ6IChjdHgyKSA9PiAhIWRvbS5nZXRDb250cm9sRWwoY3R4Mik/LmNvbnRhaW5zKGRvbS5nZXRBY3RpdmVFbGVtZW50KGN0eDIpKVxuICAgICAgfSxcbiAgICAgIGFjdGl2aXRpZXM6IHtcbiAgICAgICAgdHJhY2tGb3JtQ29udHJvbFN0YXRlKGN0eDIsIF9ldnQsIHsgaW5pdGlhbENvbnRleHQgfSkge1xuICAgICAgICAgIHJldHVybiB0cmFja0Zvcm1Db250cm9sKGRvbS5nZXRIaWRkZW5JbnB1dEVsKGN0eDIpLCB7XG4gICAgICAgICAgICBvbkZpZWxkc2V0RGlzYWJsZWRDaGFuZ2UoZGlzYWJsZWQpIHtcbiAgICAgICAgICAgICAgY3R4Mi5maWVsZHNldERpc2FibGVkID0gZGlzYWJsZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25Gb3JtUmVzZXQoKSB7XG4gICAgICAgICAgICAgIHNldC52YWx1ZShjdHgyLCBpbml0aWFsQ29udGV4dC52YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBhY3Rpb25zOiB7XG4gICAgICAgIGNsZWFySG92ZXJlZFZhbHVlKGN0eDIpIHtcbiAgICAgICAgICBzZXQuaG92ZXJlZFZhbHVlKGN0eDIsIC0xKTtcbiAgICAgICAgfSxcbiAgICAgICAgZm9jdXNBY3RpdmVSYWRpbyhjdHgyKSB7XG4gICAgICAgICAgcmFmKCgpID0+IGRvbS5nZXRSYWRpb0VsKGN0eDIpPy5mb2N1cygpKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0UHJldlZhbHVlKGN0eDIpIHtcbiAgICAgICAgICBjb25zdCBmYWN0b3IgPSBjdHgyLmFsbG93SGFsZiA/IDAuNSA6IDE7XG4gICAgICAgICAgc2V0LnZhbHVlKGN0eDIsIE1hdGgubWF4KDAsIGN0eDIudmFsdWUgLSBmYWN0b3IpKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0TmV4dFZhbHVlKGN0eDIpIHtcbiAgICAgICAgICBjb25zdCBmYWN0b3IgPSBjdHgyLmFsbG93SGFsZiA/IDAuNSA6IDE7XG4gICAgICAgICAgY29uc3QgdmFsdWUgPSBjdHgyLnZhbHVlID09PSAtMSA/IDAgOiBjdHgyLnZhbHVlO1xuICAgICAgICAgIHNldC52YWx1ZShjdHgyLCBNYXRoLm1pbihjdHgyLmNvdW50LCB2YWx1ZSArIGZhY3RvcikpO1xuICAgICAgICB9LFxuICAgICAgICBzZXRWYWx1ZVRvTWluKGN0eDIpIHtcbiAgICAgICAgICBzZXQudmFsdWUoY3R4MiwgMSk7XG4gICAgICAgIH0sXG4gICAgICAgIHNldFZhbHVlVG9NYXgoY3R4Mikge1xuICAgICAgICAgIHNldC52YWx1ZShjdHgyLCBjdHgyLmNvdW50KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0VmFsdWUoY3R4MiwgZXZ0KSB7XG4gICAgICAgICAgY29uc3QgdmFsdWUgPSBjdHgyLmhvdmVyZWRWYWx1ZSA9PT0gLTEgPyBldnQudmFsdWUgOiBjdHgyLmhvdmVyZWRWYWx1ZTtcbiAgICAgICAgICBzZXQudmFsdWUoY3R4MiwgdmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBjbGVhclZhbHVlKGN0eDIpIHtcbiAgICAgICAgICBzZXQudmFsdWUoY3R4MiwgLTEpO1xuICAgICAgICB9LFxuICAgICAgICBzZXRIb3ZlcmVkVmFsdWUoY3R4MiwgZXZ0KSB7XG4gICAgICAgICAgY29uc3QgaGFsZiA9IGN0eDIuYWxsb3dIYWxmICYmIGV2dC5pc01pZHdheTtcbiAgICAgICAgICBjb25zdCBmYWN0b3IgPSBoYWxmID8gMC41IDogMDtcbiAgICAgICAgICBzZXQuaG92ZXJlZFZhbHVlKGN0eDIsIGV2dC5pbmRleCAtIGZhY3Rvcik7XG4gICAgICAgIH0sXG4gICAgICAgIHJvdW5kVmFsdWVJZk5lZWRlZChjdHgyKSB7XG4gICAgICAgICAgaWYgKGN0eDIuYWxsb3dIYWxmKSByZXR1cm47XG4gICAgICAgICAgY3R4Mi52YWx1ZSA9IE1hdGgucm91bmQoY3R4Mi52YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICk7XG59XG52YXIgaW52b2tlID0ge1xuICBjaGFuZ2U6IChjdHgpID0+IHtcbiAgICBjdHgub25WYWx1ZUNoYW5nZT8uKHsgdmFsdWU6IGN0eC52YWx1ZSB9KTtcbiAgICBkb20uZGlzcGF0Y2hDaGFuZ2VFdmVudChjdHgpO1xuICB9LFxuICBob3ZlckNoYW5nZTogKGN0eCkgPT4ge1xuICAgIGN0eC5vbkhvdmVyQ2hhbmdlPy4oeyBob3ZlcmVkVmFsdWU6IGN0eC5ob3ZlcmVkVmFsdWUgfSk7XG4gIH1cbn07XG52YXIgc2V0ID0ge1xuICB2YWx1ZTogKGN0eCwgdmFsdWUpID0+IHtcbiAgICBpZiAoaXNFcXVhbChjdHgudmFsdWUsIHZhbHVlKSkgcmV0dXJuO1xuICAgIGN0eC52YWx1ZSA9IHZhbHVlO1xuICAgIGludm9rZS5jaGFuZ2UoY3R4KTtcbiAgfSxcbiAgaG92ZXJlZFZhbHVlOiAoY3R4LCB2YWx1ZSkgPT4ge1xuICAgIGlmIChpc0VxdWFsKGN0eC5ob3ZlcmVkVmFsdWUsIHZhbHVlKSkgcmV0dXJuO1xuICAgIGN0eC5ob3ZlcmVkVmFsdWUgPSB2YWx1ZTtcbiAgICBpbnZva2UuaG92ZXJDaGFuZ2UoY3R4KTtcbiAgfVxufTtcbnZhciBwcm9wcyA9IGNyZWF0ZVByb3BzKCkoW1xuICBcImFsbG93SGFsZlwiLFxuICBcImF1dG9Gb2N1c1wiLFxuICBcImNvdW50XCIsXG4gIFwiZGlyXCIsXG4gIFwiZGlzYWJsZWRcIixcbiAgXCJmb3JtXCIsXG4gIFwiZ2V0Um9vdE5vZGVcIixcbiAgXCJpZFwiLFxuICBcImlkc1wiLFxuICBcIm5hbWVcIixcbiAgXCJvbkhvdmVyQ2hhbmdlXCIsXG4gIFwib25WYWx1ZUNoYW5nZVwiLFxuICBcInJlcXVpcmVkXCIsXG4gIFwicmVhZE9ubHlcIixcbiAgXCJ0cmFuc2xhdGlvbnNcIixcbiAgXCJ2YWx1ZVwiXG5dKTtcbnZhciBzcGxpdFByb3BzID0gY3JlYXRlU3BsaXRQcm9wcyhwcm9wcyk7XG52YXIgaXRlbVByb3BzID0gY3JlYXRlUHJvcHMoKShbXCJpbmRleFwiXSk7XG52YXIgc3BsaXRJdGVtUHJvcHMgPSBjcmVhdGVTcGxpdFByb3BzKGl0ZW1Qcm9wcyk7XG5cbmV4cG9ydCB7IGFuYXRvbXksIGNvbm5lY3QsIGl0ZW1Qcm9wcywgbWFjaGluZSwgcHJvcHMsIHNwbGl0SXRlbVByb3BzLCBzcGxpdFByb3BzIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/rating-group/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/rect-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AffineTransform: () => (/* binding */ AffineTransform),\n/* harmony export */   addPoints: () => (/* binding */ addPoints),\n/* harmony export */   alignRect: () => (/* binding */ alignRect),\n/* harmony export */   clampPoint: () => (/* binding */ clampPoint),\n/* harmony export */   clampSize: () => (/* binding */ clampSize),\n/* harmony export */   closest: () => (/* binding */ closest),\n/* harmony export */   closestSideToPoint: () => (/* binding */ closestSideToPoint),\n/* harmony export */   closestSideToRect: () => (/* binding */ closestSideToRect),\n/* harmony export */   collisions: () => (/* binding */ collisions),\n/* harmony export */   constrainRect: () => (/* binding */ constrainRect),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   containsPoint: () => (/* binding */ containsPoint),\n/* harmony export */   containsRect: () => (/* binding */ containsRect),\n/* harmony export */   createPoint: () => (/* binding */ createPoint),\n/* harmony export */   createRect: () => (/* binding */ createRect),\n/* harmony export */   debugPolygon: () => (/* binding */ debugPolygon),\n/* harmony export */   distance: () => (/* binding */ distance),\n/* harmony export */   distanceBtwEdges: () => (/* binding */ distanceBtwEdges),\n/* harmony export */   distanceFromPoint: () => (/* binding */ distanceFromPoint),\n/* harmony export */   distanceFromRect: () => (/* binding */ distanceFromRect),\n/* harmony export */   expand: () => (/* binding */ expand),\n/* harmony export */   fromRange: () => (/* binding */ fromRange),\n/* harmony export */   getElementPolygon: () => (/* binding */ getElementPolygon),\n/* harmony export */   getElementRect: () => (/* binding */ getElementRect),\n/* harmony export */   getPointAngle: () => (/* binding */ getPointAngle),\n/* harmony export */   getRectCenters: () => (/* binding */ getRectCenters),\n/* harmony export */   getRectCorners: () => (/* binding */ getRectCorners),\n/* harmony export */   getRectEdges: () => (/* binding */ getRectEdges),\n/* harmony export */   getRectFromPoints: () => (/* binding */ getRectFromPoints),\n/* harmony export */   getRotationRect: () => (/* binding */ getRotationRect),\n/* harmony export */   getViewportRect: () => (/* binding */ getViewportRect),\n/* harmony export */   getWindowRect: () => (/* binding */ getWindowRect),\n/* harmony export */   inset: () => (/* binding */ inset),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   intersects: () => (/* binding */ intersects),\n/* harmony export */   isPoint: () => (/* binding */ isPoint),\n/* harmony export */   isPointEqual: () => (/* binding */ isPointEqual),\n/* harmony export */   isPointInPolygon: () => (/* binding */ isPointInPolygon),\n/* harmony export */   isRect: () => (/* binding */ isRect),\n/* harmony export */   isRectEqual: () => (/* binding */ isRectEqual),\n/* harmony export */   isSizeEqual: () => (/* binding */ isSizeEqual),\n/* harmony export */   isSymmetric: () => (/* binding */ isSymmetric),\n/* harmony export */   resizeRect: () => (/* binding */ resizeRect),\n/* harmony export */   rotate: () => (/* binding */ rotate),\n/* harmony export */   shift: () => (/* binding */ shift),\n/* harmony export */   shrink: () => (/* binding */ shrink),\n/* harmony export */   subtractPoints: () => (/* binding */ subtractPoints),\n/* harmony export */   toRad: () => (/* binding */ toRad),\n/* harmony export */   union: () => (/* binding */ union)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/affine-transform.ts\nvar AffineTransform = class _AffineTransform {\n  constructor([m00, m01, m02, m10, m11, m12] = [0, 0, 0, 0, 0, 0]) {\n    __publicField(this, \"m00\");\n    __publicField(this, \"m01\");\n    __publicField(this, \"m02\");\n    __publicField(this, \"m10\");\n    __publicField(this, \"m11\");\n    __publicField(this, \"m12\");\n    __publicField(this, \"rotate\", (...args) => {\n      return this.prepend(_AffineTransform.rotate(...args));\n    });\n    __publicField(this, \"scale\", (...args) => {\n      return this.prepend(_AffineTransform.scale(...args));\n    });\n    __publicField(this, \"translate\", (...args) => {\n      return this.prepend(_AffineTransform.translate(...args));\n    });\n    this.m00 = m00;\n    this.m01 = m01;\n    this.m02 = m02;\n    this.m10 = m10;\n    this.m11 = m11;\n    this.m12 = m12;\n  }\n  applyTo(point) {\n    const { x, y } = point;\n    const { m00, m01, m02, m10, m11, m12 } = this;\n    return {\n      x: m00 * x + m01 * y + m02,\n      y: m10 * x + m11 * y + m12\n    };\n  }\n  prepend(other) {\n    return new _AffineTransform([\n      this.m00 * other.m00 + this.m01 * other.m10,\n      // m00\n      this.m00 * other.m01 + this.m01 * other.m11,\n      // m01\n      this.m00 * other.m02 + this.m01 * other.m12 + this.m02,\n      // m02\n      this.m10 * other.m00 + this.m11 * other.m10,\n      // m10\n      this.m10 * other.m01 + this.m11 * other.m11,\n      // m11\n      this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n      // m12\n    ]);\n  }\n  append(other) {\n    return new _AffineTransform([\n      other.m00 * this.m00 + other.m01 * this.m10,\n      // m00\n      other.m00 * this.m01 + other.m01 * this.m11,\n      // m01\n      other.m00 * this.m02 + other.m01 * this.m12 + other.m02,\n      // m02\n      other.m10 * this.m00 + other.m11 * this.m10,\n      // m10\n      other.m10 * this.m01 + other.m11 * this.m11,\n      // m11\n      other.m10 * this.m02 + other.m11 * this.m12 + other.m12\n      // m12\n    ]);\n  }\n  get determinant() {\n    return this.m00 * this.m11 - this.m01 * this.m10;\n  }\n  get isInvertible() {\n    const det = this.determinant;\n    return isFinite(det) && isFinite(this.m02) && isFinite(this.m12) && det !== 0;\n  }\n  invert() {\n    const det = this.determinant;\n    return new _AffineTransform([\n      this.m11 / det,\n      // m00\n      -this.m01 / det,\n      // m01\n      (this.m01 * this.m12 - this.m11 * this.m02) / det,\n      // m02\n      -this.m10 / det,\n      // m10\n      this.m00 / det,\n      // m11\n      (this.m10 * this.m02 - this.m00 * this.m12) / det\n      // m12\n    ]);\n  }\n  get array() {\n    return [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, 0, 0, 1];\n  }\n  get float32Array() {\n    return new Float32Array(this.array);\n  }\n  // Static\n  static get identity() {\n    return new _AffineTransform([1, 0, 0, 0, 1, 0]);\n  }\n  static rotate(theta, origin) {\n    const rotation = new _AffineTransform([Math.cos(theta), -Math.sin(theta), 0, Math.sin(theta), Math.cos(theta), 0]);\n    if (origin && (origin.x !== 0 || origin.y !== 0)) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        rotation,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return rotation;\n  }\n  static scale(sx, sy = sx, origin = { x: 0, y: 0 }) {\n    const scale = new _AffineTransform([sx, 0, 0, 0, sy, 0]);\n    if (origin.x !== 0 || origin.y !== 0) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        scale,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return scale;\n  }\n  static translate(tx, ty) {\n    return new _AffineTransform([1, 0, tx, 0, 1, ty]);\n  }\n  static multiply(...[first, ...rest]) {\n    if (!first) return _AffineTransform.identity;\n    return rest.reduce((result, item) => result.prepend(item), first);\n  }\n  get a() {\n    return this.m00;\n  }\n  get b() {\n    return this.m10;\n  }\n  get c() {\n    return this.m01;\n  }\n  get d() {\n    return this.m11;\n  }\n  get tx() {\n    return this.m02;\n  }\n  get ty() {\n    return this.m12;\n  }\n  get scaleComponents() {\n    return { x: this.a, y: this.d };\n  }\n  get translationComponents() {\n    return { x: this.tx, y: this.ty };\n  }\n  get skewComponents() {\n    return { x: this.c, y: this.b };\n  }\n  toString() {\n    return `matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.tx}, ${this.ty})`;\n  }\n};\n\n// src/align.ts\nfunction hAlign(a, ref, h) {\n  let x = ref.minX;\n  if (h === \"left-inside\") x = ref.minX;\n  if (h === \"left-outside\") x = ref.minX - ref.width;\n  if (h === \"right-inside\") x = ref.maxX - ref.width;\n  if (h === \"right-outside\") x = ref.maxX;\n  if (h === \"center\") x = ref.midX - ref.width / 2;\n  return { ...a, x };\n}\nfunction vAlign(a, ref, v) {\n  let y = ref.minY;\n  if (v === \"top-inside\") y = ref.minY;\n  if (v === \"top-outside\") y = ref.minY - a.height;\n  if (v === \"bottom-inside\") y = ref.maxY - a.height;\n  if (v === \"bottom-outside\") y = ref.maxY;\n  if (v === \"center\") y = ref.midY - a.height / 2;\n  return { ...a, y };\n}\nfunction alignRect(a, ref, options) {\n  const { h, v } = options;\n  return vAlign(hAlign(a, ref, h), ref, v);\n}\n\n// src/angle.ts\nfunction getPointAngle(rect, point, reference = rect.center) {\n  const x = point.x - reference.x;\n  const y = point.y - reference.y;\n  const deg = Math.atan2(x, y) * (180 / Math.PI) + 180;\n  return 360 - deg;\n}\n\n// src/clamp.ts\nvar clamp = (value, min3, max2) => Math.min(Math.max(value, min3), max2);\nvar clampPoint = (position, size, boundaryRect) => {\n  const x = clamp(position.x, boundaryRect.x, boundaryRect.x + boundaryRect.width - size.width);\n  const y = clamp(position.y, boundaryRect.y, boundaryRect.y + boundaryRect.height - size.height);\n  return { x, y };\n};\nvar defaultMinSize = {\n  width: 0,\n  height: 0\n};\nvar defaultMaxSize = {\n  width: Infinity,\n  height: Infinity\n};\nvar clampSize = (size, minSize = defaultMinSize, maxSize = defaultMaxSize) => {\n  return {\n    width: Math.min(Math.max(size.width, minSize.width), maxSize.width),\n    height: Math.min(Math.max(size.height, minSize.height), maxSize.height)\n  };\n};\n\n// src/rect.ts\nvar createPoint = (x, y) => ({ x, y });\nvar subtractPoints = (a, b) => createPoint(a.x - b.x, a.y - b.y);\nvar addPoints = (a, b) => createPoint(a.x + b.x, a.y + b.y);\nfunction isPoint(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\");\n}\nfunction createRect(r) {\n  const { x, y, width, height } = r;\n  const midX = x + width / 2;\n  const midY = y + height / 2;\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height,\n    midX,\n    midY,\n    center: createPoint(midX, midY)\n  };\n}\nfunction isRect(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\") && Reflect.has(v, \"width\") && Reflect.has(v, \"height\");\n}\nfunction getRectCenters(v) {\n  const top = createPoint(v.midX, v.minY);\n  const right = createPoint(v.maxX, v.midY);\n  const bottom = createPoint(v.midX, v.maxY);\n  const left = createPoint(v.minX, v.midY);\n  return { top, right, bottom, left };\n}\nfunction getRectCorners(v) {\n  const top = createPoint(v.minX, v.minY);\n  const right = createPoint(v.maxX, v.minY);\n  const bottom = createPoint(v.maxX, v.maxY);\n  const left = createPoint(v.minX, v.maxY);\n  return { top, right, bottom, left };\n}\nfunction getRectEdges(v) {\n  const c = getRectCorners(v);\n  const top = [c.top, c.right];\n  const right = [c.right, c.bottom];\n  const bottom = [c.left, c.bottom];\n  const left = [c.top, c.left];\n  return { top, right, bottom, left };\n}\n\n// src/intersection.ts\nfunction intersects(a, b) {\n  return a.x < b.maxX && a.y < b.maxY && a.maxX > b.x && a.maxY > b.y;\n}\nfunction intersection(a, b) {\n  const x = Math.max(a.x, b.x);\n  const y = Math.max(a.y, b.y);\n  const x2 = Math.min(a.x + a.width, b.x + b.width);\n  const y2 = Math.min(a.y + a.height, b.y + b.height);\n  return createRect({ x, y, width: x2 - x, height: y2 - y });\n}\nfunction collisions(a, b) {\n  return {\n    top: a.minY <= b.minY,\n    right: a.maxX >= b.maxX,\n    bottom: a.maxY >= b.maxY,\n    left: a.minX <= b.minX\n  };\n}\n\n// src/distance.ts\nfunction distance(a, b = { x: 0, y: 0 }) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\nfunction distanceFromPoint(r, p) {\n  let x = 0;\n  let y = 0;\n  if (p.x < r.x) x = r.x - p.x;\n  else if (p.x > r.maxX) x = p.x - r.maxX;\n  if (p.y < r.y) y = r.y - p.y;\n  else if (p.y > r.maxY) y = p.y - r.maxY;\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceFromRect(a, b) {\n  if (intersects(a, b)) return { x: 0, y: 0, value: 0 };\n  const left = a.x < b.x ? a : b;\n  const right = b.x < a.x ? a : b;\n  const upper = a.y < b.y ? a : b;\n  const lower = b.y < a.y ? a : b;\n  let x = left.x === right.x ? 0 : right.x - left.maxX;\n  x = Math.max(0, x);\n  let y = upper.y === lower.y ? 0 : lower.y - upper.maxY;\n  y = Math.max(0, y);\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceBtwEdges(a, b) {\n  return {\n    left: b.x - a.x,\n    top: b.y - a.y,\n    right: a.maxX - b.maxX,\n    bottom: a.maxY - b.maxY\n  };\n}\n\n// src/closest.ts\nfunction closest(...pts) {\n  return (a) => {\n    const ds = pts.map((b) => distance(b, a));\n    const c = Math.min.apply(Math, ds);\n    return pts[ds.indexOf(c)];\n  };\n}\nfunction closestSideToRect(ref, r) {\n  if (r.maxX <= ref.minX) return \"left\";\n  if (r.minX >= ref.maxX) return \"right\";\n  if (r.maxY <= ref.minY) return \"top\";\n  if (r.minY >= ref.maxY) return \"bottom\";\n  return \"left\";\n}\nfunction closestSideToPoint(ref, p) {\n  const { x, y } = p;\n  const dl = x - ref.minX;\n  const dr = ref.maxX - x;\n  const dt = y - ref.minY;\n  const db = ref.maxY - y;\n  let closest2 = dl;\n  let side = \"left\";\n  if (dr < closest2) {\n    closest2 = dr;\n    side = \"right\";\n  }\n  if (dt < closest2) {\n    closest2 = dt;\n    side = \"top\";\n  }\n  if (db < closest2) {\n    side = \"bottom\";\n  }\n  return side;\n}\n\n// src/constrain.ts\nvar constrainRect = (rect, boundary) => {\n  const left = Math.max(boundary.x, Math.min(rect.x, boundary.x + boundary.width - rect.width));\n  const top = Math.max(boundary.y, Math.min(rect.y, boundary.y + boundary.height - rect.height));\n  return {\n    x: left,\n    y: top,\n    width: Math.min(rect.width, boundary.width),\n    height: Math.min(rect.height, boundary.height)\n  };\n};\n\n// src/contains.ts\nfunction containsPoint(r, p) {\n  return r.minX <= p.x && p.x <= r.maxX && r.minY <= p.y && p.y <= r.maxY;\n}\nfunction containsRect(a, b) {\n  return Object.values(getRectCorners(b)).every((c) => containsPoint(a, c));\n}\nfunction contains(r, v) {\n  return isRect(v) ? containsRect(r, v) : containsPoint(r, v);\n}\n\n// src/equality.ts\nvar isSizeEqual = (a, b) => {\n  return a.width === b.width && a.height === b.height;\n};\nvar isPointEqual = (a, b) => {\n  return a.x === b.x && a.y === b.y;\n};\nvar isRectEqual = (a, b) => {\n  return isPointEqual(a, b) && isSizeEqual(a, b);\n};\n\n// src/from-element.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getCacheComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    const win = el.ownerDocument.defaultView || window;\n    styleCache.set(el, win.getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\nfunction getElementRect(el, opts = {}) {\n  return createRect(getClientRect(el, opts));\n}\nfunction getClientRect(el, opts = {}) {\n  const { excludeScrollbar = false, excludeBorders = false } = opts;\n  const { x, y, width, height } = el.getBoundingClientRect();\n  const r = { x, y, width, height };\n  const style = getCacheComputedStyle(el);\n  const { borderLeftWidth, borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n  const borderXWidth = sum(borderLeftWidth, borderRightWidth);\n  const borderYWidth = sum(borderTopWidth, borderBottomWidth);\n  if (excludeBorders) {\n    r.width -= borderXWidth;\n    r.height -= borderYWidth;\n    r.x += px(borderLeftWidth);\n    r.y += px(borderTopWidth);\n  }\n  if (excludeScrollbar) {\n    const scrollbarWidth = el.offsetWidth - el.clientWidth - borderXWidth;\n    const scrollbarHeight = el.offsetHeight - el.clientHeight - borderYWidth;\n    r.width -= scrollbarWidth;\n    r.height -= scrollbarHeight;\n  }\n  return r;\n}\nvar px = (v) => parseFloat(v.replace(\"px\", \"\"));\nvar sum = (...vals) => vals.reduce((sum2, v) => sum2 + (v ? px(v) : 0), 0);\n\n// src/from-points.ts\nfunction getRectFromPoints(...pts) {\n  const xs = pts.map((p) => p.x);\n  const ys = pts.map((p) => p.y);\n  const x = Math.min(...xs);\n  const y = Math.min(...ys);\n  const width = Math.max(...xs) - x;\n  const height = Math.max(...ys) - y;\n  return createRect({ x, y, width, height });\n}\n\n// src/union.ts\nvar { min, max } = Math;\nfunction union(...rs) {\n  const pMin = {\n    x: min(...rs.map((r) => r.minX)),\n    y: min(...rs.map((r) => r.minY))\n  };\n  const pMax = {\n    x: max(...rs.map((r) => r.maxX)),\n    y: max(...rs.map((r) => r.maxY))\n  };\n  return getRectFromPoints(pMin, pMax);\n}\n\n// src/from-range.ts\nfunction fromRange(range) {\n  let rs = [];\n  const rects = Array.from(range.getClientRects());\n  if (rects.length) {\n    rs = rs.concat(rects.map(createRect));\n    return union.apply(void 0, rs);\n  }\n  let start = range.startContainer;\n  if (start.nodeType === Node.TEXT_NODE) {\n    start = start.parentNode;\n  }\n  if (start instanceof HTMLElement) {\n    const r = getElementRect(start);\n    rs.push({ ...r, x: r.maxX, width: 0 });\n  }\n  return union.apply(void 0, rs);\n}\n\n// src/from-rotation.ts\nfunction toRad(d) {\n  return d % 360 * Math.PI / 180;\n}\nfunction rotate(a, d, c) {\n  const r = toRad(d);\n  const sin = Math.sin(r);\n  const cos = Math.cos(r);\n  const x = a.x - c.x;\n  const y = a.y - c.y;\n  return {\n    x: c.x + x * cos - y * sin,\n    y: c.y + x * sin + y * cos\n  };\n}\nfunction getRotationRect(r, deg) {\n  const rr = Object.values(getRectCorners(r)).map((p) => rotate(p, deg, r.center));\n  const xs = rr.map((p) => p.x);\n  const ys = rr.map((p) => p.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return createRect({\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  });\n}\n\n// src/from-window.ts\nfunction getWindowRect(win, opts = {}) {\n  return createRect(getViewportRect(win, opts));\n}\nfunction getViewportRect(win, opts) {\n  const { excludeScrollbar = false } = opts;\n  const { innerWidth, innerHeight, document: doc, visualViewport } = win;\n  const width = visualViewport?.width || innerWidth;\n  const height = visualViewport?.height || innerHeight;\n  const rect = { x: 0, y: 0, width, height };\n  if (excludeScrollbar) {\n    const scrollbarWidth = innerWidth - doc.documentElement.clientWidth;\n    const scrollbarHeight = innerHeight - doc.documentElement.clientHeight;\n    rect.width -= scrollbarWidth;\n    rect.height -= scrollbarHeight;\n  }\n  return rect;\n}\n\n// src/operations.ts\nvar isSymmetric = (v) => \"dx\" in v || \"dy\" in v;\nfunction inset(r, i) {\n  const v = isSymmetric(i) ? { left: i.dx, right: i.dx, top: i.dy, bottom: i.dy } : i;\n  const { top = 0, right = 0, bottom = 0, left = 0 } = v;\n  return createRect({\n    x: r.x + left,\n    y: r.y + top,\n    width: r.width - left - right,\n    height: r.height - top - bottom\n  });\n}\nfunction expand(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shrink(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shift(r, o) {\n  const { x = 0, y = 0 } = o;\n  return createRect({\n    x: r.x + x,\n    y: r.y + y,\n    width: r.width,\n    height: r.height\n  });\n}\n\n// src/polygon.ts\nfunction getElementPolygon(rectValue, placement) {\n  const rect = createRect(rectValue);\n  const { top, right, left, bottom } = getRectCorners(rect);\n  const [base] = placement.split(\"-\");\n  return {\n    top: [left, top, right, bottom],\n    right: [top, right, bottom, left],\n    bottom: [top, left, bottom, right],\n    left: [right, top, left, bottom]\n  }[base];\n}\nfunction isPointInPolygon(polygon, point) {\n  const { x, y } = point;\n  let c = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) {\n      c = !c;\n    }\n  }\n  return c;\n}\nfunction createPolygonElement() {\n  const id = \"debug-polygon\";\n  const existingPolygon = document.getElementById(id);\n  if (existingPolygon) {\n    return existingPolygon;\n  }\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  Object.assign(svg.style, {\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.15\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    fill: \"red\"\n  });\n  const polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n  polygon.setAttribute(\"id\", id);\n  polygon.setAttribute(\"points\", \"0,0 0,0\");\n  svg.appendChild(polygon);\n  document.body.appendChild(svg);\n  return polygon;\n}\nfunction debugPolygon(polygon) {\n  const el = createPolygonElement();\n  const points = polygon.map((point) => `${point.x},${point.y}`).join(\" \");\n  el.setAttribute(\"points\", points);\n  return () => {\n    el.remove();\n  };\n}\n\n// src/compass.ts\nvar compassDirectionMap = {\n  n: { x: 0.5, y: 0 },\n  ne: { x: 1, y: 0 },\n  e: { x: 1, y: 0.5 },\n  se: { x: 1, y: 1 },\n  s: { x: 0.5, y: 1 },\n  sw: { x: 0, y: 1 },\n  w: { x: 0, y: 0.5 },\n  nw: { x: 0, y: 0 }\n};\nvar oppositeDirectionMap = {\n  n: \"s\",\n  ne: \"sw\",\n  e: \"w\",\n  se: \"nw\",\n  s: \"n\",\n  sw: \"ne\",\n  w: \"e\",\n  nw: \"se\"\n};\n\n// src/resize.ts\nvar { sign, abs, min: min2 } = Math;\nfunction getRectExtentPoint(rect, direction) {\n  const { minX, minY, maxX, maxY, midX, midY } = rect;\n  const x = direction.includes(\"w\") ? minX : direction.includes(\"e\") ? maxX : midX;\n  const y = direction.includes(\"n\") ? minY : direction.includes(\"s\") ? maxY : midY;\n  return { x, y };\n}\nfunction getOppositeDirection(direction) {\n  return oppositeDirectionMap[direction];\n}\nfunction resizeRect(rect, offset, direction, opts) {\n  const { scalingOriginMode, lockAspectRatio } = opts;\n  const extent = getRectExtentPoint(rect, direction);\n  const oppositeDirection = getOppositeDirection(direction);\n  const oppositeExtent = getRectExtentPoint(rect, oppositeDirection);\n  if (scalingOriginMode === \"center\") {\n    offset = { x: offset.x * 2, y: offset.y * 2 };\n  }\n  const newExtent = {\n    x: extent.x + offset.x,\n    y: extent.y + offset.y\n  };\n  const multiplier = {\n    x: compassDirectionMap[direction].x * 2 - 1,\n    y: compassDirectionMap[direction].y * 2 - 1\n  };\n  const newSize = {\n    width: newExtent.x - oppositeExtent.x,\n    height: newExtent.y - oppositeExtent.y\n  };\n  const scaleX = multiplier.x * newSize.width / rect.width;\n  const scaleY = multiplier.y * newSize.height / rect.height;\n  const largestMagnitude = abs(scaleX) > abs(scaleY) ? scaleX : scaleY;\n  const scale = lockAspectRatio ? { x: largestMagnitude, y: largestMagnitude } : {\n    x: extent.x === oppositeExtent.x ? 1 : scaleX,\n    y: extent.y === oppositeExtent.y ? 1 : scaleY\n  };\n  if (extent.y === oppositeExtent.y) {\n    scale.y = abs(scale.y);\n  } else if (sign(scale.y) !== sign(scaleY)) {\n    scale.y *= -1;\n  }\n  if (extent.x === oppositeExtent.x) {\n    scale.x = abs(scale.x);\n  } else if (sign(scale.x) !== sign(scaleX)) {\n    scale.x *= -1;\n  }\n  switch (scalingOriginMode) {\n    case \"extent\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, oppositeExtent), false);\n    case \"center\":\n      return transformRect(\n        rect,\n        AffineTransform.scale(scale.x, scale.y, {\n          x: rect.midX,\n          y: rect.midY\n        }),\n        false\n      );\n  }\n}\nfunction createRectFromPoints(initialPoint, finalPoint, normalized = true) {\n  if (normalized) {\n    return {\n      x: min2(finalPoint.x, initialPoint.x),\n      y: min2(finalPoint.y, initialPoint.y),\n      width: abs(finalPoint.x - initialPoint.x),\n      height: abs(finalPoint.y - initialPoint.y)\n    };\n  }\n  return {\n    x: initialPoint.x,\n    y: initialPoint.y,\n    width: finalPoint.x - initialPoint.x,\n    height: finalPoint.y - initialPoint.y\n  };\n}\nfunction transformRect(rect, transform, normalized = true) {\n  const p1 = transform.applyTo({ x: rect.minX, y: rect.minY });\n  const p2 = transform.applyTo({ x: rect.maxX, y: rect.maxY });\n  return createRectFromPoints(p1, p2, normalized);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/remove-scroll/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   preventBodyScroll: () => (/* binding */ preventBodyScroll)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/index.ts\nvar LOCK_CLASSNAME = \"data-scroll-lock\";\nfunction assignStyle(el, style) {\n  if (!el) return;\n  const previousStyle = Object.keys(style).reduce(\n    (acc, key) => {\n      acc[key] = el.style.getPropertyValue(key);\n      return acc;\n    },\n    {}\n  );\n  Object.assign(el.style, style);\n  return () => {\n    Object.assign(el.style, previousStyle);\n  };\n}\nfunction setCSSProperty(el, property, value) {\n  if (!el) return;\n  const previousValue = el.style.getPropertyValue(property);\n  el.style.setProperty(property, value);\n  return () => {\n    if (previousValue) {\n      el.style.setProperty(property, previousValue);\n    } else {\n      el.style.removeProperty(property);\n    }\n  };\n}\nfunction getPaddingProperty(documentElement) {\n  const documentLeft = documentElement.getBoundingClientRect().left;\n  const scrollbarX = Math.round(documentLeft) + documentElement.scrollLeft;\n  return scrollbarX ? \"paddingLeft\" : \"paddingRight\";\n}\nfunction preventBodyScroll(_document) {\n  const doc = _document ?? document;\n  const win = doc.defaultView ?? window;\n  const { documentElement, body } = doc;\n  const locked = body.hasAttribute(LOCK_CLASSNAME);\n  if (locked) return;\n  body.setAttribute(LOCK_CLASSNAME, \"\");\n  const scrollbarWidth = win.innerWidth - documentElement.clientWidth;\n  const setScrollbarWidthProperty = () => setCSSProperty(documentElement, \"--scrollbar-width\", `${scrollbarWidth}px`);\n  const paddingProperty = getPaddingProperty(documentElement);\n  const setStyle = () => assignStyle(body, {\n    overflow: \"hidden\",\n    [paddingProperty]: `${scrollbarWidth}px`\n  });\n  const setIOSStyle = () => {\n    const { scrollX, scrollY, visualViewport } = win;\n    const offsetLeft = visualViewport?.offsetLeft ?? 0;\n    const offsetTop = visualViewport?.offsetTop ?? 0;\n    const restoreStyle = assignStyle(body, {\n      position: \"fixed\",\n      overflow: \"hidden\",\n      top: `${-(scrollY - Math.floor(offsetTop))}px`,\n      left: `${-(scrollX - Math.floor(offsetLeft))}px`,\n      right: \"0\",\n      [paddingProperty]: `${scrollbarWidth}px`\n    });\n    return () => {\n      restoreStyle?.();\n      win.scrollTo({ left: scrollX, top: scrollY, behavior: \"instant\" });\n    };\n  };\n  const cleanups = [setScrollbarWidthProperty(), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isIos)() ? setIOSStyle() : setStyle()];\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n    body.removeAttribute(LOCK_CLASSNAME);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yZW1vdmUtc2Nyb2xsL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx3QkFBd0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrR0FBa0csZUFBZTtBQUNqSDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsZUFBZTtBQUN6QyxHQUFHO0FBQ0g7QUFDQSxZQUFZLG1DQUFtQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtQ0FBbUM7QUFDakQsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQSw0QkFBNEIsZUFBZTtBQUMzQyxLQUFLO0FBQ0w7QUFDQTtBQUNBLHFCQUFxQixrREFBa0Q7QUFDdkU7QUFDQTtBQUNBLGlEQUFpRCx3REFBSztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU2QiIsInNvdXJjZXMiOlsiL2hvbWUvc2FjaGEvRXBpdGVjaC9HLUVQSS0zMDAtUkVOLTMtMS1wcm9qZWN0d2Vlay1uYXRoYW4uamVhbm5vdC9mcm9udC9ub2RlX21vZHVsZXMvQHphZy1qcy9yZW1vdmUtc2Nyb2xsL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzSW9zIH0gZnJvbSAnQHphZy1qcy9kb20tcXVlcnknO1xuXG4vLyBzcmMvaW5kZXgudHNcbnZhciBMT0NLX0NMQVNTTkFNRSA9IFwiZGF0YS1zY3JvbGwtbG9ja1wiO1xuZnVuY3Rpb24gYXNzaWduU3R5bGUoZWwsIHN0eWxlKSB7XG4gIGlmICghZWwpIHJldHVybjtcbiAgY29uc3QgcHJldmlvdXNTdHlsZSA9IE9iamVjdC5rZXlzKHN0eWxlKS5yZWR1Y2UoXG4gICAgKGFjYywga2V5KSA9PiB7XG4gICAgICBhY2Nba2V5XSA9IGVsLnN0eWxlLmdldFByb3BlcnR5VmFsdWUoa2V5KTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSxcbiAgICB7fVxuICApO1xuICBPYmplY3QuYXNzaWduKGVsLnN0eWxlLCBzdHlsZSk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgT2JqZWN0LmFzc2lnbihlbC5zdHlsZSwgcHJldmlvdXNTdHlsZSk7XG4gIH07XG59XG5mdW5jdGlvbiBzZXRDU1NQcm9wZXJ0eShlbCwgcHJvcGVydHksIHZhbHVlKSB7XG4gIGlmICghZWwpIHJldHVybjtcbiAgY29uc3QgcHJldmlvdXNWYWx1ZSA9IGVsLnN0eWxlLmdldFByb3BlcnR5VmFsdWUocHJvcGVydHkpO1xuICBlbC5zdHlsZS5zZXRQcm9wZXJ0eShwcm9wZXJ0eSwgdmFsdWUpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGlmIChwcmV2aW91c1ZhbHVlKSB7XG4gICAgICBlbC5zdHlsZS5zZXRQcm9wZXJ0eShwcm9wZXJ0eSwgcHJldmlvdXNWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsLnN0eWxlLnJlbW92ZVByb3BlcnR5KHByb3BlcnR5KTtcbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBnZXRQYWRkaW5nUHJvcGVydHkoZG9jdW1lbnRFbGVtZW50KSB7XG4gIGNvbnN0IGRvY3VtZW50TGVmdCA9IGRvY3VtZW50RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuICBjb25zdCBzY3JvbGxiYXJYID0gTWF0aC5yb3VuZChkb2N1bWVudExlZnQpICsgZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQ7XG4gIHJldHVybiBzY3JvbGxiYXJYID8gXCJwYWRkaW5nTGVmdFwiIDogXCJwYWRkaW5nUmlnaHRcIjtcbn1cbmZ1bmN0aW9uIHByZXZlbnRCb2R5U2Nyb2xsKF9kb2N1bWVudCkge1xuICBjb25zdCBkb2MgPSBfZG9jdW1lbnQgPz8gZG9jdW1lbnQ7XG4gIGNvbnN0IHdpbiA9IGRvYy5kZWZhdWx0VmlldyA/PyB3aW5kb3c7XG4gIGNvbnN0IHsgZG9jdW1lbnRFbGVtZW50LCBib2R5IH0gPSBkb2M7XG4gIGNvbnN0IGxvY2tlZCA9IGJvZHkuaGFzQXR0cmlidXRlKExPQ0tfQ0xBU1NOQU1FKTtcbiAgaWYgKGxvY2tlZCkgcmV0dXJuO1xuICBib2R5LnNldEF0dHJpYnV0ZShMT0NLX0NMQVNTTkFNRSwgXCJcIik7XG4gIGNvbnN0IHNjcm9sbGJhcldpZHRoID0gd2luLmlubmVyV2lkdGggLSBkb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7XG4gIGNvbnN0IHNldFNjcm9sbGJhcldpZHRoUHJvcGVydHkgPSAoKSA9PiBzZXRDU1NQcm9wZXJ0eShkb2N1bWVudEVsZW1lbnQsIFwiLS1zY3JvbGxiYXItd2lkdGhcIiwgYCR7c2Nyb2xsYmFyV2lkdGh9cHhgKTtcbiAgY29uc3QgcGFkZGluZ1Byb3BlcnR5ID0gZ2V0UGFkZGluZ1Byb3BlcnR5KGRvY3VtZW50RWxlbWVudCk7XG4gIGNvbnN0IHNldFN0eWxlID0gKCkgPT4gYXNzaWduU3R5bGUoYm9keSwge1xuICAgIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICAgIFtwYWRkaW5nUHJvcGVydHldOiBgJHtzY3JvbGxiYXJXaWR0aH1weGBcbiAgfSk7XG4gIGNvbnN0IHNldElPU1N0eWxlID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgc2Nyb2xsWCwgc2Nyb2xsWSwgdmlzdWFsVmlld3BvcnQgfSA9IHdpbjtcbiAgICBjb25zdCBvZmZzZXRMZWZ0ID0gdmlzdWFsVmlld3BvcnQ/Lm9mZnNldExlZnQgPz8gMDtcbiAgICBjb25zdCBvZmZzZXRUb3AgPSB2aXN1YWxWaWV3cG9ydD8ub2Zmc2V0VG9wID8/IDA7XG4gICAgY29uc3QgcmVzdG9yZVN0eWxlID0gYXNzaWduU3R5bGUoYm9keSwge1xuICAgICAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgICAgIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICAgICAgdG9wOiBgJHstKHNjcm9sbFkgLSBNYXRoLmZsb29yKG9mZnNldFRvcCkpfXB4YCxcbiAgICAgIGxlZnQ6IGAkey0oc2Nyb2xsWCAtIE1hdGguZmxvb3Iob2Zmc2V0TGVmdCkpfXB4YCxcbiAgICAgIHJpZ2h0OiBcIjBcIixcbiAgICAgIFtwYWRkaW5nUHJvcGVydHldOiBgJHtzY3JvbGxiYXJXaWR0aH1weGBcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgcmVzdG9yZVN0eWxlPy4oKTtcbiAgICAgIHdpbi5zY3JvbGxUbyh7IGxlZnQ6IHNjcm9sbFgsIHRvcDogc2Nyb2xsWSwgYmVoYXZpb3I6IFwiaW5zdGFudFwiIH0pO1xuICAgIH07XG4gIH07XG4gIGNvbnN0IGNsZWFudXBzID0gW3NldFNjcm9sbGJhcldpZHRoUHJvcGVydHkoKSwgaXNJb3MoKSA/IHNldElPU1N0eWxlKCkgOiBzZXRTdHlsZSgpXTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBjbGVhbnVwcy5mb3JFYWNoKChmbikgPT4gZm4/LigpKTtcbiAgICBib2R5LnJlbW92ZUF0dHJpYnV0ZShMT0NLX0NMQVNTTkFNRSk7XG4gIH07XG59XG5cbmV4cG9ydCB7IHByZXZlbnRCb2R5U2Nyb2xsIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/select/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/select/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/collection */ \"(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n// src/select.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"select\").parts(\n  \"label\",\n  \"positioner\",\n  \"trigger\",\n  \"indicator\",\n  \"clearTrigger\",\n  \"item\",\n  \"itemText\",\n  \"itemIndicator\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"list\",\n  \"content\",\n  \"root\",\n  \"control\",\n  \"valueText\"\n);\nvar parts = anatomy.build();\nvar collection = (options) => {\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.ref)(new _zag_js_collection__WEBPACK_IMPORTED_MODULE_2__.ListCollection(options));\n};\ncollection.empty = () => {\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.ref)(new _zag_js_collection__WEBPACK_IMPORTED_MODULE_2__.ListCollection({ items: [] }));\n};\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `select:${ctx.id}`,\n  getContentId: (ctx) => ctx.ids?.content ?? `select:${ctx.id}:content`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `select:${ctx.id}:trigger`,\n  getClearTriggerId: (ctx) => ctx.ids?.clearTrigger ?? `select:${ctx.id}:clear-trigger`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `select:${ctx.id}:label`,\n  getControlId: (ctx) => ctx.ids?.control ?? `select:${ctx.id}:control`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `select:${ctx.id}:option:${id}`,\n  getHiddenSelectId: (ctx) => ctx.ids?.hiddenSelect ?? `select:${ctx.id}:select`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `select:${ctx.id}:positioner`,\n  getItemGroupId: (ctx, id) => ctx.ids?.itemGroup?.(id) ?? `select:${ctx.id}:optgroup:${id}`,\n  getItemGroupLabelId: (ctx, id) => ctx.ids?.itemGroupLabel?.(id) ?? `select:${ctx.id}:optgroup-label:${id}`,\n  getHiddenSelectEl: (ctx) => dom.getById(ctx, dom.getHiddenSelectId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getClearTriggerEl: (ctx) => dom.getById(ctx, dom.getClearTriggerId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getHighlightedOptionEl(ctx) {\n    if (!ctx.highlightedValue) return null;\n    return dom.getById(ctx, dom.getItemId(ctx, ctx.highlightedValue));\n  }\n});\n\n// src/select.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.isDisabled;\n  const invalid = state.context.invalid;\n  const readOnly = state.context.readOnly;\n  const interactive = state.context.isInteractive;\n  const composite = state.context.composite;\n  const open = state.hasTag(\"open\");\n  const focused = state.matches(\"focused\");\n  const highlightedValue = state.context.highlightedValue;\n  const highlightedItem = state.context.highlightedItem;\n  const selectedItems = state.context.selectedItems;\n  const isTypingAhead = state.context.isTypingAhead;\n  const collection2 = state.context.collection;\n  const ariaActiveDescendant = highlightedValue ? dom.getItemId(state.context, highlightedValue) : void 0;\n  function getItemState(props2) {\n    const _disabled = collection2.getItemDisabled(props2.item);\n    const value = collection2.getItemValue(props2.item);\n    return {\n      value,\n      disabled: Boolean(disabled || _disabled),\n      highlighted: highlightedValue === value,\n      selected: state.context.value.includes(value)\n    };\n  }\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_4__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement\n  });\n  return {\n    open,\n    focused,\n    empty: state.context.value.length === 0,\n    highlightedItem,\n    highlightedValue,\n    selectedItems,\n    hasSelectedItems: state.context.hasSelectedItems,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    collection: collection2,\n    multiple: !!state.context.multiple,\n    disabled: !!disabled,\n    setCollection(collection3) {\n      send({ type: \"COLLECTION.SET\", value: collection3 });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    focus() {\n      dom.getTriggerEl(state.context)?.focus({ preventScroll: true });\n    },\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    selectValue(value) {\n      send({ type: \"ITEM.SELECT\", value });\n    },\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    selectAll() {\n      send({ type: \"VALUE.SET\", value: collection2.getValues() });\n    },\n    highlightValue(value) {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value });\n    },\n    clearValue(value) {\n      if (value) {\n        send({ type: \"ITEM.CLEAR\", value });\n      } else {\n        send({ type: \"VALUE.CLEAR\" });\n      }\n    },\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        ...parts.label.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(readOnly),\n        htmlFor: dom.getHiddenSelectId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          dom.getTriggerEl(state.context)?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        id: dom.getTriggerId(state.context),\n        disabled,\n        dir: state.context.dir,\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": open,\n        \"aria-haspopup\": \"listbox\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-invalid\": invalid,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        ...parts.trigger.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(readOnly),\n        \"data-placement\": state.context.currentPlacement,\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(!state.context.hasSelectedItems),\n        onClick(event) {\n          if (!interactive) return;\n          if (event.defaultPrevented) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onFocus() {\n          send(\"TRIGGER.FOCUS\");\n        },\n        onBlur() {\n          send(\"TRIGGER.BLUR\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"TRIGGER.ARROW_UP\" });\n            },\n            ArrowDown(event2) {\n              send({ type: event2.altKey ? \"OPEN\" : \"TRIGGER.ARROW_DOWN\" });\n            },\n            ArrowLeft() {\n              send({ type: \"TRIGGER.ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"TRIGGER.ARROW_RIGHT\" });\n            },\n            Home() {\n              send({ type: \"TRIGGER.HOME\" });\n            },\n            End() {\n              send({ type: \"TRIGGER.END\" });\n            },\n            Enter() {\n              send({ type: \"TRIGGER.ENTER\" });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"TRIGGER.TYPEAHEAD\", key: event2.key });\n              } else {\n                send({ type: \"TRIGGER.ENTER\" });\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventKey)(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.isValidEvent(event)) {\n            send({ type: \"TRIGGER.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(readOnly)\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        id: dom.getItemId(state.context, itemState.value),\n        role: \"option\",\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        \"data-value\": itemState.value,\n        \"aria-selected\": itemState.selected,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.highlighted),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(itemState.disabled),\n        onPointerMove(event) {\n          if (itemState.disabled || event.pointerType !== \"mouse\") return;\n          if (itemState.value === state.context.highlightedValue) return;\n          send({ type: \"ITEM.POINTER_MOVE\", value: itemState.value });\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          send({ type: \"ITEM.CLICK\", src: \"pointerup\", value: itemState.value });\n        },\n        onPointerLeave(event) {\n          if (itemState.disabled) return;\n          if (props2.persistFocus) return;\n          if (event.pointerType !== \"mouse\") return;\n          const pointerMoved = state.previousEvent.type.includes(\"POINTER\");\n          if (!pointerMoved) return;\n          send({ type: \"ITEM.POINTER_LEAVE\" });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.highlighted)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        \"aria-hidden\": true,\n        ...parts.itemIndicator.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      const { htmlFor } = props2;\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: dom.getItemGroupLabelId(state.context, htmlFor),\n        role: \"group\",\n        dir: state.context.dir\n      });\n    },\n    getItemGroupProps(props2) {\n      const { id } = props2;\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        id: dom.getItemGroupId(state.context, id),\n        \"aria-labelledby\": dom.getItemGroupLabelId(state.context, id),\n        dir: state.context.dir\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        id: dom.getClearTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": \"Clear value\",\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        disabled,\n        hidden: !state.context.hasSelectedItems,\n        dir: state.context.dir,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"CLEAR.CLICK\");\n        }\n      });\n    },\n    getHiddenSelectProps() {\n      return normalize.select({\n        name: state.context.name,\n        form: state.context.form,\n        disabled,\n        multiple: state.context.multiple,\n        required: state.context.required,\n        \"aria-hidden\": true,\n        id: dom.getHiddenSelectId(state.context),\n        defaultValue: state.context.multiple ? state.context.value : state.context.value[0],\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.visuallyHiddenStyle,\n        tabIndex: -1,\n        // Some browser extensions will focus the hidden select.\n        // Let's forward the focus to the trigger.\n        onFocus() {\n          dom.getTriggerEl(state.context)?.focus({ preventScroll: true });\n        },\n        \"aria-labelledby\": dom.getLabelId(state.context)\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        hidden: !open,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        role: composite ? \"listbox\" : \"dialog\",\n        ...parts.content.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": state.context.currentPlacement,\n        \"data-activedescendant\": ariaActiveDescendant,\n        \"aria-activedescendant\": composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": state.context.multiple && composite ? true : void 0,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        tabIndex: 0,\n        onKeyDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isSelfTarget)(event)) return;\n          if (event.key === \"Tab\") {\n            const valid = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isValidTabEvent)(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"CONTENT.ARROW_UP\" });\n            },\n            ArrowDown() {\n              send({ type: \"CONTENT.ARROW_DOWN\" });\n            },\n            Home() {\n              send({ type: \"CONTENT.HOME\" });\n            },\n            End() {\n              send({ type: \"CONTENT.END\" });\n            },\n            Enter() {\n              send({ type: \"ITEM.CLICK\", src: \"keydown.enter\" });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"CONTENT.TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventKey)(event)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(event);\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isEditableElement)(target)) {\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.isValidEvent(event)) {\n            send({ type: \"CONTENT.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        tabIndex: 0,\n        role: !composite ? \"listbox\" : void 0,\n        \"aria-labelledby\": dom.getTriggerId(state.context),\n        \"aria-activedescendant\": !composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": !composite && state.context.multiple ? true : void 0\n      });\n    }\n  };\n}\nvar { and, not, or } = _zag_js_core__WEBPACK_IMPORTED_MODULE_5__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)(\n    {\n      id: \"select\",\n      context: {\n        value: [],\n        highlightedValue: null,\n        loopFocus: false,\n        closeOnSelect: !ctx.multiple,\n        disabled: false,\n        readOnly: false,\n        composite: true,\n        ...ctx,\n        highlightedItem: null,\n        selectedItems: [],\n        valueAsString: \"\",\n        collection: ctx.collection ?? collection.empty(),\n        typeahead: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.defaultOptions,\n        fieldsetDisabled: false,\n        positioning: {\n          placement: \"bottom-start\",\n          gutter: 8,\n          ...ctx.positioning\n        }\n      },\n      computed: {\n        hasSelectedItems: (ctx2) => ctx2.value.length > 0,\n        isTypingAhead: (ctx2) => ctx2.typeahead.keysSoFar !== \"\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.isDisabled || ctx2.readOnly)\n      },\n      initial: ctx.open ? \"open\" : \"idle\",\n      created: [\"syncCollection\"],\n      entry: [\"syncSelectElement\"],\n      watch: {\n        open: [\"toggleVisibility\"],\n        value: [\"syncSelectedItems\", \"syncSelectElement\"],\n        highlightedValue: [\"syncHighlightedItem\"],\n        collection: [\"syncCollection\"]\n      },\n      on: {\n        \"HIGHLIGHTED_VALUE.SET\": {\n          actions: [\"setHighlightedItem\"]\n        },\n        \"ITEM.SELECT\": {\n          actions: [\"selectItem\"]\n        },\n        \"ITEM.CLEAR\": {\n          actions: [\"clearItem\"]\n        },\n        \"VALUE.SET\": {\n          actions: [\"setSelectedItems\"]\n        },\n        \"VALUE.CLEAR\": {\n          actions: [\"clearSelectedItems\"]\n        },\n        \"CLEAR.CLICK\": {\n          actions: [\"clearSelectedItems\", \"focusTriggerEl\"]\n        },\n        \"COLLECTION.SET\": {\n          actions: [\"setCollection\"]\n        }\n      },\n      activities: [\"trackFormControlState\"],\n      states: {\n        idle: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: \"isTriggerClickEvent\",\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\"]\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\", \"highlightFirstSelectedItem\"]\n              }\n            ],\n            \"TRIGGER.FOCUS\": {\n              target: \"focused\"\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\"]\n              }\n            ]\n          }\n        },\n        focused: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: \"isTriggerClickEvent\",\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\"]\n              },\n              {\n                guard: \"isTriggerArrowUpEvent\",\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"highlightComputedLastItem\"]\n              },\n              {\n                guard: or(\"isTriggerArrowDownEvent\", \"isTriggerEnterEvent\"),\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"highlightComputedFirstItem\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\"]\n              }\n            ],\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\"]\n              }\n            ],\n            \"TRIGGER.BLUR\": {\n              target: \"idle\"\n            },\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightFirstSelectedItem\"]\n              }\n            ],\n            \"TRIGGER.ENTER\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedFirstItem\"]\n              }\n            ],\n            \"TRIGGER.ARROW_UP\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedLastItem\"]\n              }\n            ],\n            \"TRIGGER.ARROW_DOWN\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedFirstItem\"]\n              }\n            ],\n            \"TRIGGER.ARROW_LEFT\": [\n              {\n                guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n                actions: [\"selectPreviousItem\"]\n              },\n              {\n                guard: not(\"multiple\"),\n                actions: [\"selectLastItem\"]\n              }\n            ],\n            \"TRIGGER.ARROW_RIGHT\": [\n              {\n                guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n                actions: [\"selectNextItem\"]\n              },\n              {\n                guard: not(\"multiple\"),\n                actions: [\"selectFirstItem\"]\n              }\n            ],\n            \"TRIGGER.HOME\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectFirstItem\"]\n            },\n            \"TRIGGER.END\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectLastItem\"]\n            },\n            \"TRIGGER.TYPEAHEAD\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectMatchingItem\"]\n            }\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          exit: [\"scrollContentToTop\"],\n          activities: [\"trackDismissableElement\", \"computePlacement\", \"scrollToHighlightedItem\"],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"focused\",\n              actions: [\"focusTriggerEl\", \"clearHighlightedItem\"]\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"focusTriggerEl\", \"clearHighlightedItem\"]\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n              }\n            ],\n            \"ITEM.CLICK\": [\n              {\n                guard: and(\"closeOnSelect\", \"isOpenControlled\"),\n                actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n              },\n              {\n                guard: \"closeOnSelect\",\n                target: \"focused\",\n                actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"focusTriggerEl\", \"clearHighlightedItem\"]\n              },\n              {\n                actions: [\"selectHighlightedItem\"]\n              }\n            ],\n            \"CONTENT.HOME\": {\n              actions: [\"highlightFirstItem\"]\n            },\n            \"CONTENT.END\": {\n              actions: [\"highlightLastItem\"]\n            },\n            \"CONTENT.ARROW_DOWN\": [\n              {\n                guard: and(\"hasHighlightedItem\", \"loop\", \"isLastItemHighlighted\"),\n                actions: [\"highlightFirstItem\"]\n              },\n              {\n                guard: \"hasHighlightedItem\",\n                actions: [\"highlightNextItem\"]\n              },\n              {\n                actions: [\"highlightFirstItem\"]\n              }\n            ],\n            \"CONTENT.ARROW_UP\": [\n              {\n                guard: and(\"hasHighlightedItem\", \"loop\", \"isFirstItemHighlighted\"),\n                actions: [\"highlightLastItem\"]\n              },\n              {\n                guard: \"hasHighlightedItem\",\n                actions: [\"highlightPreviousItem\"]\n              },\n              {\n                actions: [\"highlightLastItem\"]\n              }\n            ],\n            \"CONTENT.TYPEAHEAD\": {\n              actions: [\"highlightMatchingItem\"]\n            },\n            \"ITEM.POINTER_MOVE\": {\n              actions: [\"highlightItem\"]\n            },\n            \"ITEM.POINTER_LEAVE\": {\n              actions: [\"clearHighlightedItem\"]\n            },\n            \"POSITIONING.SET\": {\n              actions: [\"reposition\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        loop: (ctx2) => !!ctx2.loopFocus,\n        multiple: (ctx2) => !!ctx2.multiple,\n        hasSelectedItems: (ctx2) => !!ctx2.hasSelectedItems,\n        hasHighlightedItem: (ctx2) => ctx2.highlightedValue != null,\n        isFirstItemHighlighted: (ctx2) => ctx2.highlightedValue === ctx2.collection.firstValue,\n        isLastItemHighlighted: (ctx2) => ctx2.highlightedValue === ctx2.collection.lastValue,\n        closeOnSelect: (ctx2, evt) => !!(evt.closeOnSelect ?? ctx2.closeOnSelect),\n        // guard assertions (for controlled mode)\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"],\n        isTriggerClickEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.CLICK\",\n        isTriggerEnterEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ENTER\",\n        isTriggerArrowUpEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ARROW_UP\",\n        isTriggerArrowDownEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ARROW_DOWN\"\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { initialContext }) {\n          return (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_7__.trackFormControl)(dom.getHiddenSelectEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.selectedItems(ctx2, initialContext.value);\n            }\n          });\n        },\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const contentEl = () => dom.getContentEl(ctx2);\n          let restoreFocus = true;\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_8__.trackDismissableElement)(contentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx2), dom.getClearTriggerEl(ctx2)],\n            onFocusOutside: ctx2.onFocusOutside,\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n            }\n          });\n        },\n        computePlacement(ctx2) {\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const triggerEl = () => dom.getTriggerEl(ctx2);\n          const positionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_4__.getPlacement)(triggerEl, positionerEl, {\n            defer: true,\n            ...ctx2.positioning,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        scrollToHighlightedItem(ctx2, _evt, { getState }) {\n          const exec = (immediate) => {\n            if (ctx2.highlightedValue == null) return;\n            const state = getState();\n            if (state.event.type.includes(\"POINTER\")) return;\n            const optionEl = dom.getHighlightedOptionEl(ctx2);\n            const contentEl2 = dom.getContentEl(ctx2);\n            if (ctx2.scrollToIndexFn) {\n              const highlightedIndex = ctx2.collection.indexOf(ctx2.highlightedValue);\n              ctx2.scrollToIndexFn({ index: highlightedIndex, immediate });\n              return;\n            }\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.scrollIntoView)(optionEl, { rootEl: contentEl2, block: \"nearest\" });\n          };\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => exec(true));\n          const contentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.observeAttributes)(contentEl, {\n            defer: true,\n            attributes: [\"data-activedescendant\"],\n            callback() {\n              exec(false);\n            }\n          });\n        }\n      },\n      actions: {\n        reposition(ctx2, evt) {\n          const positionerEl = () => dom.getPositionerEl(ctx2);\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_4__.getPlacement)(dom.getTriggerEl(ctx2), positionerEl, {\n            ...ctx2.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        },\n        highlightPreviousItem(ctx2) {\n          if (ctx2.highlightedValue == null) return;\n          const value = ctx2.collection.getPreviousValue(ctx2.highlightedValue);\n          set.highlightedItem(ctx2, value);\n        },\n        highlightNextItem(ctx2) {\n          if (ctx2.highlightedValue == null) return;\n          const value = ctx2.collection.getNextValue(ctx2.highlightedValue);\n          set.highlightedItem(ctx2, value);\n        },\n        highlightFirstItem(ctx2) {\n          const value = ctx2.collection.firstValue;\n          set.highlightedItem(ctx2, value);\n        },\n        highlightLastItem(ctx2) {\n          const value = ctx2.collection.lastValue;\n          set.highlightedItem(ctx2, value);\n        },\n        setInitialFocus(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => {\n            const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getInitialFocus)({\n              root: dom.getContentEl(ctx2)\n            });\n            element?.focus({ preventScroll: true });\n          });\n        },\n        focusTriggerEl(ctx2, evt) {\n          const restoreFocus = evt.restoreFocus ?? evt.previousEvent?.restoreFocus;\n          if (restoreFocus != null && !restoreFocus) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => {\n            const element = dom.getTriggerEl(ctx2);\n            element?.focus({ preventScroll: true });\n          });\n        },\n        selectHighlightedItem(ctx2, evt) {\n          let value = evt.value ?? ctx2.highlightedValue;\n          if (value == null) return;\n          const nullable = ctx2.deselectable && !ctx2.multiple && ctx2.value.includes(value);\n          value = nullable ? null : value;\n          set.selectedItem(ctx2, value, nullable);\n        },\n        highlightComputedFirstItem(ctx2) {\n          const value = ctx2.hasSelectedItems ? ctx2.collection.sort(ctx2.value)[0] : ctx2.collection.firstValue;\n          set.highlightedItem(ctx2, value);\n        },\n        highlightComputedLastItem(ctx2) {\n          const value = ctx2.hasSelectedItems ? ctx2.collection.sort(ctx2.value)[0] : ctx2.collection.lastValue;\n          set.highlightedItem(ctx2, value);\n        },\n        highlightFirstSelectedItem(ctx2) {\n          if (!ctx2.hasSelectedItems) return;\n          const [value] = ctx2.collection.sort(ctx2.value);\n          set.highlightedItem(ctx2, value);\n        },\n        highlightItem(ctx2, evt) {\n          set.highlightedItem(ctx2, evt.value);\n        },\n        highlightMatchingItem(ctx2, evt) {\n          const value = ctx2.collection.search(evt.key, {\n            state: ctx2.typeahead,\n            currentValue: ctx2.highlightedValue\n          });\n          if (value == null) return;\n          set.highlightedItem(ctx2, value);\n        },\n        setHighlightedItem(ctx2, evt) {\n          set.highlightedItem(ctx2, evt.value);\n        },\n        clearHighlightedItem(ctx2) {\n          set.highlightedItem(ctx2, null, true);\n        },\n        selectItem(ctx2, evt) {\n          const nullable = ctx2.deselectable && !ctx2.multiple && ctx2.value.includes(evt.value);\n          const value = nullable ? null : evt.value;\n          set.selectedItem(ctx2, value, nullable);\n        },\n        clearItem(ctx2, evt) {\n          const value = ctx2.value.filter((v) => v !== evt.value);\n          set.selectedItems(ctx2, value);\n        },\n        setSelectedItems(ctx2, evt) {\n          set.selectedItems(ctx2, evt.value);\n        },\n        clearSelectedItems(ctx2) {\n          set.selectedItems(ctx2, []);\n        },\n        selectPreviousItem(ctx2) {\n          const value = ctx2.collection.getPreviousValue(ctx2.value[0]);\n          set.selectedItem(ctx2, value);\n        },\n        selectNextItem(ctx2) {\n          const value = ctx2.collection.getNextValue(ctx2.value[0]);\n          set.selectedItem(ctx2, value);\n        },\n        selectFirstItem(ctx2) {\n          const value = ctx2.collection.firstValue;\n          set.selectedItem(ctx2, value);\n        },\n        selectLastItem(ctx2) {\n          const value = ctx2.collection.lastValue;\n          set.selectedItem(ctx2, value);\n        },\n        selectMatchingItem(ctx2, evt) {\n          const value = ctx2.collection.search(evt.key, {\n            state: ctx2.typeahead,\n            currentValue: ctx2.value[0]\n          });\n          if (value == null) return;\n          set.selectedItem(ctx2, value);\n        },\n        scrollContentToTop(ctx2) {\n          if (ctx2.scrollToIndexFn) {\n            ctx2.scrollToIndexFn({ index: 0, immediate: true });\n          } else {\n            dom.getContentEl(ctx2)?.scrollTo(0, 0);\n          }\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        syncSelectElement(ctx2) {\n          const selectEl = dom.getHiddenSelectEl(ctx2);\n          if (!selectEl) return;\n          if (ctx2.value.length === 0 && !ctx2.multiple) {\n            selectEl.selectedIndex = -1;\n            return;\n          }\n          for (const option of selectEl.options) {\n            option.selected = ctx2.value.includes(option.value);\n          }\n        },\n        setCollection(ctx2, evt) {\n          ctx2.collection = evt.value;\n        },\n        syncCollection(ctx2) {\n          const selectedItems = ctx2.collection.findMany(ctx2.value);\n          const valueAsString = ctx2.collection.stringifyItems(selectedItems);\n          ctx2.highlightedItem = ctx2.collection.find(ctx2.highlightedValue);\n          ctx2.selectedItems = selectedItems;\n          ctx2.valueAsString = valueAsString;\n        },\n        syncSelectedItems(ctx2) {\n          sync.valueChange(ctx2);\n        },\n        syncHighlightedItem(ctx2) {\n          sync.highlightChange(ctx2);\n        }\n      }\n    }\n  );\n}\nfunction dispatchChangeEvent(ctx) {\n  (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => {\n    const node = dom.getHiddenSelectEl(ctx);\n    if (!node) return;\n    const win = dom.getWin(ctx);\n    const changeEvent = new win.Event(\"change\", { bubbles: true, composed: true });\n    node.dispatchEvent(changeEvent);\n  });\n}\nvar sync = {\n  valueChange: (ctx) => {\n    const prevSelectedItems = ctx.selectedItems;\n    ctx.selectedItems = ctx.value.map((value) => {\n      const foundItem = prevSelectedItems.find((item) => ctx.collection.getItemValue(item) === value);\n      if (foundItem) return foundItem;\n      return ctx.collection.find(value);\n    });\n    ctx.valueAsString = ctx.collection.stringifyItems(ctx.selectedItems);\n  },\n  highlightChange: (ctx) => {\n    ctx.highlightedItem = ctx.collection.find(ctx.highlightedValue);\n  }\n};\nvar invoke = {\n  valueChange: (ctx) => {\n    sync.valueChange(ctx);\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value),\n      items: Array.from(ctx.selectedItems)\n    });\n    dispatchChangeEvent(ctx);\n  },\n  highlightChange: (ctx) => {\n    sync.highlightChange(ctx);\n    ctx.onHighlightChange?.({\n      highlightedValue: ctx.highlightedValue,\n      highlightedItem: ctx.highlightedItem,\n      highlightedIndex: ctx.collection.indexOf(ctx.highlightedValue)\n    });\n  }\n};\nvar set = {\n  selectedItem: (ctx, value, force = false) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.isEqual)(ctx.value, value)) return;\n    if (value == null && !force) return;\n    if (value == null && force) {\n      ctx.value = [];\n      invoke.valueChange(ctx);\n      return;\n    }\n    ctx.value = ctx.multiple ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.addOrRemove)(ctx.value, value) : [value];\n    invoke.valueChange(ctx);\n  },\n  selectedItems: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.valueChange(ctx);\n  },\n  highlightedItem: (ctx, value, force = false) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.isEqual)(ctx.highlightedValue, value)) return;\n    if (value == null && !force) return;\n    ctx.highlightedValue = value ?? null;\n    invoke.highlightChange(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_9__.createProps)()([\n  \"closeOnSelect\",\n  \"collection\",\n  \"dir\",\n  \"disabled\",\n  \"deselectable\",\n  \"form\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"loopFocus\",\n  \"multiple\",\n  \"name\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"open.controlled\",\n  \"open\",\n  \"composite\",\n  \"positioning\",\n  \"required\",\n  \"readOnly\",\n  \"scrollToIndexFn\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_9__.createProps)()([\"item\", \"persistFocus\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(itemProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_9__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(itemGroupProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_9__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(itemGroupLabelProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/select/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/slider/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/slider/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   splitThumbProps: () => (/* binding */ splitThumbProps),\n/* harmony export */   thumbProps: () => (/* binding */ thumbProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_element_size__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/element-size */ \"(ssr)/./node_modules/@zag-js/element-size/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/slider.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"slider\").parts(\n  \"root\",\n  \"label\",\n  \"thumb\",\n  \"valueText\",\n  \"track\",\n  \"range\",\n  \"control\",\n  \"markerGroup\",\n  \"marker\",\n  \"draggingIndicator\"\n);\nvar parts = anatomy.build();\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(ctx) {\n  const [firstPercent, lastPercent] = getBounds(ctx.valuePercent);\n  if (ctx.valuePercent.length === 1) {\n    if (ctx.origin === \"center\") {\n      const isNegative = ctx.valuePercent[0] < 50;\n      const start = isNegative ? `${ctx.valuePercent[0]}%` : \"50%\";\n      const end = isNegative ? \"50%\" : `${100 - ctx.valuePercent[0]}%`;\n      return { start, end };\n    }\n    return { start: \"0%\", end: `${100 - lastPercent}%` };\n  }\n  return { start: `${firstPercent}%`, end: `${100 - lastPercent}%` };\n}\nfunction getRangeStyle(ctx) {\n  if (ctx.isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [ctx.isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [ctx.isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(ctx) {\n  const { height = 0 } = ctx.thumbSize ?? {};\n  const getValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValueTransformer)([ctx.min, ctx.max], [-height / 2, height / 2]);\n  return parseFloat(getValue(ctx.value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(ctx) {\n  const { width = 0 } = ctx.thumbSize ?? {};\n  if (ctx.isRtl) {\n    const getValue2 = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValueTransformer)([ctx.max, ctx.min], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(ctx.value).toFixed(2));\n  }\n  const getValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValueTransformer)([ctx.min, ctx.max], [-width / 2, width / 2]);\n  return parseFloat(getValue(ctx.value).toFixed(2));\n}\nfunction getOffset(ctx, percent) {\n  if (ctx.thumbAlignment === \"center\") return `${percent}%`;\n  const offset = ctx.isVertical ? getVerticalThumbOffset(ctx) : getHorizontalThumbOffset(ctx);\n  return `calc(${percent}% - ${offset}px)`;\n}\nfunction getThumbOffset(ctx) {\n  let percent = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValuePercent)(ctx.value, ctx.min, ctx.max) * 100;\n  return getOffset(ctx, percent);\n}\nfunction getVisibility(ctx) {\n  let visibility = \"visible\";\n  if (ctx.thumbAlignment === \"contain\" && !ctx.hasMeasuredThumbSize) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(ctx, index) {\n  const placementProp = ctx.isVertical ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(ctx),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(ctx) {\n  const range = getRangeOffsets(ctx);\n  const offsetStyles = ctx.value.reduce((styles, value, index) => {\n    const offset = getThumbOffset({ ...ctx, value });\n    return { ...styles, [`--slider-thumb-offset-${index}`]: offset };\n  }, {});\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-transform\": ctx.isVertical ? \"translateY(50%)\" : ctx.isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  };\n}\nfunction getMarkerStyle(ctx, value) {\n  return {\n    // @ts-expect-error\n    visibility: getVisibility(ctx),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    // @ts-expect-error\n    [ctx.isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset({ ...ctx, value }),\n    translate: \"var(--tx) var(--ty)\",\n    \"--tx\": ctx.isHorizontal ? ctx.isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--ty\": !ctx.isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nvar styleGetterFns = {\n  getRootStyle,\n  getControlStyle,\n  getThumbStyle,\n  getRangeStyle,\n  getMarkerStyle,\n  getMarkerGroupStyle\n};\n\n// src/slider.dom.ts\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.createScope)({\n  ...styleGetterFns,\n  getRootId: (ctx) => ctx.ids?.root ?? `slider:${ctx.id}`,\n  getThumbId: (ctx, index) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`,\n  getHiddenInputId: (ctx, index) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`,\n  getControlId: (ctx) => ctx.ids?.control ?? `slider:${ctx.id}:control`,\n  getTrackId: (ctx) => ctx.ids?.track ?? `slider:${ctx.id}:track`,\n  getRangeId: (ctx) => ctx.ids?.range ?? `slider:${ctx.id}:range`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `slider:${ctx.id}:label`,\n  getValueTextId: (ctx) => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`,\n  getMarkerId: (ctx, value) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getThumbEl: (ctx, index) => dom.getById(ctx, dom.getThumbId(ctx, index)),\n  getHiddenInputEl: (ctx, index) => dom.getById(ctx, dom.getHiddenInputId(ctx, index)),\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getElements: (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.queryAll)(dom.getControlEl(ctx), \"[role=slider]\"),\n  getFirstEl: (ctx) => dom.getElements(ctx)[0],\n  getRangeEl: (ctx) => dom.getById(ctx, dom.getRangeId(ctx)),\n  getValueFromPoint(ctx, point) {\n    const controlEl = dom.getControlEl(ctx);\n    if (!controlEl) return;\n    const relativePoint = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getRelativePoint)(point, controlEl);\n    const percent = relativePoint.getPercentValue({\n      orientation: ctx.orientation,\n      dir: ctx.dir,\n      inverted: { y: true }\n    });\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getPercentValue)(percent, ctx.min, ctx.max, ctx.step);\n  },\n  dispatchChangeEvent(ctx) {\n    const valueArray = Array.from(ctx.value);\n    valueArray.forEach((value, index) => {\n      const inputEl = dom.getHiddenInputEl(ctx, index);\n      if (!inputEl) return;\n      (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_3__.dispatchInputValueEvent)(inputEl, { value });\n    });\n  }\n});\nfunction normalizeValues(ctx, nextValues) {\n  return nextValues.map((value, index, values) => {\n    return constrainValue({ ...ctx, value: values }, value, index);\n  });\n}\nfunction getRangeAtIndex(ctx, index) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValueRanges)(ctx.value, ctx.min, ctx.max, ctx.minStepsBetweenThumbs)[index];\n}\nfunction constrainValue(ctx, value, index) {\n  const range = getRangeAtIndex(ctx, index);\n  const snapValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.snapValueToStep)(value, ctx.min, ctx.max, ctx.step);\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.clampValue)(snapValue, range.min, range.max);\n}\nfunction decrement(ctx, index, step) {\n  const idx = index ?? ctx.focusedIndex;\n  const range = getRangeAtIndex(ctx, idx);\n  const nextValues = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getPreviousStepValue)(idx, {\n    ...range,\n    step: step ?? ctx.step,\n    values: ctx.value\n  });\n  nextValues[idx] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.clampValue)(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(ctx, index, step) {\n  const idx = index ?? ctx.focusedIndex;\n  const range = getRangeAtIndex(ctx, idx);\n  const nextValues = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getNextStepValue)(idx, {\n    ...range,\n    step: step ?? ctx.step,\n    values: ctx.value\n  });\n  nextValues[idx] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.clampValue)(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(ctx, pointValue) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getClosestValueIndex)(ctx.value, pointValue);\n}\nfunction assignArray(current, next) {\n  for (let i = 0; i < next.length; i++) {\n    const value = next[i];\n    current[i] = value;\n  }\n}\n\n// src/slider.connect.ts\nfunction connect(state, send, normalize) {\n  const ariaLabel = state.context[\"aria-label\"];\n  const ariaLabelledBy = state.context[\"aria-labelledby\"];\n  const sliderValue = state.context.value;\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = state.context.isDisabled;\n  const invalid = state.context.invalid;\n  const interactive = state.context.isInteractive;\n  const isHorizontal = state.context.orientation === \"horizontal\";\n  const isVertical = state.context.orientation === \"vertical\";\n  function getValuePercentFn(value) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValuePercent)(value, state.context.min, state.context.max);\n  }\n  function getPercentValueFn(percent) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getPercentValue)(percent, state.context.min, state.context.max, state.context.step);\n  }\n  return {\n    value: state.context.value,\n    dragging,\n    focused,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(state.context, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(state.context, index).max;\n    },\n    increment(index) {\n      send({ type: \"INCREMENT\", index });\n    },\n    decrement(index) {\n      send({ type: \"DECREMENT\", index });\n    },\n    focus() {\n      if (!interactive) return;\n      send({ type: \"FOCUS\", index: 0 });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context, 0),\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          dom.getFirstEl(state.context)?.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        id: dom.getRootId(state.context),\n        dir: state.context.dir,\n        style: dom.getRootStyle(state.context)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        id: dom.getValueTextId(state.context)\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        ...parts.track.attrs,\n        dir: state.context.dir,\n        id: dom.getTrackId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        style: { position: \"relative\" }\n      });\n    },\n    getThumbProps(props2) {\n      const { index = 0, name } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(state.context, index);\n      const valueText = state.context.getAriaValueText?.({ value, index });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize.element({\n        ...parts.thumb.attrs,\n        dir: state.context.dir,\n        \"data-index\": index,\n        \"data-name\": name,\n        id: dom.getThumbId(state.context, index),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused && state.context.focusedIndex === index),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging && state.context.focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? dom.getLabelId(state.context),\n        \"aria-orientation\": state.context.orientation,\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: dom.getThumbStyle(state.context, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          send({ type: \"THUMB_POINTER_DOWN\", index });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send(\"BLUR\");\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"FOCUS\", index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventStep)(event) * state.context.step;\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowUp\" });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowDown\" });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowLeft\" });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowRight\" });\n            },\n            PageUp() {\n              send({ type: \"ARROW_INC\", step, src: \"PageUp\" });\n            },\n            PageDown() {\n              send({ type: \"ARROW_DEC\", step, src: \"PageDown\" });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventKey)(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      const { index = 0, name } = props2;\n      return normalize.input({\n        name: name ?? (state.context.name ? state.context.name + (state.context.value.length > 1 ? \"[]\" : \"\") : void 0),\n        form: state.context.form,\n        type: \"text\",\n        hidden: true,\n        defaultValue: state.context.value[index],\n        id: dom.getHiddenInputId(state.context, index)\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        id: dom.getRangeId(state.context),\n        ...parts.range.attrs,\n        dir: state.context.dir,\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        style: dom.getRangeStyle(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        style: dom.getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventPoint)(event);\n          send({ type: \"POINTER_DOWN\", point });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getMarkerGroupProps() {\n      return normalize.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-orientation\": state.context.orientation,\n        style: dom.getMarkerGroupStyle()\n      });\n    },\n    getMarkerProps(props2) {\n      const style = dom.getMarkerStyle(state.context, props2.value);\n      let markerState;\n      const first = state.context.value[0];\n      const last = state.context.value[state.context.value.length - 1];\n      if (props2.value < first) {\n        markerState = \"under-value\";\n      } else if (props2.value > last) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize.element({\n        ...parts.marker.attrs,\n        id: dom.getMarkerId(state.context, props2.value),\n        role: \"presentation\",\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-value\": props2.value,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-state\": markerState,\n        style\n      });\n    },\n    getDraggingIndicatorProps(props2) {\n      const { index = 0 } = props2;\n      const isDragging = index === state.context.focusedIndex && dragging;\n      return normalize.element({\n        ...parts.draggingIndicator.attrs,\n        role: \"presentation\",\n        dir: state.context.dir,\n        hidden: !isDragging,\n        \"data-orientation\": state.context.orientation,\n        \"data-state\": isDragging ? \"open\" : \"closed\",\n        style: dom.getThumbStyle(state.context, index)\n      });\n    }\n  };\n}\nvar isEqualSize = (a, b) => {\n  return a?.width === b?.width && a?.height === b?.height;\n};\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)(\n    {\n      id: \"slider\",\n      initial: \"idle\",\n      context: {\n        thumbSize: null,\n        thumbAlignment: \"contain\",\n        min: 0,\n        max: 100,\n        step: 1,\n        value: [0],\n        origin: \"start\",\n        orientation: \"horizontal\",\n        dir: \"ltr\",\n        minStepsBetweenThumbs: 0,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        focusedIndex: -1,\n        fieldsetDisabled: false\n      },\n      computed: {\n        isHorizontal: (ctx2) => ctx2.orientation === \"horizontal\",\n        isVertical: (ctx2) => ctx2.orientation === \"vertical\",\n        isRtl: (ctx2) => ctx2.orientation === \"horizontal\" && ctx2.dir === \"rtl\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.readOnly || ctx2.isDisabled),\n        hasMeasuredThumbSize: (ctx2) => ctx2.thumbSize != null,\n        valuePercent(ctx2) {\n          return ctx2.value.map((value) => 100 * (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValuePercent)(value, ctx2.min, ctx2.max));\n        }\n      },\n      watch: {\n        value: [\"syncInputElements\"]\n      },\n      entry: [\"coarseValue\"],\n      activities: [\"trackFormControlState\", \"trackThumbsSize\"],\n      on: {\n        SET_VALUE: [\n          {\n            guard: \"hasIndex\",\n            actions: \"setValueAtIndex\"\n          },\n          { actions: \"setValue\" }\n        ],\n        INCREMENT: {\n          actions: \"incrementThumbAtIndex\"\n        },\n        DECREMENT: {\n          actions: \"decrementThumbAtIndex\"\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n            },\n            FOCUS: {\n              target: \"focus\",\n              actions: \"setFocusedIndex\"\n            },\n            THUMB_POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n            }\n          }\n        },\n        focus: {\n          entry: \"focusActiveThumb\",\n          on: {\n            POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n            },\n            THUMB_POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n            },\n            ARROW_DEC: {\n              actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n            },\n            ARROW_INC: {\n              actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n            },\n            HOME: {\n              actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n            },\n            END: {\n              actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n            },\n            BLUR: {\n              target: \"idle\",\n              actions: \"clearFocusedIndex\"\n            }\n          }\n        },\n        dragging: {\n          entry: \"focusActiveThumb\",\n          activities: \"trackPointerMove\",\n          on: {\n            POINTER_UP: {\n              target: \"focus\",\n              actions: \"invokeOnChangeEnd\"\n            },\n            POINTER_MOVE: {\n              actions: \"setPointerValue\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        hasIndex: (_ctx, evt) => evt.index != null\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { initialContext }) {\n          return (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_3__.trackFormControl)(dom.getRootEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.value(ctx2, initialContext.value);\n            }\n          });\n        },\n        trackPointerMove(ctx2, _evt, { send }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.trackPointerMove)(dom.getDoc(ctx2), {\n            onPointerMove(info) {\n              send({ type: \"POINTER_MOVE\", point: info.point });\n            },\n            onPointerUp() {\n              send(\"POINTER_UP\");\n            }\n          });\n        },\n        trackThumbsSize(ctx2) {\n          if (ctx2.thumbAlignment !== \"contain\" || ctx2.thumbSize) return;\n          return (0,_zag_js_element_size__WEBPACK_IMPORTED_MODULE_5__.trackElementsSize)({\n            getNodes: () => dom.getElements(ctx2),\n            observeMutation: true,\n            callback(size) {\n              if (!size || isEqualSize(ctx2.thumbSize, size)) return;\n              ctx2.thumbSize = size;\n            }\n          });\n        }\n      },\n      actions: {\n        syncInputElements(ctx2) {\n          ctx2.value.forEach((value, index) => {\n            const inputEl = dom.getHiddenInputEl(ctx2, index);\n            dom.setValue(inputEl, value);\n          });\n        },\n        invokeOnChangeEnd(ctx2) {\n          invoke.valueChangeEnd(ctx2);\n        },\n        setClosestThumbIndex(ctx2, evt) {\n          const pointValue = dom.getValueFromPoint(ctx2, evt.point);\n          if (pointValue == null) return;\n          const focusedIndex = getClosestIndex(ctx2, pointValue);\n          set.focusedIndex(ctx2, focusedIndex);\n        },\n        setFocusedIndex(ctx2, evt) {\n          set.focusedIndex(ctx2, evt.index);\n        },\n        clearFocusedIndex(ctx2) {\n          set.focusedIndex(ctx2, -1);\n        },\n        setPointerValue(ctx2, evt) {\n          const pointerValue = dom.getValueFromPoint(ctx2, evt.point);\n          if (pointerValue == null) return;\n          const value = constrainValue(ctx2, pointerValue, ctx2.focusedIndex);\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, value);\n        },\n        focusActiveThumb(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n            const thumbEl = dom.getThumbEl(ctx2, ctx2.focusedIndex);\n            thumbEl?.focus({ preventScroll: true });\n          });\n        },\n        decrementThumbAtIndex(ctx2, evt) {\n          const value = decrement(ctx2, evt.index, evt.step);\n          set.value(ctx2, value);\n        },\n        incrementThumbAtIndex(ctx2, evt) {\n          const value = increment(ctx2, evt.index, evt.step);\n          set.value(ctx2, value);\n        },\n        setFocusedThumbToMin(ctx2) {\n          const { min } = getRangeAtIndex(ctx2, ctx2.focusedIndex);\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, min);\n        },\n        setFocusedThumbToMax(ctx2) {\n          const { max } = getRangeAtIndex(ctx2, ctx2.focusedIndex);\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, max);\n        },\n        coarseValue(ctx2) {\n          const value = normalizeValues(ctx2, ctx2.value);\n          set.value(ctx2, value);\n        },\n        setValueAtIndex(ctx2, evt) {\n          const value = constrainValue(ctx2, evt.value, evt.index);\n          set.valueAtIndex(ctx2, evt.index, value);\n        },\n        setValue(ctx2, evt) {\n          const value = normalizeValues(ctx2, evt.value);\n          set.value(ctx2, value);\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  valueChange(ctx) {\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value)\n    });\n    dom.dispatchChangeEvent(ctx);\n  },\n  valueChangeEnd(ctx) {\n    ctx.onValueChangeEnd?.({\n      value: Array.from(ctx.value)\n    });\n  },\n  focusChange(ctx) {\n    ctx.onFocusChange?.({\n      value: Array.from(ctx.value),\n      focusedIndex: ctx.focusedIndex\n    });\n  }\n};\nvar set = {\n  valueAtIndex: (ctx, index, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isEqual)(ctx.value[index], value)) return;\n    ctx.value[index] = value;\n    invoke.valueChange(ctx);\n  },\n  value: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isEqual)(ctx.value, value)) return;\n    assignArray(ctx.value, value);\n    invoke.valueChange(ctx);\n  },\n  focusedIndex: (ctx, index) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isEqual)(ctx.focusedIndex, index)) return;\n    ctx.focusedIndex = index;\n    invoke.focusChange(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getAriaValueText\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"max\",\n  \"min\",\n  \"minStepsBetweenThumbs\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"orientation\",\n  \"origin\",\n  \"readOnly\",\n  \"step\",\n  \"thumbAlignment\",\n  \"thumbAlignment\",\n  \"thumbSize\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.createSplitProps)(props);\nvar thumbProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\"index\", \"name\"]);\nvar splitThumbProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.createSplitProps)(thumbProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/slider/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/store/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/store/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   globalRef: () => (/* binding */ globalRef),\n/* harmony export */   proxy: () => (/* binding */ proxy),\n/* harmony export */   proxyWithComputed: () => (/* binding */ proxyWithComputed),\n/* harmony export */   ref: () => (/* binding */ ref),\n/* harmony export */   snapshot: () => (/* binding */ snapshot),\n/* harmony export */   subscribe: () => (/* binding */ subscribe)\n/* harmony export */ });\n/* harmony import */ var proxy_compare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-compare */ \"(ssr)/./node_modules/proxy-compare/dist/index.js\");\n\n\n// src/global.ts\nfunction glob() {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n}\nfunction globalRef(key, value) {\n  const g = glob();\n  if (!g) return value();\n  g[key] || (g[key] = value());\n  return g[key];\n}\nvar refSet = globalRef(\"__zag__refSet\", () => /* @__PURE__ */ new WeakSet());\n\n// src/utils.ts\nvar isReactElement = (x) => typeof x === \"object\" && x !== null && \"$$typeof\" in x && \"props\" in x;\nvar isVueElement = (x) => typeof x === \"object\" && x !== null && \"__v_isVNode\" in x;\nvar isDOMElement = (x) => typeof x === \"object\" && x !== null && \"nodeType\" in x && typeof x.nodeName === \"string\";\nvar isElement = (x) => isReactElement(x) || isVueElement(x) || isDOMElement(x);\nvar isObject = (x) => x !== null && typeof x === \"object\";\nvar canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !isElement(x) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer) && !(x instanceof Promise);\nvar isDev = () => \"development\" !== \"production\";\n\n// src/clone.ts\nfunction set(obj, key, val) {\n  if (typeof val.value === \"object\" && !canProxy(val.value)) val.value = clone(val.value);\n  if (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === \"__proto__\") {\n    Object.defineProperty(obj, key, val);\n  } else obj[key] = val.value;\n}\nfunction clone(x) {\n  if (typeof x !== \"object\") return x;\n  var i = 0, k, list, tmp, str = Object.prototype.toString.call(x);\n  if (str === \"[object Object]\") {\n    tmp = Object.create(Object.getPrototypeOf(x) || null);\n  } else if (str === \"[object Array]\") {\n    tmp = Array(x.length);\n  } else if (str === \"[object Set]\") {\n    tmp = /* @__PURE__ */ new Set();\n    x.forEach(function(val) {\n      tmp.add(clone(val));\n    });\n  } else if (str === \"[object Map]\") {\n    tmp = /* @__PURE__ */ new Map();\n    x.forEach(function(val, key) {\n      tmp.set(clone(key), clone(val));\n    });\n  } else if (str === \"[object Date]\") {\n    tmp = /* @__PURE__ */ new Date(+x);\n  } else if (str === \"[object RegExp]\") {\n    tmp = new RegExp(x.source, x.flags);\n  } else if (str === \"[object DataView]\") {\n    tmp = new x.constructor(clone(x.buffer));\n  } else if (str === \"[object ArrayBuffer]\") {\n    tmp = x.slice(0);\n  } else if (str === \"[object Blob]\") {\n    tmp = x.slice();\n  } else if (str.slice(-6) === \"Array]\") {\n    tmp = new x.constructor(x);\n  }\n  if (tmp) {\n    for (list = Object.getOwnPropertySymbols(x); i < list.length; i++) {\n      set(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n    }\n    for (i = 0, list = Object.getOwnPropertyNames(x); i < list.length; i++) {\n      if (Object.hasOwnProperty.call(tmp, k = list[i]) && tmp[k] === x[k]) continue;\n      set(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n    }\n  }\n  return tmp || x;\n}\nvar proxyStateMap = globalRef(\"__zag__proxyStateMap\", () => /* @__PURE__ */ new WeakMap());\nvar buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version) => {\n  const cache = snapCache.get(target);\n  if (cache?.[0] === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.markToTrack)(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    const value = Reflect.get(target, key);\n    if (refSet.has(value)) {\n      (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.markToTrack)(value, false);\n      snap[key] = value;\n    } else if (proxyStateMap.has(value)) {\n      snap[key] = snapshot(value);\n    } else {\n      snap[key] = value;\n    }\n  });\n  return Object.freeze(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction2 = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if (isDev() && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      entry[1]?.();\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if (isDev() && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(value) || value;\n      }\n      let nextValue = value;\n      if (Object.getOwnPropertyDescriptor(target, prop)?.set) ; else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxy(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [baseObject, ensureVersion, createSnapshot, addListener];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(initialObject, key);\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction2,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nvar [proxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return proxyFunction(initialObject);\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if (isDev() && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if (isDev() && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion());\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\n\n// src/proxy-computed.ts\nfunction proxyWithComputed(initialObject, computedFns) {\n  const keys = Object.keys(computedFns);\n  keys.forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(initialObject, key)) {\n      throw new Error(\"object property already defined\");\n    }\n    const computedFn = computedFns[key];\n    const { get, set: set2 } = typeof computedFn === \"function\" ? { get: computedFn } : computedFn;\n    const desc = {};\n    desc.get = () => get(snapshot(proxyObject));\n    if (set2) {\n      desc.set = (newValue) => set2(proxyObject, newValue);\n    }\n    Object.defineProperty(initialObject, key, desc);\n  });\n  const proxyObject = proxy(initialObject);\n  return proxyObject;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/store/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/switch/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/switch/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/form-utils */ \"(ssr)/./node_modules/@zag-js/form-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/switch.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"switch\").parts(\"root\", \"label\", \"control\", \"thumb\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `switch:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `switch:${ctx.id}:label`,\n  getThumbId: (ctx) => ctx.ids?.thumb ?? `switch:${ctx.id}:thumb`,\n  getControlId: (ctx) => ctx.ids?.control ?? `switch:${ctx.id}:control`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `switch:${ctx.id}:input`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx))\n});\n\n// src/switch.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const checked = state.context.checked;\n  const focused = !disabled && state.context.focused;\n  const focusVisible = !disabled && state.context.focusVisible;\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.active),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.hovered),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": state.context.checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid)\n  };\n  return {\n    checked,\n    disabled,\n    focused,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          if (disabled) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === dom.getHiddenInputEl(state.context)) {\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context)\n      });\n    },\n    getThumbProps() {\n      return normalize.element({\n        ...parts.thumb.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getThumbId(state.context),\n        \"aria-hidden\": true\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"aria-hidden\": true\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        type: \"checkbox\",\n        required: state.context.required,\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-invalid\": state.context.invalid,\n        name: state.context.name,\n        form: state.context.form,\n        value: state.context.value,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"switch\",\n      initial: \"ready\",\n      context: {\n        checked: false,\n        label: \"switch\",\n        value: \"on\",\n        disabled: false,\n        ...ctx,\n        fieldsetDisabled: false,\n        focusVisible: false\n      },\n      computed: {\n        isDisabled: (ctx2) => ctx2.disabled || ctx2.fieldsetDisabled\n      },\n      watch: {\n        disabled: \"removeFocusIfNeeded\",\n        checked: \"syncInputElement\"\n      },\n      activities: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n      on: {\n        \"CHECKED.TOGGLE\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"toggleChecked\"]\n          }\n        ],\n        \"CHECKED.SET\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setChecked\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"setChecked\"]\n          }\n        ],\n        \"CONTEXT.SET\": {\n          actions: [\"setContext\"]\n        }\n      },\n      states: {\n        ready: {}\n      }\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted\n      },\n      activities: {\n        trackPressEvent(ctx2) {\n          if (ctx2.isDisabled) return;\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n            pointerNode: dom.getRootEl(ctx2),\n            keyboardNode: dom.getHiddenInputEl(ctx2),\n            isValidKey: (event) => event.key === \" \",\n            onPress: () => ctx2.active = false,\n            onPressStart: () => ctx2.active = true,\n            onPressEnd: () => ctx2.active = false\n          });\n        },\n        trackFocusVisible(ctx2) {\n          if (ctx2.isDisabled) return;\n          return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: dom.getRootNode(ctx2) });\n        },\n        trackFormControlState(ctx2, _evt, { send, initialContext }) {\n          return (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__.trackFormControl)(dom.getHiddenInputEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"CHECKED.SET\", checked: !!initialContext.checked, src: \"form-reset\" });\n            }\n          });\n        }\n      },\n      actions: {\n        setContext(ctx2, evt) {\n          Object.assign(ctx2, evt.context);\n        },\n        syncInputElement(ctx2) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          if (!inputEl) return;\n          inputEl.checked = !!ctx2.checked;\n        },\n        removeFocusIfNeeded(ctx2) {\n          if (ctx2.disabled && ctx2.focused) {\n            ctx2.focused = false;\n          }\n        },\n        setChecked(ctx2, evt) {\n          set.checked(ctx2, evt.checked);\n        },\n        toggleChecked(ctx2, _evt) {\n          set.checked(ctx2, !ctx2.checked);\n        },\n        dispatchChangeEvent(ctx2) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          (0,_zag_js_form_utils__WEBPACK_IMPORTED_MODULE_5__.dispatchInputCheckedEvent)(inputEl, { checked: ctx2.checked });\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onCheckedChange?.({ checked: ctx.checked });\n  }\n};\nvar set = {\n  checked: (ctx, checked) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isEqual)(ctx.checked, checked)) return;\n    ctx.checked = checked;\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"checked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"label\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/switch/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/tooltip/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/tooltip/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/tooltip.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"tooltip\").parts(\"trigger\", \"arrow\", \"arrowTip\", \"positioner\", \"content\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `tooltip:${ctx.id}:trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `tooltip:${ctx.id}:content`,\n  getArrowId: (ctx) => ctx.ids?.arrow ?? `tooltip:${ctx.id}:arrow`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `tooltip:${ctx.id}:popper`,\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getArrowEl: (ctx) => dom.getById(ctx, dom.getArrowId(ctx))\n});\nvar store = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.proxy)({\n  id: null,\n  prevId: null,\n  setId(val) {\n    this.prevId = this.id;\n    this.id = val;\n  }\n});\n\n// src/tooltip.connect.ts\nfunction connect(state, send, normalize) {\n  const id = state.context.id;\n  const hasAriaLabel = state.context.hasAriaLabel;\n  const open = state.hasTag(\"open\");\n  const triggerId = dom.getTriggerId(state.context);\n  const contentId = dom.getContentId(state.context);\n  const disabled = state.context.disabled;\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: triggerId,\n        dir: state.context.dir,\n        \"data-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-describedby\": open ? contentId : void 0,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!state.context.closeOnClick) return;\n          send({ type: \"CLOSE\", src: \"trigger.click\" });\n        },\n        onFocus(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (state.event.src === \"trigger.pointerdown\") return;\n          if (!(0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__.isFocusVisible)()) return;\n          send({ type: \"OPEN\", src: \"trigger.focus\" });\n        },\n        onBlur(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (id === store.id) {\n            send({ type: \"CLOSE\", src: \"trigger.blur\" });\n          }\n        },\n        onPointerDown(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!state.context.closeOnPointerDown) return;\n          if (id === store.id) {\n            send({ type: \"CLOSE\", src: \"trigger.pointerdown\" });\n          }\n        },\n        onPointerMove(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"POINTER_MOVE\");\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send(\"POINTER_LEAVE\");\n        },\n        onPointerCancel() {\n          if (disabled) return;\n          send(\"POINTER_LEAVE\");\n        }\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: dom.getPositionerId(state.context),\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: hasAriaLabel ? void 0 : \"tooltip\",\n        id: hasAriaLabel ? void 0 : contentId,\n        \"data-placement\": state.context.currentPlacement,\n        onPointerEnter() {\n          send(\"CONTENT.POINTER_MOVE\");\n        },\n        onPointerLeave() {\n          send(\"CONTENT.POINTER_LEAVE\");\n        },\n        style: {\n          pointerEvents: state.context.interactive ? \"auto\" : \"none\"\n        }\n      });\n    }\n  };\n}\nvar { and, not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_5__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)(\n    {\n      id: \"tooltip\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      activities: [\"trackFocusVisible\"],\n      context: {\n        openDelay: 1e3,\n        closeDelay: 500,\n        closeOnPointerDown: true,\n        closeOnEscape: true,\n        interactive: false,\n        closeOnScroll: true,\n        closeOnClick: true,\n        disabled: false,\n        ...ctx,\n        currentPlacement: void 0,\n        hasPointerMoveOpened: false,\n        positioning: {\n          placement: \"bottom\",\n          ...ctx.positioning\n        }\n      },\n      computed: {\n        hasAriaLabel: (ctx2) => !!ctx2[\"aria-label\"]\n      },\n      watch: {\n        disabled: [\"closeIfDisabled\"],\n        open: [\"toggleVisibility\"]\n      },\n      states: {\n        closed: {\n          tags: [\"closed\"],\n          entry: [\"clearGlobalId\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ],\n            POINTER_LEAVE: {\n              actions: [\"clearPointerMoveOpened\"]\n            },\n            POINTER_MOVE: [\n              {\n                guard: and(\"noVisibleTooltip\", not(\"hasPointerMoveOpened\")),\n                target: \"opening\"\n              },\n              {\n                guard: not(\"hasPointerMoveOpened\"),\n                target: \"open\",\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n              }\n            ]\n          }\n        },\n        opening: {\n          tags: [\"closed\"],\n          activities: [\"trackScroll\", \"trackPointerlockChange\"],\n          after: {\n            OPEN_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ],\n            POINTER_LEAVE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"clearPointerMoveOpened\", \"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackEscapeKey\", \"trackScroll\", \"trackPointerlockChange\", \"trackPositioning\"],\n          entry: [\"setGlobalId\"],\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            POINTER_LEAVE: [\n              {\n                guard: \"isVisible\",\n                target: \"closing\",\n                actions: [\"clearPointerMoveOpened\"]\n              },\n              // == group ==\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n              }\n            ],\n            \"CONTENT.POINTER_LEAVE\": {\n              guard: \"isInteractive\",\n              target: \"closing\"\n            },\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        },\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackStore\", \"trackPositioning\"],\n          after: {\n            CLOSE_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            \"CONTROLLED.OPEN\": \"open\",\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            POINTER_MOVE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\", \"toggleVisibility\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n              }\n            ],\n            \"CONTENT.POINTER_MOVE\": {\n              guard: \"isInteractive\",\n              target: \"open\"\n            },\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        trackFocusVisible(ctx2) {\n          return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__.trackFocusVisible)({ root: dom.getRootNode(ctx2) });\n        },\n        trackPositioning(ctx2) {\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackPointerlockChange(ctx2, _evt, { send }) {\n          const onChange = () => send({ type: \"CLOSE\", src: \"pointerlock:change\" });\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(dom.getDoc(ctx2), \"pointerlockchange\", onChange, false);\n        },\n        trackScroll(ctx2, _evt, { send }) {\n          if (!ctx2.closeOnScroll) return;\n          const triggerEl = dom.getTriggerEl(ctx2);\n          if (!triggerEl) return;\n          const overflowParents = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors)(triggerEl);\n          const cleanups = overflowParents.map((overflowParent) => {\n            const onScroll = () => {\n              send({ type: \"CLOSE\", src: \"scroll\" });\n            };\n            return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(overflowParent, \"scroll\", onScroll, { passive: true, capture: true });\n          });\n          return () => {\n            cleanups.forEach((fn) => fn?.());\n          };\n        },\n        trackStore(ctx2, _evt, { send }) {\n          return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.subscribe)(store, () => {\n            if (store.id !== ctx2.id) {\n              send({ type: \"CLOSE\", src: \"id.change\" });\n            }\n          });\n        },\n        trackEscapeKey(ctx2, _evt, { send }) {\n          if (!ctx2.closeOnEscape) return;\n          const onKeyDown = (event) => {\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n            if (event.key !== \"Escape\") return;\n            event.stopPropagation();\n            send({ type: \"CLOSE\", src: \"keydown.escape\" });\n          };\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(dom.getDoc(ctx2), \"keydown\", onKeyDown, true);\n        }\n      },\n      actions: {\n        setGlobalId(ctx2) {\n          store.setId(ctx2.id);\n        },\n        clearGlobalId(ctx2) {\n          if (ctx2.id === store.id) {\n            store.setId(null);\n          }\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        closeIfDisabled(ctx2, _evt, { send }) {\n          if (!ctx2.disabled) return;\n          send({ type: \"CLOSE\", src: \"disabled.change\" });\n        },\n        reposition(ctx2, evt) {\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          queueMicrotask(() => {\n            send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n          });\n        },\n        setPointerMoveOpened(ctx2) {\n          ctx2.hasPointerMoveOpened = true;\n        },\n        clearPointerMoveOpened(ctx2) {\n          ctx2.hasPointerMoveOpened = false;\n        }\n      },\n      guards: {\n        noVisibleTooltip: () => store.id === null,\n        isVisible: (ctx2) => ctx2.id === store.id,\n        isInteractive: (ctx2) => ctx2.interactive,\n        hasPointerMoveOpened: (ctx2) => !!ctx2.hasPointerMoveOpened,\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      delays: {\n        OPEN_DELAY: (ctx2) => ctx2.openDelay,\n        CLOSE_DELAY: (ctx2) => ctx2.closeDelay\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"aria-label\",\n  \"closeDelay\",\n  \"closeOnEscape\",\n  \"closeOnPointerDown\",\n  \"closeOnScroll\",\n  \"closeOnClick\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"interactive\",\n  \"onOpenChange\",\n  \"open.controlled\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/tooltip/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/types/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/types/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNormalizer: () => (/* binding */ createNormalizer),\n/* harmony export */   createProps: () => (/* binding */ createProps)\n/* harmony export */ });\n// src/prop-types.ts\nfunction createNormalizer(fn) {\n  return new Proxy({}, {\n    get() {\n      return fn;\n    }\n  });\n}\n\n// src/create-props.ts\nvar createProps = () => (props) => Array.from(new Set(props));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy90eXBlcy9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7O0FBRXlDIiwic291cmNlcyI6WyIvaG9tZS9zYWNoYS9FcGl0ZWNoL0ctRVBJLTMwMC1SRU4tMy0xLXByb2plY3R3ZWVrLW5hdGhhbi5qZWFubm90L2Zyb250L25vZGVfbW9kdWxlcy9AemFnLWpzL3R5cGVzL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9wcm9wLXR5cGVzLnRzXG5mdW5jdGlvbiBjcmVhdGVOb3JtYWxpemVyKGZuKSB7XG4gIHJldHVybiBuZXcgUHJveHkoe30sIHtcbiAgICBnZXQoKSB7XG4gICAgICByZXR1cm4gZm47XG4gICAgfVxuICB9KTtcbn1cblxuLy8gc3JjL2NyZWF0ZS1wcm9wcy50c1xudmFyIGNyZWF0ZVByb3BzID0gKCkgPT4gKHByb3BzKSA9PiBBcnJheS5mcm9tKG5ldyBTZXQocHJvcHMpKTtcblxuZXhwb3J0IHsgY3JlYXRlTm9ybWFsaXplciwgY3JlYXRlUHJvcHMgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/types/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/utils/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/utils/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   addOrRemove: () => (/* binding */ addOrRemove),\n/* harmony export */   callAll: () => (/* binding */ callAll),\n/* harmony export */   cast: () => (/* binding */ cast),\n/* harmony export */   chunk: () => (/* binding */ chunk),\n/* harmony export */   clampPercent: () => (/* binding */ clampPercent),\n/* harmony export */   clampValue: () => (/* binding */ clampValue),\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   compact: () => (/* binding */ compact),\n/* harmony export */   createSplitProps: () => (/* binding */ createSplitProps),\n/* harmony export */   decrementValue: () => (/* binding */ decrementValue),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   fromLength: () => (/* binding */ fromLength),\n/* harmony export */   getClosestValue: () => (/* binding */ getClosestValue),\n/* harmony export */   getClosestValueIndex: () => (/* binding */ getClosestValueIndex),\n/* harmony export */   getMaxValueAtIndex: () => (/* binding */ getMaxValueAtIndex),\n/* harmony export */   getMinValueAtIndex: () => (/* binding */ getMinValueAtIndex),\n/* harmony export */   getNextStepValue: () => (/* binding */ getNextStepValue),\n/* harmony export */   getPercentValue: () => (/* binding */ getPercentValue),\n/* harmony export */   getPreviousStepValue: () => (/* binding */ getPreviousStepValue),\n/* harmony export */   getValuePercent: () => (/* binding */ getValuePercent),\n/* harmony export */   getValueRanges: () => (/* binding */ getValueRanges),\n/* harmony export */   getValueSetterAtIndex: () => (/* binding */ getValueSetterAtIndex),\n/* harmony export */   getValueTransformer: () => (/* binding */ getValueTransformer),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   hasProp: () => (/* binding */ hasProp),\n/* harmony export */   incrementValue: () => (/* binding */ incrementValue),\n/* harmony export */   insertAt: () => (/* binding */ insertAt),\n/* harmony export */   invariant: () => (/* binding */ invariant),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isBoolean: () => (/* binding */ isBoolean),\n/* harmony export */   isDev: () => (/* binding */ isDev),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isNull: () => (/* binding */ isNull),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isValueAtMax: () => (/* binding */ isValueAtMax),\n/* harmony export */   isValueAtMin: () => (/* binding */ isValueAtMin),\n/* harmony export */   isValueWithinRange: () => (/* binding */ isValueWithinRange),\n/* harmony export */   json: () => (/* binding */ json),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   mod: () => (/* binding */ mod),\n/* harmony export */   nan: () => (/* binding */ nan),\n/* harmony export */   next: () => (/* binding */ next),\n/* harmony export */   nextIndex: () => (/* binding */ nextIndex),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   prev: () => (/* binding */ prev),\n/* harmony export */   prevIndex: () => (/* binding */ prevIndex),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeAt: () => (/* binding */ removeAt),\n/* harmony export */   roundToDpr: () => (/* binding */ roundToDpr),\n/* harmony export */   roundToStepPrecision: () => (/* binding */ roundToStepPrecision),\n/* harmony export */   roundValue: () => (/* binding */ roundValue),\n/* harmony export */   runIfFn: () => (/* binding */ runIfFn),\n/* harmony export */   setValueAtIndex: () => (/* binding */ setValueAtIndex),\n/* harmony export */   snapValueToStep: () => (/* binding */ snapValueToStep),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   toArray: () => (/* binding */ toArray),\n/* harmony export */   toFixedNumber: () => (/* binding */ toFixedNumber),\n/* harmony export */   tryCatch: () => (/* binding */ tryCatch),\n/* harmony export */   uniq: () => (/* binding */ uniq),\n/* harmony export */   uuid: () => (/* binding */ uuid),\n/* harmony export */   warn: () => (/* binding */ warn),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n// src/array.ts\nfunction toArray(v) {\n  if (!v) return [];\n  return Array.isArray(v) ? v : [v];\n}\nvar fromLength = (length) => Array.from(Array(length).keys());\nvar first = (v) => v[0];\nvar last = (v) => v[v.length - 1];\nvar isEmpty = (v) => v.length === 0;\nvar has = (v, t) => v.indexOf(t) !== -1;\nvar add = (v, ...items) => v.concat(items);\nvar remove = (v, ...items) => v.filter((t) => !items.includes(t));\nvar removeAt = (v, i) => v.filter((_, idx) => idx !== i);\nvar insertAt = (v, i, ...items) => [...v.slice(0, i), ...items, ...v.slice(i)];\nvar uniq = (v) => Array.from(new Set(v));\nvar addOrRemove = (v, item) => {\n  if (has(v, item)) return remove(v, item);\n  return add(v, item);\n};\nfunction clear(v) {\n  while (v.length > 0) v.pop();\n  return v;\n}\nfunction nextIndex(v, idx, opts = {}) {\n  const { step = 1, loop = true } = opts;\n  const next2 = idx + step;\n  const len = v.length;\n  const last2 = len - 1;\n  if (idx === -1) return step > 0 ? 0 : last2;\n  if (next2 < 0) return loop ? last2 : 0;\n  if (next2 >= len) return loop ? 0 : idx > len ? len : idx;\n  return next2;\n}\nfunction next(v, idx, opts = {}) {\n  return v[nextIndex(v, idx, opts)];\n}\nfunction prevIndex(v, idx, opts = {}) {\n  const { step = 1, loop = true } = opts;\n  return nextIndex(v, idx, { step: -step, loop });\n}\nfunction prev(v, index, opts = {}) {\n  return v[prevIndex(v, index, opts)];\n}\nvar chunk = (v, size) => {\n  const res = [];\n  return v.reduce((rows, value, index) => {\n    if (index % size === 0) rows.push([value]);\n    else last(rows)?.push(value);\n    return rows;\n  }, res);\n};\n\n// src/equal.ts\nvar isArrayLike = (value) => value?.constructor.name === \"Array\";\nvar isArrayEqual = (a, b) => {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (!isEqual(a[i], b[i])) return false;\n  }\n  return true;\n};\nvar isEqual = (a, b) => {\n  if (Object.is(a, b)) return true;\n  if (a == null && b != null || a != null && b == null) return false;\n  if (typeof a?.isEqual === \"function\" && typeof b?.isEqual === \"function\") {\n    return a.isEqual(b);\n  }\n  if (typeof a === \"function\" && typeof b === \"function\") {\n    return a.toString() === b.toString();\n  }\n  if (isArrayLike(a) && isArrayLike(b)) {\n    return isArrayEqual(Array.from(a), Array.from(b));\n  }\n  if (!(typeof a === \"object\") || !(typeof b === \"object\")) return false;\n  const keys = Object.keys(b ?? /* @__PURE__ */ Object.create(null));\n  const length = keys.length;\n  for (let i = 0; i < length; i++) {\n    const hasKey = Reflect.has(a, keys[i]);\n    if (!hasKey) return false;\n  }\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    if (!isEqual(a[key], b[key])) return false;\n  }\n  return true;\n};\n\n// src/functions.ts\nvar runIfFn = (v, ...a) => {\n  const res = typeof v === \"function\" ? v(...a) : v;\n  return res ?? void 0;\n};\nvar cast = (v) => v;\nvar noop = () => {\n};\nvar callAll = (...fns) => (...a) => {\n  fns.forEach(function(fn) {\n    fn?.(...a);\n  });\n};\nvar uuid = /* @__PURE__ */ (() => {\n  let id = 0;\n  return () => {\n    id++;\n    return id.toString(36);\n  };\n})();\nfunction match(key, record, ...args) {\n  if (key in record) {\n    const fn = record[key];\n    return typeof fn === \"function\" ? fn(...args) : fn;\n  }\n  const error = new Error(`No matching key: ${JSON.stringify(key)} in ${JSON.stringify(Object.keys(record))}`);\n  Error.captureStackTrace?.(error, match);\n  throw error;\n}\nvar tryCatch = (fn, fallback) => {\n  try {\n    return fn();\n  } catch (error) {\n    if (error instanceof Error) {\n      Error.captureStackTrace?.(error, tryCatch);\n    }\n    return fallback?.();\n  }\n};\n\n// src/guard.ts\nvar isDev = () => \"development\" !== \"production\";\nvar isArray = (v) => Array.isArray(v);\nvar isBoolean = (v) => v === true || v === false;\nvar isObjectLike = (v) => v != null && typeof v === \"object\";\nvar isObject = (v) => isObjectLike(v) && !isArray(v);\nvar isNumber = (v) => typeof v === \"number\" && !Number.isNaN(v);\nvar isString = (v) => typeof v === \"string\";\nvar isFunction = (v) => typeof v === \"function\";\nvar isNull = (v) => v == null;\nvar hasProp = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nvar baseGetTag = (v) => Object.prototype.toString.call(v);\nvar fnToString = Function.prototype.toString;\nvar objectCtorString = fnToString.call(Object);\nvar isPlainObject = (v) => {\n  if (!isObjectLike(v) || baseGetTag(v) != \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(v);\n  if (proto === null) return true;\n  const Ctor = hasProp(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor == \"function\" && Ctor instanceof Ctor && fnToString.call(Ctor) == objectCtorString;\n};\n\n// src/number.ts\nvar { floor, abs, round, min, max, pow, sign } = Math;\nvar isNaN = (v) => Number.isNaN(v);\nvar nan = (v) => isNaN(v) ? 0 : v;\nvar mod = (v, m) => (v % m + m) % m;\nvar wrap = (v, vmax) => (v % vmax + vmax) % vmax;\nvar getMinValueAtIndex = (i, v, vmin) => i === 0 ? vmin : v[i - 1];\nvar getMaxValueAtIndex = (i, v, vmax) => i === v.length - 1 ? vmax : v[i + 1];\nvar isValueAtMax = (v, vmax) => nan(v) >= vmax;\nvar isValueAtMin = (v, vmin) => nan(v) <= vmin;\nvar isValueWithinRange = (v, vmin, vmax) => nan(v) >= vmin && nan(v) <= vmax;\nvar roundValue = (v, vmin, step) => round((nan(v) - vmin) / step) * step + vmin;\nvar clampValue = (v, vmin, vmax) => min(max(nan(v), vmin), vmax);\nvar clampPercent = (v) => clampValue(v, 0, 1);\nvar getValuePercent = (v, vmin, vmax) => (nan(v) - vmin) / (vmax - vmin);\nvar getPercentValue = (p, vmin, vmax, step) => clampValue(roundValue(p * (vmax - vmin) + vmin, vmin, step), vmin, vmax);\nvar roundToStepPrecision = (v, step) => {\n  let rv = v;\n  let ss = step.toString();\n  let pi = ss.indexOf(\".\");\n  let p = pi >= 0 ? ss.length - pi : 0;\n  if (p > 0) {\n    let pw = pow(10, p);\n    rv = round(rv * pw) / pw;\n  }\n  return rv;\n};\nvar roundToDpr = (v, dpr) => typeof dpr === \"number\" ? floor(v * dpr + 0.5) / dpr : round(v);\nvar snapValueToStep = (v, vmin, vmax, step) => {\n  vmin = Number(vmin);\n  vmax = Number(vmax);\n  let remainder = (v - (isNaN(vmin) ? 0 : vmin)) % step;\n  let sv = roundToStepPrecision(\n    abs(remainder) * 2 >= step ? v + sign(remainder) * (step - abs(remainder)) : v - remainder,\n    step\n  );\n  if (!isNaN(vmin)) {\n    if (sv < vmin) {\n      sv = vmin;\n    } else if (!isNaN(vmax) && sv > vmax) {\n      sv = vmin + floor(roundToStepPrecision((vmax - vmin) / step, step)) * step;\n    }\n  } else if (!isNaN(vmax) && sv > vmax) {\n    sv = vmin + floor(roundToStepPrecision((vmax - vmin) / step, step)) * step;\n  }\n  return roundToStepPrecision(sv, step);\n};\nvar setValueAtIndex = (vs, i, v) => {\n  if (vs[i] === v) return vs;\n  return [...vs.slice(0, i), v, ...vs.slice(i + 1)];\n};\nfunction getValueSetterAtIndex(index, ctx) {\n  const minValueAtIndex = getMinValueAtIndex(index, ctx.values, ctx.min);\n  const maxValueAtIndex = getMaxValueAtIndex(index, ctx.values, ctx.max);\n  let nextValues = ctx.values.slice();\n  return function setValue(value) {\n    let nextValue = snapValueToStep(value, minValueAtIndex, maxValueAtIndex, ctx.step);\n    nextValues = setValueAtIndex(nextValues, index, value);\n    nextValues[index] = nextValue;\n    return nextValues;\n  };\n}\nfunction getNextStepValue(index, ctx) {\n  const nextValue = ctx.values[index] + ctx.step;\n  return getValueSetterAtIndex(index, ctx)(nextValue);\n}\nfunction getPreviousStepValue(index, ctx) {\n  const nextValue = ctx.values[index] - ctx.step;\n  return getValueSetterAtIndex(index, ctx)(nextValue);\n}\nvar getClosestValueIndex = (vs, t) => {\n  let i = vs.findIndex((v) => t - v < 0);\n  if (i === 0) return i;\n  if (i === -1) return vs.length - 1;\n  let vLeft = vs[i - 1];\n  let vRight = vs[i];\n  if (abs(vLeft - t) < abs(vRight - t)) return i - 1;\n  return i;\n};\nvar getClosestValue = (vs, t) => vs[getClosestValueIndex(vs, t)];\nvar getValueRanges = (vs, vmin, vmax, gap) => vs.map((v, i) => ({\n  min: i === 0 ? vmin : vs[i - 1] + gap,\n  max: i === vs.length - 1 ? vmax : vs[i + 1] - gap,\n  value: v\n}));\nvar getValueTransformer = (va, vb) => {\n  const [a, b] = va;\n  const [c, d] = vb;\n  return (v) => a === b || c === d ? c : c + (d - c) / (b - a) * (v - a);\n};\nvar toFixedNumber = (v, d = 0, b = 10) => {\n  const pow2 = Math.pow(b, d);\n  return round(v * pow2) / pow2;\n};\nvar countDecimals = (value) => {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1, p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n};\nvar decimalOp = (a, op, b) => {\n  let result = op === \"+\" ? a + b : a - b;\n  if (a % 1 !== 0 || b % 1 !== 0) {\n    const multiplier = 10 ** Math.max(countDecimals(a), countDecimals(b));\n    a = Math.round(a * multiplier);\n    b = Math.round(b * multiplier);\n    result = op === \"+\" ? a + b : a - b;\n    result /= multiplier;\n  }\n  return result;\n};\nvar incrementValue = (v, s) => decimalOp(nan(v), \"+\", s);\nvar decrementValue = (v, s) => decimalOp(nan(v), \"-\", s);\n\n// src/object.ts\nfunction compact(obj) {\n  if (!isPlainObject2(obj) || obj === void 0) return obj;\n  const keys = Reflect.ownKeys(obj).filter((key) => typeof key === \"string\");\n  const filtered = {};\n  for (const key of keys) {\n    const value = obj[key];\n    if (value !== void 0) {\n      filtered[key] = compact(value);\n    }\n  }\n  return filtered;\n}\nvar json = (v) => JSON.parse(JSON.stringify(v));\nvar isPlainObject2 = (v) => {\n  return v && typeof v === \"object\" && v.constructor === Object;\n};\nfunction pick(obj, keys) {\n  const filtered = {};\n  for (const key of keys) {\n    const value = obj[key];\n    if (value !== void 0) {\n      filtered[key] = value;\n    }\n  }\n  return filtered;\n}\nfunction splitProps(props, keys) {\n  const rest = {};\n  const result = {};\n  const keySet = new Set(keys);\n  for (const key in props) {\n    if (keySet.has(key)) {\n      result[key] = props[key];\n    } else {\n      rest[key] = props[key];\n    }\n  }\n  return [result, rest];\n}\nvar createSplitProps = (keys) => {\n  return function split(props) {\n    return splitProps(props, keys);\n  };\n};\nfunction omit(obj, keys) {\n  return createSplitProps(keys)(obj)[1];\n}\n\n// src/warning.ts\nfunction warn(...a) {\n  const m = a.length === 1 ? a[0] : a[1];\n  const c = a.length === 2 ? a[0] : true;\n  if (c && \"development\" !== \"production\") {\n    console.warn(m);\n  }\n}\nfunction invariant(...a) {\n  const m = a.length === 1 ? a[0] : a[1];\n  const c = a.length === 2 ? a[0] : true;\n  if (c && \"development\" !== \"production\") {\n    throw new Error(m);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\n");

/***/ })

};
;